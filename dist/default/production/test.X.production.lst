

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Feb 11 17:57:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1705
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.45
    40                           ; Generated 16/11/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F1705 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000E                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  008C                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010E                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011C                     	;# 
   128  018C                     	;# 
   129  018E                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0197                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020E                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0216                     	;# 
   179  0216                     	;# 
   180  0217                     	;# 
   181  0217                     	;# 
   182  028C                     	;# 
   183  028E                     	;# 
   184  0291                     	;# 
   185  0291                     	;# 
   186  0292                     	;# 
   187  0293                     	;# 
   188  0293                     	;# 
   189  0298                     	;# 
   190  0298                     	;# 
   191  0299                     	;# 
   192  029A                     	;# 
   193  029A                     	;# 
   194  029E                     	;# 
   195  030C                     	;# 
   196  030E                     	;# 
   197  038C                     	;# 
   198  038E                     	;# 
   199  0391                     	;# 
   200  0392                     	;# 
   201  0393                     	;# 
   202  0397                     	;# 
   203  0398                     	;# 
   204  0399                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  041C                     	;# 
   209  041D                     	;# 
   210  041E                     	;# 
   211  0511                     	;# 
   212  0515                     	;# 
   213  0617                     	;# 
   214  0618                     	;# 
   215  0619                     	;# 
   216  0619                     	;# 
   217  061A                     	;# 
   218  061B                     	;# 
   219  061C                     	;# 
   220  061C                     	;# 
   221  0691                     	;# 
   222  0692                     	;# 
   223  0693                     	;# 
   224  0694                     	;# 
   225  0695                     	;# 
   226  0696                     	;# 
   227  0697                     	;# 
   228  0698                     	;# 
   229  0699                     	;# 
   230  069A                     	;# 
   231  069B                     	;# 
   232  069C                     	;# 
   233  069D                     	;# 
   234  069E                     	;# 
   235  069F                     	;# 
   236  0E0F                     	;# 
   237  0E10                     	;# 
   238  0E11                     	;# 
   239  0E12                     	;# 
   240  0E13                     	;# 
   241  0E14                     	;# 
   242  0E15                     	;# 
   243  0E17                     	;# 
   244  0E20                     	;# 
   245  0E21                     	;# 
   246  0E22                     	;# 
   247  0E24                     	;# 
   248  0E25                     	;# 
   249  0E28                     	;# 
   250  0E29                     	;# 
   251  0E2A                     	;# 
   252  0E2B                     	;# 
   253  0E90                     	;# 
   254  0E91                     	;# 
   255  0E92                     	;# 
   256  0E94                     	;# 
   257  0E95                     	;# 
   258  0EA0                     	;# 
   259  0EA1                     	;# 
   260  0EA2                     	;# 
   261  0EA3                     	;# 
   262  0EA4                     	;# 
   263  0EA5                     	;# 
   264  0F0F                     	;# 
   265  0F10                     	;# 
   266  0F11                     	;# 
   267  0F12                     	;# 
   268  0F13                     	;# 
   269  0F14                     	;# 
   270  0F15                     	;# 
   271  0F16                     	;# 
   272  0F17                     	;# 
   273  0F18                     	;# 
   274  0F19                     	;# 
   275  0F1A                     	;# 
   276  0F1B                     	;# 
   277  0F1C                     	;# 
   278  0F1D                     	;# 
   279  0F1E                     	;# 
   280  0F1F                     	;# 
   281  0F20                     	;# 
   282  0F21                     	;# 
   283  0F22                     	;# 
   284  0F23                     	;# 
   285  0F24                     	;# 
   286  0F25                     	;# 
   287  0F26                     	;# 
   288  0F27                     	;# 
   289  0F28                     	;# 
   290  0F29                     	;# 
   291  0F2A                     	;# 
   292  0F2B                     	;# 
   293  0F2C                     	;# 
   294  0F2D                     	;# 
   295  0F9E                     	;# 
   296  0FE4                     	;# 
   297  0FE5                     	;# 
   298  0FE6                     	;# 
   299  0FE7                     	;# 
   300  0FE8                     	;# 
   301  0FE9                     	;# 
   302  0FEA                     	;# 
   303  0FEB                     	;# 
   304  0FED                     	;# 
   305  0FEE                     	;# 
   306  0FEF                     	;# 
   307                           
   308                           	psect	stringtext1
   309  1000                     __pstringtext1:	
   310  1000                     sin@coeff_a:	
   311  1000  34F4               	retlw	244
   312  1001  344A               	retlw	74
   313  1002  3448               	retlw	72
   314  1003  3495               	retlw	149
   315  1004  3495               	retlw	149
   316  1005  34C7               	retlw	199
   317  1006  34C1               	retlw	193
   318  1007  34DC               	retlw	220
   319  1008  3445               	retlw	69
   320  1009  34DC               	retlw	220
   321  100A  346D               	retlw	109
   322  100B  34C3               	retlw	195
   323  100C  34B3               	retlw	179
   324  100D  3433               	retlw	51
   325  100E  3440               	retlw	64
   326  100F                     __end_ofsin@coeff_a:	
   327                           
   328                           	psect	stringtext2
   329  100F                     __pstringtext2:	
   330  100F                     sin@coeff_b:	
   331  100F  3434               	retlw	52
   332  1010  3401               	retlw	1
   333  1011  3448               	retlw	72
   334  1012  349D               	retlw	157
   335  1013  34B0               	retlw	176
   336  1014  3445               	retlw	69
   337  1015  3400               	retlw	0
   338  1016  34DA               	retlw	218
   339  1017  3442               	retlw	66
   340  1018  3400               	retlw	0
   341  1019  3480               	retlw	128
   342  101A  343F               	retlw	63
   343  101B                     __end_ofsin@coeff_b:	
   344                           
   345                           	psect	nvBANK1
   346  00BC                     __pnvBANK1:	
   347  00BC                     main@yd:	
   348  00BC                     	ds	3
   349  00BF                     main@xd:	
   350  00BF                     	ds	3
   351  000B                     _INTCONbits	set	11
   352  0015                     _TMR0	set	21
   353  000B                     _INTCON	set	11
   354  000C                     _PORTAbits	set	12
   355  001B                     _PR2	set	27
   356  001A                     _TMR2	set	26
   357  001C                     _T2CON	set	28
   358  000E                     _PORTC	set	14
   359  000C                     _PORTA	set	12
   360  005A                     _TMR0IF	set	90
   361  00E2                     _TMR2ON	set	226
   362  008C                     _TRISAbits	set	140
   363  008E                     _TRISCbits	set	142
   364  009E                     _ADCON1	set	158
   365  009D                     _ADCON0	set	157
   366  008E                     _TRISC	set	142
   367  008C                     _TRISA	set	140
   368  0095                     _OPTION_REG	set	149
   369  0099                     _OSCCON	set	153
   370  009B                     _ADRESL	set	155
   371  009C                     _ADRESH	set	156
   372  04E9                     _GO_nDONE	set	1257
   373  0118                     _DAC1CON0	set	280
   374  0119                     _DAC1CON1	set	281
   375  019F                     _BAUD1CONbits	set	415
   376  019F                     _BAUD1CON	set	415
   377  019C                     _SP1BRGH	set	412
   378  019B                     _SP1BRGL	set	411
   379  019E                     _TX1STA	set	414
   380  019D                     _RC1STAbits	set	413
   381  018C                     _ANSELAbits	set	396
   382  019E                     _TX1STAbits	set	414
   383  019A                     _TX1REG	set	410
   384  018E                     _ANSELC	set	398
   385  018C                     _ANSELA	set	396
   386  020C                     _WPUA	set	524
   387  0291                     _CCPR1L	set	657
   388  0293                     _CCP1CON	set	659
   389  0617                     _PWM3DCL	set	1559
   390  0618                     _PWM3DCH	set	1560
   391  0E10                     _INTPPS	set	3600
   392  0EA4                     _RC4PPS	set	3748
   393  0EA2                     _RC2PPS	set	3746
   394                           
   395                           ; #config settings
   396  0000                     
   397                           	psect	cinit
   398  0034                     start_initialization:	
   399  0034                     __initialization:	
   400                           
   401                           ; Clear objects allocated to COMMON
   402  0034  01FA               	clrf	__pbssCOMMON& (0+127)
   403  0035  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   404                           
   405                           ; Clear objects allocated to BANK1
   406  0036  0021               	movlb	1	; select bank1
   407  0037  01C2               	clrf	__pbssBANK1& (0+127)
   408  0038  01C3               	clrf	(__pbssBANK1+1)& (0+127)
   409  0039                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  0039                     __end_of__initialization:	
   413  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   414  003A  0020               	movlb	0
   415  003B  3181  29DC         	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	bssCOMMON
   418  007A                     __pbssCOMMON:	
   419  007A                     isr_func@tm:	
   420  007A                     	ds	2
   421                           
   422                           	psect	bssBANK1
   423  00C2                     __pbssBANK1:	
   424  00C2                     _errno:	
   425  00C2                     	ds	2
   426                           
   427                           	psect	cstackBANK1
   428  00A0                     __pcstackBANK1:	
   429  00A0                     ?___ftsub:	
   430  00A0                     ___ftsub@f2:	
   431                           ; 3 bytes @ 0x0
   432                           
   433                           
   434                           ; 3 bytes @ 0x0
   435  00A0                     	ds	3
   436  00A3                     ___ftsub@f1:	
   437                           
   438                           ; 3 bytes @ 0x3
   439  00A3                     	ds	3
   440  00A6                     sin@y:	
   441                           
   442                           ; 3 bytes @ 0x6
   443  00A6                     	ds	3
   444  00A9                     _sin$676:	
   445                           
   446                           ; 3 bytes @ 0x9
   447  00A9                     	ds	3
   448  00AC                     sin@x2:	
   449                           
   450                           ; 3 bytes @ 0xC
   451  00AC                     	ds	3
   452  00AF                     sin@sgn:	
   453                           
   454                           ; 1 bytes @ 0xF
   455  00AF                     	ds	1
   456  00B0                     ?_main:	
   457  00B0                     main@argc:	
   458                           ; 2 bytes @ 0x10
   459                           
   460                           
   461                           ; 2 bytes @ 0x10
   462  00B0                     	ds	2
   463  00B2                     main@argv:	
   464                           
   465                           ; 2 bytes @ 0x12
   466  00B2                     	ds	2
   467  00B4                     _main$674:	
   468                           
   469                           ; 3 bytes @ 0x14
   470  00B4                     	ds	3
   471  00B7                     _main$675:	
   472                           
   473                           ; 3 bytes @ 0x17
   474  00B7                     	ds	3
   475  00BA                     main@num:	
   476                           
   477                           ; 2 bytes @ 0x1A
   478  00BA                     	ds	2
   479                           
   480                           	psect	cstackCOMMON
   481  0070                     __pcstackCOMMON:	
   482  0070                     ?_setup_tmr:	
   483  0070                     ?_setup_irq:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_setup_sci:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_setup_dac:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_flip_led:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ??_flip_led:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_isr_func:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ??_isr_func:	
   502                           ; 1 bytes @ 0x0
   503                           
   504                           
   505                           ; 1 bytes @ 0x0
   506  0070                     	ds	2
   507  0072                     ?___ftge:	
   508  0072                     ??_setup_tmr:	
   509                           ; 1 bit 
   510                           
   511  0072                     ??_setup_irq:	
   512                           ; 1 bytes @ 0x2
   513                           
   514  0072                     ??_setup_sci:	
   515                           ; 1 bytes @ 0x2
   516                           
   517  0072                     ??_setup_dac:	
   518                           ; 1 bytes @ 0x2
   519                           
   520  0072                     ?_adconv:	
   521                           ; 1 bytes @ 0x2
   522                           
   523  0072                     ?___wmul:	
   524                           ; 2 bytes @ 0x2
   525                           
   526  0072                     ?___lwdiv:	
   527                           ; 2 bytes @ 0x2
   528                           
   529  0072                     ?___ftpack:	
   530                           ; 2 bytes @ 0x2
   531                           
   532  0072                     ?_frexp:	
   533                           ; 3 bytes @ 0x2
   534                           
   535  0072                     ?___ftneg:	
   536                           ; 3 bytes @ 0x2
   537                           
   538  0072                     ___wmul@multiplier:	
   539                           ; 3 bytes @ 0x2
   540                           
   541  0072                     ___lwdiv@divisor:	
   542                           ; 2 bytes @ 0x2
   543                           
   544  0072                     ___ftpack@arg:	
   545                           ; 2 bytes @ 0x2
   546                           
   547  0072                     ___ftge@ff1:	
   548                           ; 3 bytes @ 0x2
   549                           
   550  0072                     ___ftneg@f1:	
   551                           ; 3 bytes @ 0x2
   552                           
   553  0072                     frexp@value:	
   554                           ; 3 bytes @ 0x2
   555                           
   556                           
   557                           ; 3 bytes @ 0x2
   558  0072                     	ds	2
   559  0074                     ??_adconv:	
   560  0074                     ___wmul@multiplicand:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0074                     ___lwdiv@dividend:	
   564                           ; 2 bytes @ 0x4
   565                           
   566                           
   567                           ; 2 bytes @ 0x4
   568  0074                     	ds	1
   569  0075                     ??___ftneg:	
   570  0075                     ___ftpack@exp:	
   571                           ; 1 bytes @ 0x5
   572                           
   573  0075                     frexp@eptr:	
   574                           ; 1 bytes @ 0x5
   575                           
   576  0075                     ___ftge@ff2:	
   577                           ; 1 bytes @ 0x5
   578                           
   579                           
   580                           ; 3 bytes @ 0x5
   581  0075                     	ds	1
   582  0076                     ??_frexp:	
   583  0076                     ??___wmul:	
   584                           ; 1 bytes @ 0x6
   585                           
   586  0076                     ??___lwdiv:	
   587                           ; 1 bytes @ 0x6
   588                           
   589  0076                     ___ftpack@sign:	
   590                           ; 1 bytes @ 0x6
   591                           
   592  0076                     ___wmul@product:	
   593                           ; 1 bytes @ 0x6
   594                           
   595                           
   596                           ; 2 bytes @ 0x6
   597  0076                     	ds	1
   598  0077                     ??___ftpack:	
   599  0077                     ___lwdiv@quotient:	
   600                           ; 1 bytes @ 0x7
   601                           
   602                           
   603                           ; 2 bytes @ 0x7
   604  0077                     	ds	2
   605  0079                     ___lwdiv@counter:	
   606                           
   607                           ; 1 bytes @ 0x9
   608  0079                     	ds	1
   609  007A                     ??_eval_poly:	
   610  007A                     ??_main:	
   611                           ; 1 bytes @ 0xA
   612                           
   613  007A                     ??___ftsub:	
   614                           ; 1 bytes @ 0xA
   615                           
   616                           
   617                           	psect	cstackBANK0
   618  0020                     __pcstackBANK0:	
   619                           ; 1 bytes @ 0xA
   620                           
   621  0020                     ??___ftge:	
   622  0020                     ?___ftmul:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0020                     ?___lwtoft:	
   626                           ; 3 bytes @ 0x0
   627                           
   628  0020                     adconv@temp:	
   629                           ; 3 bytes @ 0x0
   630                           
   631  0020                     ___lwtoft@c:	
   632                           ; 2 bytes @ 0x0
   633                           
   634  0020                     ___ftmul@f1:	
   635                           ; 2 bytes @ 0x0
   636                           
   637                           
   638                           ; 3 bytes @ 0x0
   639  0020                     	ds	3
   640  0023                     ??___lwtoft:	
   641  0023                     ___ftmul@f2:	
   642                           ; 1 bytes @ 0x3
   643                           
   644                           
   645                           ; 3 bytes @ 0x3
   646  0023                     	ds	3
   647  0026                     ??___ftmul:	
   648                           
   649                           ; 1 bytes @ 0x6
   650  0026                     	ds	4
   651  002A                     ___ftmul@exp:	
   652                           
   653                           ; 1 bytes @ 0xA
   654  002A                     	ds	1
   655  002B                     ___ftmul@f3_as_product:	
   656                           
   657                           ; 3 bytes @ 0xB
   658  002B                     	ds	3
   659  002E                     ___ftmul@cntr:	
   660                           
   661                           ; 1 bytes @ 0xE
   662  002E                     	ds	1
   663  002F                     ___ftmul@sign:	
   664                           
   665                           ; 1 bytes @ 0xF
   666  002F                     	ds	1
   667  0030                     ?___ftdiv:	
   668  0030                     ___ftdiv@f2:	
   669                           ; 3 bytes @ 0x10
   670                           
   671                           
   672                           ; 3 bytes @ 0x10
   673  0030                     	ds	3
   674  0033                     ___ftdiv@f1:	
   675                           
   676                           ; 3 bytes @ 0x13
   677  0033                     	ds	3
   678  0036                     ??___ftdiv:	
   679                           
   680                           ; 1 bytes @ 0x16
   681  0036                     	ds	4
   682  003A                     ___ftdiv@cntr:	
   683                           
   684                           ; 1 bytes @ 0x1A
   685  003A                     	ds	1
   686  003B                     ___ftdiv@f3:	
   687                           
   688                           ; 3 bytes @ 0x1B
   689  003B                     	ds	3
   690  003E                     ___ftdiv@exp:	
   691                           
   692                           ; 1 bytes @ 0x1E
   693  003E                     	ds	1
   694  003F                     ___ftdiv@sign:	
   695                           
   696                           ; 1 bytes @ 0x1F
   697  003F                     	ds	1
   698  0040                     ?___ftadd:	
   699  0040                     ___ftadd@f1:	
   700                           ; 3 bytes @ 0x20
   701                           
   702                           
   703                           ; 3 bytes @ 0x20
   704  0040                     	ds	3
   705  0043                     ___ftadd@f2:	
   706                           
   707                           ; 3 bytes @ 0x23
   708  0043                     	ds	3
   709  0046                     ??___ftadd:	
   710                           
   711                           ; 1 bytes @ 0x26
   712  0046                     	ds	4
   713  004A                     ___ftadd@sign:	
   714                           
   715                           ; 1 bytes @ 0x2A
   716  004A                     	ds	1
   717  004B                     ___ftadd@exp2:	
   718                           
   719                           ; 1 bytes @ 0x2B
   720  004B                     	ds	1
   721  004C                     ___ftadd@exp1:	
   722                           
   723                           ; 1 bytes @ 0x2C
   724  004C                     	ds	1
   725  004D                     ?_eval_poly:	
   726  004D                     ?___fttol:	
   727                           ; 3 bytes @ 0x2D
   728                           
   729  004D                     ___fttol@f1:	
   730                           ; 4 bytes @ 0x2D
   731                           
   732  004D                     eval_poly@x:	
   733                           ; 3 bytes @ 0x2D
   734                           
   735                           
   736                           ; 3 bytes @ 0x2D
   737  004D                     	ds	3
   738  0050                     eval_poly@d:	
   739                           
   740                           ; 2 bytes @ 0x30
   741  0050                     	ds	1
   742  0051                     ??___fttol:	
   743                           
   744                           ; 1 bytes @ 0x31
   745  0051                     	ds	1
   746  0052                     eval_poly@n:	
   747                           
   748                           ; 2 bytes @ 0x32
   749  0052                     	ds	2
   750  0054                     eval_poly@res:	
   751                           
   752                           ; 3 bytes @ 0x34
   753  0054                     	ds	1
   754  0055                     ___fttol@sign1:	
   755                           
   756                           ; 1 bytes @ 0x35
   757  0055                     	ds	1
   758  0056                     ___fttol@lval:	
   759                           
   760                           ; 4 bytes @ 0x36
   761  0056                     	ds	4
   762  005A                     ___fttol@exp1:	
   763                           
   764                           ; 1 bytes @ 0x3A
   765  005A                     	ds	1
   766  005B                     ?___altoft:	
   767  005B                     ___altoft@c:	
   768                           ; 3 bytes @ 0x3B
   769                           
   770                           
   771                           ; 4 bytes @ 0x3B
   772  005B                     	ds	4
   773  005F                     ??___altoft:	
   774                           
   775                           ; 1 bytes @ 0x3F
   776  005F                     	ds	2
   777  0061                     ___altoft@exp:	
   778                           
   779                           ; 1 bytes @ 0x41
   780  0061                     	ds	1
   781  0062                     ___altoft@sign:	
   782                           
   783                           ; 1 bytes @ 0x42
   784  0062                     	ds	1
   785  0063                     ?_floor:	
   786  0063                     floor@x:	
   787                           ; 3 bytes @ 0x43
   788                           
   789                           
   790                           ; 3 bytes @ 0x43
   791  0063                     	ds	3
   792  0066                     ??_floor:	
   793                           
   794                           ; 1 bytes @ 0x46
   795  0066                     	ds	1
   796  0067                     floor@i:	
   797                           
   798                           ; 3 bytes @ 0x47
   799  0067                     	ds	3
   800  006A                     floor@expon:	
   801                           
   802                           ; 2 bytes @ 0x4A
   803  006A                     	ds	2
   804  006C                     ?_sin:	
   805  006C                     sin@f:	
   806                           ; 3 bytes @ 0x4C
   807                           
   808                           
   809                           ; 3 bytes @ 0x4C
   810  006C                     	ds	3
   811  006F                     ??_sin:	
   812                           
   813                           ; 1 bytes @ 0x4F
   814  006F                     	ds	1
   815                           
   816                           	psect	maintext
   817  01DC                     __pmaintext:	
   818 ;;
   819 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   820 ;;
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 65 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  argc            2   16[BANK1 ] int 
   826 ;;  argv            2   18[BANK1 ] PTR PTR unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  num             2   26[BANK1 ] unsigned int 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  2   16[BANK1 ] int 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : B1F/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   838 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   841 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;Total ram usage:       12 bytes
   843 ;; Hardware stack levels required when called:    6
   844 ;; This function calls:
   845 ;;		___ftadd
   846 ;;		___ftdiv
   847 ;;		___ftge
   848 ;;		___ftmul
   849 ;;		___fttol
   850 ;;		___lwdiv
   851 ;;		___lwtoft
   852 ;;		_adconv
   853 ;;		_setup_dac
   854 ;;		_setup_irq
   855 ;;		_setup_sci
   856 ;;		_setup_tmr
   857 ;;		_sin
   858 ;; This function is called by:
   859 ;;		Startup code after reset
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _main
   865  01DC                     _main:	
   866                           
   867                           ;main.c: 66: unsigned int num;
   868                           ;main.c: 67: static float yd = 0;
   869                           ;main.c: 68: static float xd = 0;
   870                           ;main.c: 71: OSCCON = 0b01110010 ;
   871                           
   872                           ;incstack = 0
   873                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   874  01DC  3072               	movlw	114
   875  01DD  0021               	movlb	1	; select bank1
   876  01DE  0099               	movwf	25	;volatile
   877                           
   878                           ;main.c: 72: OPTION_REG = 0b00000000 ;
   879  01DF  0195               	clrf	21	;volatile
   880                           
   881                           ;main.c: 73: ANSELA = 0b00000000 ;
   882  01E0  0023               	movlb	3	; select bank3
   883  01E1  018C               	clrf	12	;volatile
   884                           
   885                           ;main.c: 74: ANSELC = 0b10000000 ;
   886  01E2  3080               	movlw	128
   887  01E3  008E               	movwf	14	;volatile
   888                           
   889                           ;main.c: 75: TRISA = 0b00100000 ;
   890  01E4  3020               	movlw	32
   891  01E5  0021               	movlb	1	; select bank1
   892  01E6  008C               	movwf	12	;volatile
   893                           
   894                           ;main.c: 76: TRISC = 0b00001000 ;
   895  01E7  3008               	movlw	8
   896  01E8  008E               	movwf	14	;volatile
   897                           
   898                           ;main.c: 77: WPUA = 0b00100000 ;
   899  01E9  3020               	movlw	32
   900  01EA  0024               	movlb	4	; select bank4
   901  01EB  008C               	movwf	12	;volatile
   902                           
   903                           ;main.c: 78: PORTA = 0b00000000 ;
   904  01EC  0020               	movlb	0	; select bank0
   905  01ED  018C               	clrf	12	;volatile
   906                           
   907                           ;main.c: 79: PORTC = 0b00000000 ;
   908  01EE  018E               	clrf	14	;volatile
   909                           
   910                           ;main.c: 81: ADCON0 = 0b00011101;
   911  01EF  301D               	movlw	29
   912  01F0  0021               	movlb	1	; select bank1
   913  01F1  009D               	movwf	29	;volatile
   914                           
   915                           ;main.c: 82: ADCON1 = 0b10010000;
   916  01F2  3090               	movlw	144
   917  01F3  009E               	movwf	30	;volatile
   918                           
   919                           ;main.c: 86: RC2PPS = 0b00001100 ;
   920  01F4  300C               	movlw	12
   921  01F5  003D               	movlb	29	; select bank29
   922  01F6  00A2               	movwf	34	;volatile
   923                           
   924                           ;main.c: 87: CCP1CON = 0b00001100;
   925  01F7  300C               	movlw	12
   926  01F8  0025               	movlb	5	; select bank5
   927  01F9  0093               	movwf	19	;volatile
   928                           
   929                           ;main.c: 88: CCPR1L = 10;
   930  01FA  300A               	movlw	10
   931  01FB  0091               	movwf	17	;volatile
   932                           
   933                           ;main.c: 108: PWM3DCH = 64 ;
   934  01FC  3040               	movlw	64
   935  01FD  002C               	movlb	12	; select bank12
   936  01FE  0098               	movwf	24	;volatile
   937                           
   938                           ;main.c: 109: PWM3DCL = 0 ;
   939  01FF  0197               	clrf	23	;volatile
   940                           
   941                           ;main.c: 111: T2CON = 0b00000010 ;
   942  0200  3002               	movlw	2
   943  0201  0020               	movlb	0	; select bank0
   944  0202  009C               	movwf	28	;volatile
   945                           
   946                           ;main.c: 112: TMR2 = 0 ;
   947  0203  019A               	clrf	26	;volatile
   948                           
   949                           ;main.c: 113: PR2 = 153 ;
   950  0204  3099               	movlw	153
   951  0205  009B               	movwf	27	;volatile
   952                           
   953                           ;main.c: 114: TMR2ON = 1 ;
   954  0206  151C               	bsf	28,2	;volatile
   955                           
   956                           ;main.c: 116: num = 255;
   957  0207  30FF               	movlw	255
   958  0208  0021               	movlb	1	; select bank1
   959  0209  00BA               	movwf	main@num^(0+128)
   960  020A  3000               	movlw	0
   961  020B  00BB               	movwf	(main@num^(0+128)+1)
   962                           
   963                           ;main.c: 118: setup_tmr();
   964  020C  318F  2725  3181   	fcall	_setup_tmr
   965                           
   966                           ;main.c: 119: setup_irq();
   967  020F  318F  2709  3181   	fcall	_setup_irq
   968                           
   969                           ;main.c: 120: setup_sci();
   970  0212  318F  2737  3181   	fcall	_setup_sci
   971                           
   972                           ;main.c: 121: setup_dac();
   973  0215  3187  27F9  3181   	fcall	_setup_dac
   974  0218                     l1783:	
   975                           ;main.c: 123: while(1) {
   976                           
   977                           
   978                           ;main.c: 124: num = adconv() ;
   979  0218  318F  277B  3181   	fcall	_adconv
   980  021B  0873               	movf	?_adconv+1,w
   981  021C  0021               	movlb	1	; select bank1
   982  021D  00BB               	movwf	(main@num+1)^(0+128)
   983  021E  0872               	movf	?_adconv,w
   984  021F  00BA               	movwf	main@num^(0+128)
   985                           
   986                           ;main.c: 126: yd = sin((3.141592/180.0)*xd)*127.0 + 127.0;
   987  0220  30FA               	movlw	250
   988  0221  0020               	movlb	0	; select bank0
   989  0222  00A0               	movwf	___ftmul@f1
   990  0223  308E               	movlw	142
   991  0224  00A1               	movwf	___ftmul@f1+1
   992  0225  303C               	movlw	60
   993  0226  00A2               	movwf	___ftmul@f1+2
   994  0227  0021               	movlb	1	; select bank1
   995  0228  083F               	movf	main@xd^(0+128),w
   996  0229  0020               	movlb	0	; select bank0
   997  022A  00A3               	movwf	___ftmul@f2
   998  022B  0021               	movlb	1	; select bank1
   999  022C  0840               	movf	(main@xd+1)^(0+128),w
  1000  022D  0020               	movlb	0	; select bank0
  1001  022E  00A4               	movwf	___ftmul@f2+1
  1002  022F  0021               	movlb	1	; select bank1
  1003  0230  0841               	movf	(main@xd+2)^(0+128),w
  1004  0231  0020               	movlb	0	; select bank0
  1005  0232  00A5               	movwf	___ftmul@f2+2
  1006  0233  3184  241D  3181   	fcall	___ftmul
  1007  0236  0020               	movlb	0	; select bank0
  1008  0237  0820               	movf	?___ftmul,w
  1009  0238  0021               	movlb	1	; select bank1
  1010  0239  00B4               	movwf	_main$674^(0+128)
  1011  023A  0020               	movlb	0	; select bank0
  1012  023B  0821               	movf	?___ftmul+1,w
  1013  023C  0021               	movlb	1	; select bank1
  1014  023D  00B5               	movwf	(_main$674+1)^(0+128)
  1015  023E  0020               	movlb	0	; select bank0
  1016  023F  0822               	movf	?___ftmul+2,w
  1017  0240  0021               	movlb	1	; select bank1
  1018  0241  00B6               	movwf	(_main$674+2)^(0+128)
  1019                           
  1020                           ;main.c: 126: yd = sin((3.141592/180.0)*xd)*127.0 + 127.0;
  1021  0242  0834               	movf	_main$674^(0+128),w
  1022  0243  0020               	movlb	0	; select bank0
  1023  0244  00EC               	movwf	sin@f
  1024  0245  0021               	movlb	1	; select bank1
  1025  0246  0835               	movf	(_main$674+1)^(0+128),w
  1026  0247  0020               	movlb	0	; select bank0
  1027  0248  00ED               	movwf	sin@f+1
  1028  0249  0021               	movlb	1	; select bank1
  1029  024A  0836               	movf	(_main$674+2)^(0+128),w
  1030  024B  0020               	movlb	0	; select bank0
  1031  024C  00EE               	movwf	sin@f+2
  1032  024D  3180  203D  3181   	fcall	_sin
  1033  0250  0020               	movlb	0	; select bank0
  1034  0251  086C               	movf	?_sin,w
  1035  0252  0021               	movlb	1	; select bank1
  1036  0253  00B7               	movwf	_main$675^(0+128)
  1037  0254  0020               	movlb	0	; select bank0
  1038  0255  086D               	movf	?_sin+1,w
  1039  0256  0021               	movlb	1	; select bank1
  1040  0257  00B8               	movwf	(_main$675+1)^(0+128)
  1041  0258  0020               	movlb	0	; select bank0
  1042  0259  086E               	movf	?_sin+2,w
  1043  025A  0021               	movlb	1	; select bank1
  1044  025B  00B9               	movwf	(_main$675+2)^(0+128)
  1045                           
  1046                           ;main.c: 126: yd = sin((3.141592/180.0)*xd)*127.0 + 127.0;
  1047  025C  3000               	movlw	0
  1048  025D  0020               	movlb	0	; select bank0
  1049  025E  00C0               	movwf	___ftadd@f1
  1050  025F  30FE               	movlw	254
  1051  0260  00C1               	movwf	___ftadd@f1+1
  1052  0261  3042               	movlw	66
  1053  0262  00C2               	movwf	___ftadd@f1+2
  1054  0263  3000               	movlw	0
  1055  0264  00A0               	movwf	___ftmul@f1
  1056  0265  30FE               	movlw	254
  1057  0266  00A1               	movwf	___ftmul@f1+1
  1058  0267  3042               	movlw	66
  1059  0268  00A2               	movwf	___ftmul@f1+2
  1060  0269  0021               	movlb	1	; select bank1
  1061  026A  0837               	movf	_main$675^(0+128),w
  1062  026B  0020               	movlb	0	; select bank0
  1063  026C  00A3               	movwf	___ftmul@f2
  1064  026D  0021               	movlb	1	; select bank1
  1065  026E  0838               	movf	(_main$675+1)^(0+128),w
  1066  026F  0020               	movlb	0	; select bank0
  1067  0270  00A4               	movwf	___ftmul@f2+1
  1068  0271  0021               	movlb	1	; select bank1
  1069  0272  0839               	movf	(_main$675+2)^(0+128),w
  1070  0273  0020               	movlb	0	; select bank0
  1071  0274  00A5               	movwf	___ftmul@f2+2
  1072  0275  3184  241D  3181   	fcall	___ftmul
  1073  0278  0020               	movlb	0	; select bank0
  1074  0279  0820               	movf	?___ftmul,w
  1075  027A  00C3               	movwf	___ftadd@f2
  1076  027B  0821               	movf	?___ftmul+1,w
  1077  027C  00C4               	movwf	___ftadd@f2+1
  1078  027D  0822               	movf	?___ftmul+2,w
  1079  027E  00C5               	movwf	___ftadd@f2+2
  1080  027F  3183  2327  3181   	fcall	___ftadd
  1081  0282  0020               	movlb	0	; select bank0
  1082  0283  0840               	movf	?___ftadd,w
  1083  0284  0021               	movlb	1	; select bank1
  1084  0285  00BC               	movwf	main@yd^(0+128)
  1085  0286  0020               	movlb	0	; select bank0
  1086  0287  0841               	movf	?___ftadd+1,w
  1087  0288  0021               	movlb	1	; select bank1
  1088  0289  00BD               	movwf	(main@yd+1)^(0+128)
  1089  028A  0020               	movlb	0	; select bank0
  1090  028B  0842               	movf	?___ftadd+2,w
  1091  028C  0021               	movlb	1	; select bank1
  1092  028D  00BE               	movwf	(main@yd+2)^(0+128)
  1093                           
  1094                           ;main.c: 127: xd+=(num/10);
  1095  028E  083B               	movf	(main@num+1)^(0+128),w
  1096  028F  00F5               	movwf	___lwdiv@dividend+1
  1097  0290  083A               	movf	main@num^(0+128),w
  1098  0291  00F4               	movwf	___lwdiv@dividend
  1099  0292  300A               	movlw	10
  1100  0293  00F2               	movwf	___lwdiv@divisor
  1101  0294  3000               	movlw	0
  1102  0295  00F3               	movwf	___lwdiv@divisor+1
  1103  0296  318F  27CC  3181   	fcall	___lwdiv
  1104  0299  0873               	movf	?___lwdiv+1,w
  1105  029A  0020               	movlb	0	; select bank0
  1106  029B  00A1               	movwf	___lwtoft@c+1
  1107  029C  0872               	movf	?___lwdiv,w
  1108  029D  00A0               	movwf	___lwtoft@c
  1109  029E  318F  274B  3181   	fcall	___lwtoft
  1110  02A1  0020               	movlb	0	; select bank0
  1111  02A2  0820               	movf	?___lwtoft,w
  1112  02A3  00C0               	movwf	___ftadd@f1
  1113  02A4  0821               	movf	?___lwtoft+1,w
  1114  02A5  00C1               	movwf	___ftadd@f1+1
  1115  02A6  0822               	movf	?___lwtoft+2,w
  1116  02A7  00C2               	movwf	___ftadd@f1+2
  1117  02A8  0021               	movlb	1	; select bank1
  1118  02A9  083F               	movf	main@xd^(0+128),w
  1119  02AA  0020               	movlb	0	; select bank0
  1120  02AB  00C3               	movwf	___ftadd@f2
  1121  02AC  0021               	movlb	1	; select bank1
  1122  02AD  0840               	movf	(main@xd+1)^(0+128),w
  1123  02AE  0020               	movlb	0	; select bank0
  1124  02AF  00C4               	movwf	___ftadd@f2+1
  1125  02B0  0021               	movlb	1	; select bank1
  1126  02B1  0841               	movf	(main@xd+2)^(0+128),w
  1127  02B2  0020               	movlb	0	; select bank0
  1128  02B3  00C5               	movwf	___ftadd@f2+2
  1129  02B4  3183  2327  3181   	fcall	___ftadd
  1130  02B7  0020               	movlb	0	; select bank0
  1131  02B8  0840               	movf	?___ftadd,w
  1132  02B9  0021               	movlb	1	; select bank1
  1133  02BA  00BF               	movwf	main@xd^(0+128)
  1134  02BB  0020               	movlb	0	; select bank0
  1135  02BC  0841               	movf	?___ftadd+1,w
  1136  02BD  0021               	movlb	1	; select bank1
  1137  02BE  00C0               	movwf	(main@xd+1)^(0+128)
  1138  02BF  0020               	movlb	0	; select bank0
  1139  02C0  0842               	movf	?___ftadd+2,w
  1140  02C1  0021               	movlb	1	; select bank1
  1141  02C2  00C1               	movwf	(main@xd+2)^(0+128)
  1142                           
  1143                           ;main.c: 128: if(xd >=360.0){xd = 0;}
  1144  02C3  083F               	movf	main@xd^(0+128),w
  1145  02C4  00F2               	movwf	___ftge@ff1
  1146  02C5  0840               	movf	(main@xd+1)^(0+128),w
  1147  02C6  00F3               	movwf	___ftge@ff1+1
  1148  02C7  0841               	movf	(main@xd+2)^(0+128),w
  1149  02C8  00F4               	movwf	___ftge@ff1+2
  1150  02C9  3000               	movlw	0
  1151  02CA  00F5               	movwf	___ftge@ff2
  1152  02CB  30B4               	movlw	180
  1153  02CC  00F6               	movwf	___ftge@ff2+1
  1154  02CD  3043               	movlw	67
  1155  02CE  00F7               	movwf	___ftge@ff2+2
  1156  02CF  3187  274A  3181   	fcall	___ftge
  1157  02D2  1C03               	btfss	3,0
  1158  02D3  2ADB               	goto	l1797
  1159  02D4  3000               	movlw	0
  1160  02D5  0021               	movlb	1	; select bank1
  1161  02D6  00BF               	movwf	main@xd^(0+128)
  1162  02D7  3000               	movlw	0
  1163  02D8  00C0               	movwf	(main@xd+1)^(0+128)
  1164  02D9  3000               	movlw	0
  1165  02DA  00C1               	movwf	(main@xd+2)^(0+128)
  1166  02DB                     l1797:	
  1167                           
  1168                           ;main.c: 129: CCPR1L = (unsigned char)(yd/2+5);
  1169  02DB  0021               	movlb	1	; select bank1
  1170  02DC  083C               	movf	main@yd^(0+128),w
  1171  02DD  0020               	movlb	0	; select bank0
  1172  02DE  00B3               	movwf	___ftdiv@f1
  1173  02DF  0021               	movlb	1	; select bank1
  1174  02E0  083D               	movf	(main@yd+1)^(0+128),w
  1175  02E1  0020               	movlb	0	; select bank0
  1176  02E2  00B4               	movwf	___ftdiv@f1+1
  1177  02E3  0021               	movlb	1	; select bank1
  1178  02E4  083E               	movf	(main@yd+2)^(0+128),w
  1179  02E5  0020               	movlb	0	; select bank0
  1180  02E6  00B5               	movwf	___ftdiv@f1+2
  1181  02E7  3000               	movlw	0
  1182  02E8  00B0               	movwf	___ftdiv@f2
  1183  02E9  3000               	movlw	0
  1184  02EA  00B1               	movwf	___ftdiv@f2+1
  1185  02EB  3040               	movlw	64
  1186  02EC  00B2               	movwf	___ftdiv@f2+2
  1187  02ED  3184  24D1  3181   	fcall	___ftdiv
  1188  02F0  0020               	movlb	0	; select bank0
  1189  02F1  0830               	movf	?___ftdiv,w
  1190  02F2  00C3               	movwf	___ftadd@f2
  1191  02F3  0831               	movf	?___ftdiv+1,w
  1192  02F4  00C4               	movwf	___ftadd@f2+1
  1193  02F5  0832               	movf	?___ftdiv+2,w
  1194  02F6  00C5               	movwf	___ftadd@f2+2
  1195  02F7  3000               	movlw	0
  1196  02F8  00C0               	movwf	___ftadd@f1
  1197  02F9  30A0               	movlw	160
  1198  02FA  00C1               	movwf	___ftadd@f1+1
  1199  02FB  3040               	movlw	64
  1200  02FC  00C2               	movwf	___ftadd@f1+2
  1201  02FD  3183  2327  3181   	fcall	___ftadd
  1202  0300  0020               	movlb	0	; select bank0
  1203  0301  0840               	movf	?___ftadd,w
  1204  0302  00CD               	movwf	___fttol@f1
  1205  0303  0841               	movf	?___ftadd+1,w
  1206  0304  00CE               	movwf	___fttol@f1+1
  1207  0305  0842               	movf	?___ftadd+2,w
  1208  0306  00CF               	movwf	___fttol@f1+2
  1209  0307  3185  257A  3181   	fcall	___fttol
  1210  030A  0020               	movlb	0	; select bank0
  1211  030B  084D               	movf	?___fttol,w
  1212  030C  0025               	movlb	5	; select bank5
  1213  030D  0091               	movwf	17	;volatile
  1214                           
  1215                           ;main.c: 130: DAC1CON1 = (unsigned char)yd;
  1216  030E  0021               	movlb	1	; select bank1
  1217  030F  083C               	movf	main@yd^(0+128),w
  1218  0310  0020               	movlb	0	; select bank0
  1219  0311  00CD               	movwf	___fttol@f1
  1220  0312  0021               	movlb	1	; select bank1
  1221  0313  083D               	movf	(main@yd+1)^(0+128),w
  1222  0314  0020               	movlb	0	; select bank0
  1223  0315  00CE               	movwf	___fttol@f1+1
  1224  0316  0021               	movlb	1	; select bank1
  1225  0317  083E               	movf	(main@yd+2)^(0+128),w
  1226  0318  0020               	movlb	0	; select bank0
  1227  0319  00CF               	movwf	___fttol@f1+2
  1228  031A  3185  257A  3181   	fcall	___fttol
  1229  031D  0020               	movlb	0	; select bank0
  1230  031E  084D               	movf	?___fttol,w
  1231  031F  0022               	movlb	2	; select bank2
  1232  0320  0099               	movwf	25	;volatile
  1233                           
  1234                           ;main.c: 136: TX1REG = 0x55;
  1235  0321  3055               	movlw	85
  1236  0322  0023               	movlb	3	; select bank3
  1237  0323  009A               	movwf	26	;volatile
  1238  0324                     l113:	
  1239                           ;main.c: 137: while(TX1STAbits.TRMT != 1);
  1240                           
  1241  0324  189E               	btfsc	30,1	;volatile
  1242  0325  2A18               	goto	l1783
  1243  0326  2B24               	goto	l113
  1244  0327                     __end_of_main:	
  1245                           ;main.c: 139: }
  1246                           ;main.c: 140: return (0);
  1247                           ;	Return value of _main is never used
  1248                           
  1249                           
  1250                           	psect	text1
  1251  003D                     __ptext1:	
  1252 ;; *************** function _sin *****************
  1253 ;; Defined at:
  1254 ;;		line 13 in file "/Applications/microchip/xc8/v1.45/sources/common/sin.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  f               3   76[BANK0 ] int 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  x2              3   12[BANK1 ] int 
  1259 ;;  y               3    6[BANK1 ] int 
  1260 ;;  sgn             1   15[BANK1 ] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  3   76[BANK0 ] unsigned char 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1270 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  1274 ;;Total ram usage:       14 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    5
  1277 ;; This function calls:
  1278 ;;		___ftadd
  1279 ;;		___ftdiv
  1280 ;;		___ftge
  1281 ;;		___ftmul
  1282 ;;		___ftneg
  1283 ;;		___ftsub
  1284 ;;		_eval_poly
  1285 ;;		_floor
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _sin
  1293  003D                     _sin:	
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _sin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1297  003D  0021               	movlb	1	; select bank1
  1298  003E  01AF               	clrf	sin@sgn^(0+128)
  1299  003F  0020               	movlb	0	; select bank0
  1300  0040  086C               	movf	sin@f,w
  1301  0041  00F2               	movwf	___ftge@ff1
  1302  0042  086D               	movf	sin@f+1,w
  1303  0043  00F3               	movwf	___ftge@ff1+1
  1304  0044  086E               	movf	sin@f+2,w
  1305  0045  00F4               	movwf	___ftge@ff1+2
  1306  0046  3000               	movlw	0
  1307  0047  00F5               	movwf	___ftge@ff2
  1308  0048  3000               	movlw	0
  1309  0049  00F6               	movwf	___ftge@ff2+1
  1310  004A  3000               	movlw	0
  1311  004B  00F7               	movwf	___ftge@ff2+2
  1312  004C  3187  274A  3180   	fcall	___ftge
  1313  004F  1803               	btfsc	3,0
  1314  0050  2865               	goto	l1725
  1315  0051  0020               	movlb	0	; select bank0
  1316  0052  086C               	movf	sin@f,w
  1317  0053  00F2               	movwf	___ftneg@f1
  1318  0054  086D               	movf	sin@f+1,w
  1319  0055  00F3               	movwf	___ftneg@f1+1
  1320  0056  086E               	movf	sin@f+2,w
  1321  0057  00F4               	movwf	___ftneg@f1+2
  1322  0058  318F  2711  3180   	fcall	___ftneg
  1323  005B  0872               	movf	?___ftneg,w
  1324  005C  0020               	movlb	0	; select bank0
  1325  005D  00EC               	movwf	sin@f
  1326  005E  0873               	movf	?___ftneg+1,w
  1327  005F  00ED               	movwf	sin@f+1
  1328  0060  0874               	movf	?___ftneg+2,w
  1329  0061  00EE               	movwf	sin@f+2
  1330  0062  0021               	movlb	1	; select bank1
  1331  0063  01AF               	clrf	sin@sgn^(0+128)
  1332  0064  0AAF               	incf	sin@sgn^(0+128),f
  1333  0065                     l1725:	
  1334  0065  30FA               	movlw	250
  1335  0066  0020               	movlb	0	; select bank0
  1336  0067  00A0               	movwf	___ftmul@f1
  1337  0068  3022               	movlw	34
  1338  0069  00A1               	movwf	___ftmul@f1+1
  1339  006A  303E               	movlw	62
  1340  006B  00A2               	movwf	___ftmul@f1+2
  1341  006C  086C               	movf	sin@f,w
  1342  006D  00A3               	movwf	___ftmul@f2
  1343  006E  086D               	movf	sin@f+1,w
  1344  006F  00A4               	movwf	___ftmul@f2+1
  1345  0070  086E               	movf	sin@f+2,w
  1346  0071  00A5               	movwf	___ftmul@f2+2
  1347  0072  3184  241D  3180   	fcall	___ftmul
  1348  0075  0020               	movlb	0	; select bank0
  1349  0076  0820               	movf	?___ftmul,w
  1350  0077  00EC               	movwf	sin@f
  1351  0078  0821               	movf	?___ftmul+1,w
  1352  0079  00ED               	movwf	sin@f+1
  1353  007A  0822               	movf	?___ftmul+2,w
  1354  007B  00EE               	movwf	sin@f+2
  1355  007C  086C               	movf	sin@f,w
  1356  007D  00E3               	movwf	floor@x
  1357  007E  086D               	movf	sin@f+1,w
  1358  007F  00E4               	movwf	floor@x+1
  1359  0080  086E               	movf	sin@f+2,w
  1360  0081  00E5               	movwf	floor@x+2
  1361  0082  3186  2601  3180   	fcall	_floor
  1362  0085  0020               	movlb	0	; select bank0
  1363  0086  0863               	movf	?_floor,w
  1364  0087  0021               	movlb	1	; select bank1
  1365  0088  00A0               	movwf	___ftsub@f2^(0+128)
  1366  0089  0020               	movlb	0	; select bank0
  1367  008A  0864               	movf	?_floor+1,w
  1368  008B  0021               	movlb	1	; select bank1
  1369  008C  00A1               	movwf	(___ftsub@f2+1)^(0+128)
  1370  008D  0020               	movlb	0	; select bank0
  1371  008E  0865               	movf	?_floor+2,w
  1372  008F  0021               	movlb	1	; select bank1
  1373  0090  00A2               	movwf	(___ftsub@f2+2)^(0+128)
  1374  0091  0020               	movlb	0	; select bank0
  1375  0092  086C               	movf	sin@f,w
  1376  0093  0021               	movlb	1	; select bank1
  1377  0094  00A3               	movwf	___ftsub@f1^(0+128)
  1378  0095  0020               	movlb	0	; select bank0
  1379  0096  086D               	movf	sin@f+1,w
  1380  0097  0021               	movlb	1	; select bank1
  1381  0098  00A4               	movwf	(___ftsub@f1+1)^(0+128)
  1382  0099  0020               	movlb	0	; select bank0
  1383  009A  086E               	movf	sin@f+2,w
  1384  009B  0021               	movlb	1	; select bank1
  1385  009C  00A5               	movwf	(___ftsub@f1+2)^(0+128)
  1386  009D  318F  279E  3180   	fcall	___ftsub
  1387  00A0  0021               	movlb	1	; select bank1
  1388  00A1  0820               	movf	?___ftsub^(0+128),w
  1389  00A2  0020               	movlb	0	; select bank0
  1390  00A3  00EC               	movwf	sin@f
  1391  00A4  0021               	movlb	1	; select bank1
  1392  00A5  0821               	movf	(?___ftsub+1)^(0+128),w
  1393  00A6  0020               	movlb	0	; select bank0
  1394  00A7  00ED               	movwf	sin@f+1
  1395  00A8  0021               	movlb	1	; select bank1
  1396  00A9  0822               	movf	(?___ftsub+2)^(0+128),w
  1397  00AA  0020               	movlb	0	; select bank0
  1398  00AB  00EE               	movwf	sin@f+2
  1399  00AC  3000               	movlw	0
  1400  00AD  00A0               	movwf	___ftmul@f1
  1401  00AE  3080               	movlw	128
  1402  00AF  00A1               	movwf	___ftmul@f1+1
  1403  00B0  3040               	movlw	64
  1404  00B1  00A2               	movwf	___ftmul@f1+2
  1405  00B2  086C               	movf	sin@f,w
  1406  00B3  00A3               	movwf	___ftmul@f2
  1407  00B4  086D               	movf	sin@f+1,w
  1408  00B5  00A4               	movwf	___ftmul@f2+1
  1409  00B6  086E               	movf	sin@f+2,w
  1410  00B7  00A5               	movwf	___ftmul@f2+2
  1411  00B8  3184  241D  3180   	fcall	___ftmul
  1412  00BB  0020               	movlb	0	; select bank0
  1413  00BC  0820               	movf	?___ftmul,w
  1414  00BD  00EC               	movwf	sin@f
  1415  00BE  0821               	movf	?___ftmul+1,w
  1416  00BF  00ED               	movwf	sin@f+1
  1417  00C0  0822               	movf	?___ftmul+2,w
  1418  00C1  00EE               	movwf	sin@f+2
  1419  00C2  3000               	movlw	0
  1420  00C3  00F2               	movwf	___ftge@ff1
  1421  00C4  3000               	movlw	0
  1422  00C5  00F3               	movwf	___ftge@ff1+1
  1423  00C6  3040               	movlw	64
  1424  00C7  00F4               	movwf	___ftge@ff1+2
  1425  00C8  086C               	movf	sin@f,w
  1426  00C9  00F5               	movwf	___ftge@ff2
  1427  00CA  086D               	movf	sin@f+1,w
  1428  00CB  00F6               	movwf	___ftge@ff2+1
  1429  00CC  086E               	movf	sin@f+2,w
  1430  00CD  00F7               	movwf	___ftge@ff2+2
  1431  00CE  3187  274A  3180   	fcall	___ftge
  1432  00D1  1803               	btfsc	3,0
  1433  00D2  2901               	goto	l1737
  1434  00D3  3000               	movlw	0
  1435  00D4  0021               	movlb	1	; select bank1
  1436  00D5  00A0               	movwf	___ftsub@f2^(0+128)
  1437  00D6  3000               	movlw	0
  1438  00D7  00A1               	movwf	(___ftsub@f2+1)^(0+128)
  1439  00D8  3040               	movlw	64
  1440  00D9  00A2               	movwf	(___ftsub@f2+2)^(0+128)
  1441  00DA  0020               	movlb	0	; select bank0
  1442  00DB  086C               	movf	sin@f,w
  1443  00DC  0021               	movlb	1	; select bank1
  1444  00DD  00A3               	movwf	___ftsub@f1^(0+128)
  1445  00DE  0020               	movlb	0	; select bank0
  1446  00DF  086D               	movf	sin@f+1,w
  1447  00E0  0021               	movlb	1	; select bank1
  1448  00E1  00A4               	movwf	(___ftsub@f1+1)^(0+128)
  1449  00E2  0020               	movlb	0	; select bank0
  1450  00E3  086E               	movf	sin@f+2,w
  1451  00E4  0021               	movlb	1	; select bank1
  1452  00E5  00A5               	movwf	(___ftsub@f1+2)^(0+128)
  1453  00E6  318F  279E  3180   	fcall	___ftsub
  1454  00E9  0021               	movlb	1	; select bank1
  1455  00EA  0820               	movf	?___ftsub^(0+128),w
  1456  00EB  0020               	movlb	0	; select bank0
  1457  00EC  00EC               	movwf	sin@f
  1458  00ED  0021               	movlb	1	; select bank1
  1459  00EE  0821               	movf	(?___ftsub+1)^(0+128),w
  1460  00EF  0020               	movlb	0	; select bank0
  1461  00F0  00ED               	movwf	sin@f+1
  1462  00F1  0021               	movlb	1	; select bank1
  1463  00F2  0822               	movf	(?___ftsub+2)^(0+128),w
  1464  00F3  0020               	movlb	0	; select bank0
  1465  00F4  00EE               	movwf	sin@f+2
  1466  00F5  0021               	movlb	1	; select bank1
  1467  00F6  082F               	movf	sin@sgn^(0+128),w
  1468  00F7  1D03               	btfss	3,2
  1469  00F8  28FB               	goto	u2150
  1470  00F9  3001               	movlw	1
  1471  00FA  28FC               	goto	u2160
  1472  00FB                     u2150:	
  1473  00FB  3000               	movlw	0
  1474  00FC                     u2160:	
  1475  00FC  0020               	movlb	0	; select bank0
  1476  00FD  00EF               	movwf	??_sin
  1477  00FE  086F               	movf	??_sin,w
  1478  00FF  0021               	movlb	1	; select bank1
  1479  0100  00AF               	movwf	sin@sgn^(0+128)
  1480  0101                     l1737:	
  1481  0101  3000               	movlw	0
  1482  0102  00F2               	movwf	___ftge@ff1
  1483  0103  3080               	movlw	128
  1484  0104  00F3               	movwf	___ftge@ff1+1
  1485  0105  303F               	movlw	63
  1486  0106  00F4               	movwf	___ftge@ff1+2
  1487  0107  0020               	movlb	0	; select bank0
  1488  0108  086C               	movf	sin@f,w
  1489  0109  00F5               	movwf	___ftge@ff2
  1490  010A  086D               	movf	sin@f+1,w
  1491  010B  00F6               	movwf	___ftge@ff2+1
  1492  010C  086E               	movf	sin@f+2,w
  1493  010D  00F7               	movwf	___ftge@ff2+2
  1494  010E  3187  274A  3180   	fcall	___ftge
  1495  0111  1803               	btfsc	3,0
  1496  0112  2934               	goto	l518
  1497  0113  3000               	movlw	0
  1498  0114  0020               	movlb	0	; select bank0
  1499  0115  00C0               	movwf	___ftadd@f1
  1500  0116  3000               	movlw	0
  1501  0117  00C1               	movwf	___ftadd@f1+1
  1502  0118  3040               	movlw	64
  1503  0119  00C2               	movwf	___ftadd@f1+2
  1504  011A  086C               	movf	sin@f,w
  1505  011B  00F2               	movwf	___ftneg@f1
  1506  011C  086D               	movf	sin@f+1,w
  1507  011D  00F3               	movwf	___ftneg@f1+1
  1508  011E  086E               	movf	sin@f+2,w
  1509  011F  00F4               	movwf	___ftneg@f1+2
  1510  0120  318F  2711  3180   	fcall	___ftneg
  1511  0123  0872               	movf	?___ftneg,w
  1512  0124  0020               	movlb	0	; select bank0
  1513  0125  00C3               	movwf	___ftadd@f2
  1514  0126  0873               	movf	?___ftneg+1,w
  1515  0127  00C4               	movwf	___ftadd@f2+1
  1516  0128  0874               	movf	?___ftneg+2,w
  1517  0129  00C5               	movwf	___ftadd@f2+2
  1518  012A  3183  2327  3180   	fcall	___ftadd
  1519  012D  0020               	movlb	0	; select bank0
  1520  012E  0840               	movf	?___ftadd,w
  1521  012F  00EC               	movwf	sin@f
  1522  0130  0841               	movf	?___ftadd+1,w
  1523  0131  00ED               	movwf	sin@f+1
  1524  0132  0842               	movf	?___ftadd+2,w
  1525  0133  00EE               	movwf	sin@f+2
  1526  0134                     l518:	
  1527  0134  0020               	movlb	0	; select bank0
  1528  0135  086C               	movf	sin@f,w
  1529  0136  00A0               	movwf	___ftmul@f1
  1530  0137  086D               	movf	sin@f+1,w
  1531  0138  00A1               	movwf	___ftmul@f1+1
  1532  0139  086E               	movf	sin@f+2,w
  1533  013A  00A2               	movwf	___ftmul@f1+2
  1534  013B  086C               	movf	sin@f,w
  1535  013C  00A3               	movwf	___ftmul@f2
  1536  013D  086D               	movf	sin@f+1,w
  1537  013E  00A4               	movwf	___ftmul@f2+1
  1538  013F  086E               	movf	sin@f+2,w
  1539  0140  00A5               	movwf	___ftmul@f2+2
  1540  0141  3184  241D  3180   	fcall	___ftmul
  1541  0144  0020               	movlb	0	; select bank0
  1542  0145  0820               	movf	?___ftmul,w
  1543  0146  0021               	movlb	1	; select bank1
  1544  0147  00AC               	movwf	sin@x2^(0+128)
  1545  0148  0020               	movlb	0	; select bank0
  1546  0149  0821               	movf	?___ftmul+1,w
  1547  014A  0021               	movlb	1	; select bank1
  1548  014B  00AD               	movwf	(sin@x2+1)^(0+128)
  1549  014C  0020               	movlb	0	; select bank0
  1550  014D  0822               	movf	?___ftmul+2,w
  1551  014E  0021               	movlb	1	; select bank1
  1552  014F  00AE               	movwf	(sin@x2+2)^(0+128)
  1553  0150  082C               	movf	sin@x2^(0+128),w
  1554  0151  0020               	movlb	0	; select bank0
  1555  0152  00CD               	movwf	eval_poly@x
  1556  0153  0021               	movlb	1	; select bank1
  1557  0154  082D               	movf	(sin@x2+1)^(0+128),w
  1558  0155  0020               	movlb	0	; select bank0
  1559  0156  00CE               	movwf	eval_poly@x+1
  1560  0157  0021               	movlb	1	; select bank1
  1561  0158  082E               	movf	(sin@x2+2)^(0+128),w
  1562  0159  0020               	movlb	0	; select bank0
  1563  015A  00CF               	movwf	eval_poly@x+2
  1564  015B  300F               	movlw	low (sin@coeff_b| (0+32768))
  1565  015C  00D0               	movwf	eval_poly@d
  1566  015D  3090               	movlw	high (sin@coeff_b| (0+32768))
  1567  015E  00D1               	movwf	eval_poly@d+1
  1568  015F  3003               	movlw	3
  1569  0160  00D2               	movwf	eval_poly@n
  1570  0161  3000               	movlw	0
  1571  0162  00D3               	movwf	eval_poly@n+1
  1572  0163  3186  26EA  3180   	fcall	_eval_poly
  1573  0166  0020               	movlb	0	; select bank0
  1574  0167  084D               	movf	?_eval_poly,w
  1575  0168  0021               	movlb	1	; select bank1
  1576  0169  00A6               	movwf	sin@y^(0+128)
  1577  016A  0020               	movlb	0	; select bank0
  1578  016B  084E               	movf	?_eval_poly+1,w
  1579  016C  0021               	movlb	1	; select bank1
  1580  016D  00A7               	movwf	(sin@y+1)^(0+128)
  1581  016E  0020               	movlb	0	; select bank0
  1582  016F  084F               	movf	?_eval_poly+2,w
  1583  0170  0021               	movlb	1	; select bank1
  1584  0171  00A8               	movwf	(sin@y+2)^(0+128)
  1585  0172  3004               	movlw	4
  1586  0173  0020               	movlb	0	; select bank0
  1587  0174  00D2               	movwf	eval_poly@n
  1588  0175  3000               	movlw	0
  1589  0176  00D3               	movwf	eval_poly@n+1
  1590  0177  3000               	movlw	low (sin@coeff_a| (0+32768))
  1591  0178  00D0               	movwf	eval_poly@d
  1592  0179  3090               	movlw	high (sin@coeff_a| (0+32768))
  1593  017A  00D1               	movwf	eval_poly@d+1
  1594  017B  0021               	movlb	1	; select bank1
  1595  017C  082C               	movf	sin@x2^(0+128),w
  1596  017D  0020               	movlb	0	; select bank0
  1597  017E  00CD               	movwf	eval_poly@x
  1598  017F  0021               	movlb	1	; select bank1
  1599  0180  082D               	movf	(sin@x2+1)^(0+128),w
  1600  0181  0020               	movlb	0	; select bank0
  1601  0182  00CE               	movwf	eval_poly@x+1
  1602  0183  0021               	movlb	1	; select bank1
  1603  0184  082E               	movf	(sin@x2+2)^(0+128),w
  1604  0185  0020               	movlb	0	; select bank0
  1605  0186  00CF               	movwf	eval_poly@x+2
  1606  0187  3186  26EA  3180   	fcall	_eval_poly
  1607  018A  0020               	movlb	0	; select bank0
  1608  018B  084D               	movf	?_eval_poly,w
  1609  018C  00B3               	movwf	___ftdiv@f1
  1610  018D  084E               	movf	?_eval_poly+1,w
  1611  018E  00B4               	movwf	___ftdiv@f1+1
  1612  018F  084F               	movf	?_eval_poly+2,w
  1613  0190  00B5               	movwf	___ftdiv@f1+2
  1614  0191  0021               	movlb	1	; select bank1
  1615  0192  0826               	movf	sin@y^(0+128),w
  1616  0193  0020               	movlb	0	; select bank0
  1617  0194  00B0               	movwf	___ftdiv@f2
  1618  0195  0021               	movlb	1	; select bank1
  1619  0196  0827               	movf	(sin@y+1)^(0+128),w
  1620  0197  0020               	movlb	0	; select bank0
  1621  0198  00B1               	movwf	___ftdiv@f2+1
  1622  0199  0021               	movlb	1	; select bank1
  1623  019A  0828               	movf	(sin@y+2)^(0+128),w
  1624  019B  0020               	movlb	0	; select bank0
  1625  019C  00B2               	movwf	___ftdiv@f2+2
  1626  019D  3184  24D1  3180   	fcall	___ftdiv
  1627  01A0  0020               	movlb	0	; select bank0
  1628  01A1  0830               	movf	?___ftdiv,w
  1629  01A2  0021               	movlb	1	; select bank1
  1630  01A3  00A9               	movwf	_sin$676^(0+128)
  1631  01A4  0020               	movlb	0	; select bank0
  1632  01A5  0831               	movf	?___ftdiv+1,w
  1633  01A6  0021               	movlb	1	; select bank1
  1634  01A7  00AA               	movwf	(_sin$676+1)^(0+128)
  1635  01A8  0020               	movlb	0	; select bank0
  1636  01A9  0832               	movf	?___ftdiv+2,w
  1637  01AA  0021               	movlb	1	; select bank1
  1638  01AB  00AB               	movwf	(_sin$676+2)^(0+128)
  1639  01AC  0829               	movf	_sin$676^(0+128),w
  1640  01AD  0020               	movlb	0	; select bank0
  1641  01AE  00A0               	movwf	___ftmul@f1
  1642  01AF  0021               	movlb	1	; select bank1
  1643  01B0  082A               	movf	(_sin$676+1)^(0+128),w
  1644  01B1  0020               	movlb	0	; select bank0
  1645  01B2  00A1               	movwf	___ftmul@f1+1
  1646  01B3  0021               	movlb	1	; select bank1
  1647  01B4  082B               	movf	(_sin$676+2)^(0+128),w
  1648  01B5  0020               	movlb	0	; select bank0
  1649  01B6  00A2               	movwf	___ftmul@f1+2
  1650  01B7  086C               	movf	sin@f,w
  1651  01B8  00A3               	movwf	___ftmul@f2
  1652  01B9  086D               	movf	sin@f+1,w
  1653  01BA  00A4               	movwf	___ftmul@f2+1
  1654  01BB  086E               	movf	sin@f+2,w
  1655  01BC  00A5               	movwf	___ftmul@f2+2
  1656  01BD  3184  241D  3180   	fcall	___ftmul
  1657  01C0  0020               	movlb	0	; select bank0
  1658  01C1  0820               	movf	?___ftmul,w
  1659  01C2  00EC               	movwf	sin@f
  1660  01C3  0821               	movf	?___ftmul+1,w
  1661  01C4  00ED               	movwf	sin@f+1
  1662  01C5  0822               	movf	?___ftmul+2,w
  1663  01C6  00EE               	movwf	sin@f+2
  1664  01C7  0021               	movlb	1	; select bank1
  1665  01C8  082F               	movf	sin@sgn^(0+128),w
  1666  01C9  1903               	btfsc	3,2
  1667  01CA  0008               	return
  1668  01CB  0020               	movlb	0	; select bank0
  1669  01CC  086C               	movf	sin@f,w
  1670  01CD  00F2               	movwf	___ftneg@f1
  1671  01CE  086D               	movf	sin@f+1,w
  1672  01CF  00F3               	movwf	___ftneg@f1+1
  1673  01D0  086E               	movf	sin@f+2,w
  1674  01D1  00F4               	movwf	___ftneg@f1+2
  1675  01D2  318F  2711         	fcall	___ftneg
  1676  01D4  0872               	movf	?___ftneg,w
  1677  01D5  0020               	movlb	0	; select bank0
  1678  01D6  00EC               	movwf	?_sin
  1679  01D7  0873               	movf	?___ftneg+1,w
  1680  01D8  00ED               	movwf	?_sin+1
  1681  01D9  0874               	movf	?___ftneg+2,w
  1682  01DA  00EE               	movwf	?_sin+2
  1683  01DB  0008               	return
  1684  01DC                     __end_of_sin:	
  1685                           
  1686                           	psect	text2
  1687  0601                     __ptext2:	
  1688 ;; *************** function _floor *****************
  1689 ;; Defined at:
  1690 ;;		line 13 in file "/Applications/microchip/xc8/v1.45/sources/common/floor.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  x               3   67[BANK0 ] unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  i               3   71[BANK0 ] unsigned char 
  1695 ;;  expon           2   74[BANK0 ] int 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  3   67[BANK0 ] int 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1705 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1706 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1708 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1709 ;;Total ram usage:        9 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    4
  1712 ;; This function calls:
  1713 ;;		___altoft
  1714 ;;		___ftadd
  1715 ;;		___ftge
  1716 ;;		___fttol
  1717 ;;		_frexp
  1718 ;; This function is called by:
  1719 ;;		_sin
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           
  1724                           ;psect for function _floor
  1725  0601                     _floor:	
  1726                           
  1727                           ;incstack = 0
  1728                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1729  0601  0020               	movlb	0	; select bank0
  1730  0602  0863               	movf	floor@x,w
  1731  0603  00F2               	movwf	frexp@value
  1732  0604  0864               	movf	floor@x+1,w
  1733  0605  00F3               	movwf	frexp@value+1
  1734  0606  0865               	movf	floor@x+2,w
  1735  0607  00F4               	movwf	frexp@value+2
  1736  0608  306A               	movlw	(low (floor@expon| 0))& (0+255)
  1737  0609  00E6               	movwf	??_floor
  1738  060A  0866               	movf	??_floor,w
  1739  060B  00F5               	movwf	frexp@eptr
  1740  060C  3187  27C4  3186   	fcall	_frexp
  1741  060F  0020               	movlb	0	; select bank0
  1742  0610  1FEB               	btfss	floor@expon+1,7
  1743  0611  2E33               	goto	l1697
  1744  0612  0863               	movf	floor@x,w
  1745  0613  00F2               	movwf	___ftge@ff1
  1746  0614  0864               	movf	floor@x+1,w
  1747  0615  00F3               	movwf	___ftge@ff1+1
  1748  0616  0865               	movf	floor@x+2,w
  1749  0617  00F4               	movwf	___ftge@ff1+2
  1750  0618  3000               	movlw	0
  1751  0619  00F5               	movwf	___ftge@ff2
  1752  061A  3000               	movlw	0
  1753  061B  00F6               	movwf	___ftge@ff2+1
  1754  061C  3000               	movlw	0
  1755  061D  00F7               	movwf	___ftge@ff2+2
  1756  061E  3187  274A  3186   	fcall	___ftge
  1757  0621  1803               	btfsc	3,0
  1758  0622  2E2B               	goto	l1693
  1759  0623  3000               	movlw	0
  1760  0624  0020               	movlb	0	; select bank0
  1761  0625  00E3               	movwf	?_floor
  1762  0626  3080               	movlw	128
  1763  0627  00E4               	movwf	?_floor+1
  1764  0628  30BF               	movlw	191
  1765  0629  00E5               	movwf	?_floor+2
  1766  062A  0008               	return
  1767  062B                     l1693:	
  1768  062B  3000               	movlw	0
  1769  062C  0020               	movlb	0	; select bank0
  1770  062D  00E3               	movwf	?_floor
  1771  062E  3000               	movlw	0
  1772  062F  00E4               	movwf	?_floor+1
  1773  0630  3000               	movlw	0
  1774  0631  00E5               	movwf	?_floor+2
  1775  0632  0008               	return
  1776  0633                     l1697:	
  1777  0633  3000               	movlw	0
  1778  0634  026B               	subwf	floor@expon+1,w
  1779  0635  3015               	movlw	21
  1780  0636  1903               	skipnz
  1781  0637  026A               	subwf	floor@expon,w
  1782  0638  1803               	btfsc	3,0
  1783  0639  0008               	return
  1784  063A  0863               	movf	floor@x,w
  1785  063B  00CD               	movwf	___fttol@f1
  1786  063C  0864               	movf	floor@x+1,w
  1787  063D  00CE               	movwf	___fttol@f1+1
  1788  063E  0865               	movf	floor@x+2,w
  1789  063F  00CF               	movwf	___fttol@f1+2
  1790  0640  3185  257A  3186   	fcall	___fttol
  1791  0643  0020               	movlb	0	; select bank0
  1792  0644  0850               	movf	?___fttol+3,w
  1793  0645  00DE               	movwf	___altoft@c+3
  1794  0646  084F               	movf	?___fttol+2,w
  1795  0647  00DD               	movwf	___altoft@c+2
  1796  0648  084E               	movf	?___fttol+1,w
  1797  0649  00DC               	movwf	___altoft@c+1
  1798  064A  084D               	movf	?___fttol,w
  1799  064B  00DB               	movwf	___altoft@c
  1800  064C  3187  2787  3186   	fcall	___altoft
  1801  064F  0020               	movlb	0	; select bank0
  1802  0650  085B               	movf	?___altoft,w
  1803  0651  00E7               	movwf	floor@i
  1804  0652  085C               	movf	?___altoft+1,w
  1805  0653  00E8               	movwf	floor@i+1
  1806  0654  085D               	movf	?___altoft+2,w
  1807  0655  00E9               	movwf	floor@i+2
  1808  0656  0863               	movf	floor@x,w
  1809  0657  00F2               	movwf	___ftge@ff1
  1810  0658  0864               	movf	floor@x+1,w
  1811  0659  00F3               	movwf	___ftge@ff1+1
  1812  065A  0865               	movf	floor@x+2,w
  1813  065B  00F4               	movwf	___ftge@ff1+2
  1814  065C  0867               	movf	floor@i,w
  1815  065D  00F5               	movwf	___ftge@ff2
  1816  065E  0868               	movf	floor@i+1,w
  1817  065F  00F6               	movwf	___ftge@ff2+1
  1818  0660  0869               	movf	floor@i+2,w
  1819  0661  00F7               	movwf	___ftge@ff2+2
  1820  0662  3187  274A  3186   	fcall	___ftge
  1821  0665  1803               	btfsc	3,0
  1822  0666  2E7E               	goto	l1707
  1823  0667  3000               	movlw	0
  1824  0668  0020               	movlb	0	; select bank0
  1825  0669  00C0               	movwf	___ftadd@f1
  1826  066A  3080               	movlw	128
  1827  066B  00C1               	movwf	___ftadd@f1+1
  1828  066C  30BF               	movlw	191
  1829  066D  00C2               	movwf	___ftadd@f1+2
  1830  066E  0867               	movf	floor@i,w
  1831  066F  00C3               	movwf	___ftadd@f2
  1832  0670  0868               	movf	floor@i+1,w
  1833  0671  00C4               	movwf	___ftadd@f2+1
  1834  0672  0869               	movf	floor@i+2,w
  1835  0673  00C5               	movwf	___ftadd@f2+2
  1836  0674  3183  2327         	fcall	___ftadd
  1837  0676  0020               	movlb	0	; select bank0
  1838  0677  0840               	movf	?___ftadd,w
  1839  0678  00E3               	movwf	?_floor
  1840  0679  0841               	movf	?___ftadd+1,w
  1841  067A  00E4               	movwf	?_floor+1
  1842  067B  0842               	movf	?___ftadd+2,w
  1843  067C  00E5               	movwf	?_floor+2
  1844  067D  0008               	return
  1845  067E                     l1707:	
  1846  067E  0020               	movlb	0	; select bank0
  1847  067F  0867               	movf	floor@i,w
  1848  0680  00E3               	movwf	?_floor
  1849  0681  0868               	movf	floor@i+1,w
  1850  0682  00E4               	movwf	?_floor+1
  1851  0683  0869               	movf	floor@i+2,w
  1852  0684  00E5               	movwf	?_floor+2
  1853  0685  0008               	return
  1854  0686                     __end_of_floor:	
  1855                           
  1856                           	psect	text3
  1857  07C4                     __ptext3:	
  1858 ;; *************** function _frexp *****************
  1859 ;; Defined at:
  1860 ;;		line 254 in file "/Applications/microchip/xc8/v1.45/sources/common/frexp.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  value           3    2[COMMON] int 
  1863 ;;  eptr            1    5[COMMON] PTR int 
  1864 ;;		 -> floor@expon(2), 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  3    2[COMMON] PTR int 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1880 ;;Total ram usage:        6 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    2
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_floor
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _frexp
  1892  07C4                     _frexp:	
  1893                           
  1894                           ;incstack = 0
  1895                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  1896  07C4  0874               	movf	frexp@value+2,w
  1897  07C5  0473               	iorwf	frexp@value+1,w
  1898  07C6  0472               	iorwf	frexp@value,w
  1899  07C7  1D03               	skipz
  1900  07C8  2FD0               	goto	l1391
  1901  07C9  0875               	movf	frexp@eptr,w
  1902  07CA  0086               	movwf	6
  1903  07CB  0187               	clrf	7
  1904  07CC  3000               	movlw	0
  1905  07CD  3FC0               	movwi [0]fsr1
  1906  07CE  3FC1               	movwi [1]fsr1
  1907                           
  1908                           ;	Return value of _frexp is never used
  1909  07CF  0008               	return
  1910  07D0                     l1391:	
  1911  07D0  0874               	movf	frexp@value+2,w
  1912  07D1  397F               	andlw	127
  1913  07D2  00F6               	movwf	??_frexp
  1914  07D3  01F7               	clrf	??_frexp+1
  1915  07D4  35F6               	lslf	??_frexp,f
  1916  07D5  0DF7               	rlf	??_frexp+1,f
  1917  07D6  0875               	movf	frexp@eptr,w
  1918  07D7  0086               	movwf	6
  1919  07D8  0187               	clrf	7
  1920  07D9  0876               	movf	??_frexp,w
  1921  07DA  3FC0               	movwi [0]fsr1
  1922  07DB  0877               	movf	??_frexp+1,w
  1923  07DC  3FC1               	movwi [1]fsr1
  1924  07DD  0D73               	rlf	frexp@value+1,w
  1925  07DE  0D73               	rlf	frexp@value+1,w
  1926  07DF  3901               	andlw	1
  1927  07E0  00F6               	movwf	??_frexp
  1928  07E1  01F7               	clrf	??_frexp+1
  1929  07E2  0875               	movf	frexp@eptr,w
  1930  07E3  0086               	movwf	6
  1931  07E4  0187               	clrf	7
  1932  07E5  0876               	movf	??_frexp,w
  1933  07E6  0481               	iorwf	1,f
  1934  07E7  3141               	addfsr 1,1
  1935  07E8  0877               	movf	??_frexp+1,w
  1936  07E9  0481               	iorwf	1,f
  1937  07EA  0875               	movf	frexp@eptr,w
  1938  07EB  0086               	movwf	6
  1939  07EC  0187               	clrf	7
  1940  07ED  3082               	movlw	130
  1941  07EE  0781               	addwf	1,f
  1942  07EF  3141               	addfsr 1,1
  1943  07F0  30FF               	movlw	255
  1944  07F1  3D81               	addwfc	1,f
  1945  07F2  317F               	addfsr 1,-1
  1946  07F3  0874               	movf	frexp@value+2,w
  1947  07F4  3980               	andlw	-128
  1948  07F5  383F               	iorlw	63
  1949  07F6  00F4               	movwf	frexp@value+2
  1950  07F7  13F3               	bcf	frexp@value+1,7
  1951  07F8  0008               	return
  1952  07F9                     __end_of_frexp:	
  1953                           ;	Return value of _frexp is never used
  1954                           
  1955                           
  1956                           	psect	text4
  1957  057A                     __ptext4:	
  1958 ;; *************** function ___fttol *****************
  1959 ;; Defined at:
  1960 ;;		line 44 in file "/Applications/microchip/xc8/v1.45/sources/common/fttol.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  f1              3   45[BANK0 ] float 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  lval            4   54[BANK0 ] unsigned long 
  1965 ;;  exp1            1   58[BANK0 ] unsigned char 
  1966 ;;  sign1           1   53[BANK0 ] unsigned char 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  4   45[BANK0 ] long 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;Total ram usage:       14 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    2
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;;		_floor
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function ___fttol
  1993  057A                     ___fttol:	
  1994                           
  1995                           ;incstack = 0
  1996                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1997  057A  0020               	movlb	0	; select bank0
  1998  057B  084D               	movf	___fttol@f1,w
  1999  057C  00D1               	movwf	??___fttol
  2000  057D  084E               	movf	___fttol@f1+1,w
  2001  057E  00D2               	movwf	??___fttol+1
  2002  057F  084F               	movf	___fttol@f1+2,w
  2003  0580  00D3               	movwf	??___fttol+2
  2004  0581  1003               	clrc
  2005  0582  0D52               	rlf	??___fttol+1,w
  2006  0583  0D53               	rlf	??___fttol+2,w
  2007  0584  00D4               	movwf	??___fttol+3
  2008  0585  0854               	movf	??___fttol+3,w
  2009  0586  00DA               	movwf	___fttol@exp1
  2010  0587  085A               	movf	___fttol@exp1,w
  2011  0588  1D03               	btfss	3,2
  2012  0589  2D93               	goto	l1349
  2013  058A  3000               	movlw	0
  2014  058B  00D0               	movwf	?___fttol+3
  2015  058C  3000               	movlw	0
  2016  058D  00CF               	movwf	?___fttol+2
  2017  058E  3000               	movlw	0
  2018  058F  00CE               	movwf	?___fttol+1
  2019  0590  3000               	movlw	0
  2020  0591  00CD               	movwf	?___fttol
  2021  0592  0008               	return
  2022  0593                     l1349:	
  2023  0593  084D               	movf	___fttol@f1,w
  2024  0594  00D1               	movwf	??___fttol
  2025  0595  084E               	movf	___fttol@f1+1,w
  2026  0596  00D2               	movwf	??___fttol+1
  2027  0597  084F               	movf	___fttol@f1+2,w
  2028  0598  00D3               	movwf	??___fttol+2
  2029  0599  3017               	movlw	23
  2030  059A                     u1645:	
  2031  059A  36D3               	lsrf	??___fttol+2,f
  2032  059B  0CD2               	rrf	??___fttol+1,f
  2033  059C  0CD1               	rrf	??___fttol,f
  2034  059D  0B89               	decfsz	9,f
  2035  059E  2D9A               	goto	u1645
  2036  059F  0851               	movf	??___fttol,w
  2037  05A0  00D4               	movwf	??___fttol+3
  2038  05A1  0854               	movf	??___fttol+3,w
  2039  05A2  00D5               	movwf	___fttol@sign1
  2040  05A3  17CE               	bsf	___fttol@f1+1,7
  2041  05A4  30FF               	movlw	255
  2042  05A5  05CD               	andwf	___fttol@f1,f
  2043  05A6  30FF               	movlw	255
  2044  05A7  05CE               	andwf	___fttol@f1+1,f
  2045  05A8  3000               	movlw	0
  2046  05A9  05CF               	andwf	___fttol@f1+2,f
  2047  05AA  084D               	movf	___fttol@f1,w
  2048  05AB  00D6               	movwf	___fttol@lval
  2049  05AC  084E               	movf	___fttol@f1+1,w
  2050  05AD  00D7               	movwf	___fttol@lval+1
  2051  05AE  084F               	movf	___fttol@f1+2,w
  2052  05AF  00D8               	movwf	___fttol@lval+2
  2053  05B0  01D9               	clrf	___fttol@lval+3
  2054  05B1  308E               	movlw	142
  2055  05B2  02DA               	subwf	___fttol@exp1,f
  2056  05B3  1FDA               	btfss	___fttol@exp1,7
  2057  05B4  2DD1               	goto	l1369
  2058  05B5  085A               	movf	___fttol@exp1,w
  2059  05B6  3A80               	xorlw	128
  2060  05B7  3E8F               	addlw	143
  2061  05B8  1803               	skipnc
  2062  05B9  2DC3               	goto	l1367
  2063  05BA  3000               	movlw	0
  2064  05BB  00D0               	movwf	?___fttol+3
  2065  05BC  3000               	movlw	0
  2066  05BD  00CF               	movwf	?___fttol+2
  2067  05BE  3000               	movlw	0
  2068  05BF  00CE               	movwf	?___fttol+1
  2069  05C0  3000               	movlw	0
  2070  05C1  00CD               	movwf	?___fttol
  2071  05C2  0008               	return
  2072  05C3                     l1367:	
  2073  05C3  3001               	movlw	1
  2074  05C4                     u1675:	
  2075  05C4  36D9               	lsrf	___fttol@lval+3,f
  2076  05C5  0CD8               	rrf	___fttol@lval+2,f
  2077  05C6  0CD7               	rrf	___fttol@lval+1,f
  2078  05C7  0CD6               	rrf	___fttol@lval,f
  2079  05C8  0B89               	decfsz	9,f
  2080  05C9  2DC4               	goto	u1675
  2081  05CA  3001               	movlw	1
  2082  05CB  00D1               	movwf	??___fttol
  2083  05CC  0851               	movf	??___fttol,w
  2084  05CD  07DA               	addwf	___fttol@exp1,f
  2085  05CE  1903               	btfsc	3,2
  2086  05CF  2DEA               	goto	l1377
  2087  05D0  2DC3               	goto	l1367
  2088  05D1                     l1369:	
  2089  05D1  3018               	movlw	24
  2090  05D2  025A               	subwf	___fttol@exp1,w
  2091  05D3  1C03               	skipc
  2092  05D4  2DE7               	goto	l403
  2093  05D5  3000               	movlw	0
  2094  05D6  00D0               	movwf	?___fttol+3
  2095  05D7  3000               	movlw	0
  2096  05D8  00CF               	movwf	?___fttol+2
  2097  05D9  3000               	movlw	0
  2098  05DA  00CE               	movwf	?___fttol+1
  2099  05DB  3000               	movlw	0
  2100  05DC  00CD               	movwf	?___fttol
  2101  05DD  0008               	return
  2102  05DE                     l1375:	
  2103  05DE  3001               	movlw	1
  2104  05DF                     u1705:	
  2105  05DF  35D6               	lslf	___fttol@lval,f
  2106  05E0  0DD7               	rlf	___fttol@lval+1,f
  2107  05E1  0DD8               	rlf	___fttol@lval+2,f
  2108  05E2  0DD9               	rlf	___fttol@lval+3,f
  2109  05E3  0B89               	decfsz	9,f
  2110  05E4  2DDF               	goto	u1705
  2111  05E5  3001               	movlw	1
  2112  05E6  02DA               	subwf	___fttol@exp1,f
  2113  05E7                     l403:	
  2114  05E7  085A               	movf	___fttol@exp1,w
  2115  05E8  1D03               	btfss	3,2
  2116  05E9  2DDE               	goto	l1375
  2117  05EA                     l1377:	
  2118  05EA  0855               	movf	___fttol@sign1,w
  2119  05EB  1903               	btfsc	3,2
  2120  05EC  2DF8               	goto	l1381
  2121  05ED  09D6               	comf	___fttol@lval,f
  2122  05EE  09D7               	comf	___fttol@lval+1,f
  2123  05EF  09D8               	comf	___fttol@lval+2,f
  2124  05F0  09D9               	comf	___fttol@lval+3,f
  2125  05F1  0AD6               	incf	___fttol@lval,f
  2126  05F2  1903               	skipnz
  2127  05F3  0AD7               	incf	___fttol@lval+1,f
  2128  05F4  1903               	skipnz
  2129  05F5  0AD8               	incf	___fttol@lval+2,f
  2130  05F6  1903               	skipnz
  2131  05F7  0AD9               	incf	___fttol@lval+3,f
  2132  05F8                     l1381:	
  2133  05F8  0859               	movf	___fttol@lval+3,w
  2134  05F9  00D0               	movwf	?___fttol+3
  2135  05FA  0858               	movf	___fttol@lval+2,w
  2136  05FB  00CF               	movwf	?___fttol+2
  2137  05FC  0857               	movf	___fttol@lval+1,w
  2138  05FD  00CE               	movwf	?___fttol+1
  2139  05FE  0856               	movf	___fttol@lval,w
  2140  05FF  00CD               	movwf	?___fttol
  2141  0600  0008               	return
  2142  0601                     __end_of___fttol:	
  2143                           
  2144                           	psect	text5
  2145  074A                     __ptext5:	
  2146 ;; *************** function ___ftge *****************
  2147 ;; Defined at:
  2148 ;;		line 4 in file "/Applications/microchip/xc8/v1.45/sources/common/ftge.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  ff1             3    2[COMMON] float 
  2151 ;;  ff2             3    5[COMMON] float 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;		None               void
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2163 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;Total ram usage:        9 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    2
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;;		_sin
  2175 ;;		_floor
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function ___ftge
  2181  074A                     ___ftge:	
  2182                           
  2183                           ;incstack = 0
  2184                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2185  074A  1FF4               	btfss	___ftge@ff1+2,7
  2186  074B  2F61               	goto	l1667
  2187  074C  0972               	comf	___ftge@ff1,w
  2188  074D  0020               	movlb	0	; select bank0
  2189  074E  00A0               	movwf	??___ftge
  2190  074F  0973               	comf	___ftge@ff1+1,w
  2191  0750  00A1               	movwf	??___ftge+1
  2192  0751  0974               	comf	___ftge@ff1+2,w
  2193  0752  00A2               	movwf	??___ftge+2
  2194  0753  0AA0               	incf	??___ftge,f
  2195  0754  1903               	skipnz
  2196  0755  0AA1               	incf	??___ftge+1,f
  2197  0756  1903               	skipnz
  2198  0757  0AA2               	incf	??___ftge+2,f
  2199  0758  3000               	movlw	0
  2200  0759  0720               	addwf	??___ftge,w
  2201  075A  00F2               	movwf	___ftge@ff1
  2202  075B  3000               	movlw	0
  2203  075C  3D21               	addwfc	??___ftge+1,w
  2204  075D  00F3               	movwf	___ftge@ff1+1
  2205  075E  3080               	movlw	128
  2206  075F  3D22               	addwfc	??___ftge+2,w
  2207  0760  00F4               	movwf	___ftge@ff1+2
  2208  0761                     l1667:	
  2209  0761  1FF7               	btfss	___ftge@ff2+2,7
  2210  0762  2F78               	goto	l1671
  2211  0763  0975               	comf	___ftge@ff2,w
  2212  0764  0020               	movlb	0	; select bank0
  2213  0765  00A0               	movwf	??___ftge
  2214  0766  0976               	comf	___ftge@ff2+1,w
  2215  0767  00A1               	movwf	??___ftge+1
  2216  0768  0977               	comf	___ftge@ff2+2,w
  2217  0769  00A2               	movwf	??___ftge+2
  2218  076A  0AA0               	incf	??___ftge,f
  2219  076B  1903               	skipnz
  2220  076C  0AA1               	incf	??___ftge+1,f
  2221  076D  1903               	skipnz
  2222  076E  0AA2               	incf	??___ftge+2,f
  2223  076F  3000               	movlw	0
  2224  0770  0720               	addwf	??___ftge,w
  2225  0771  00F5               	movwf	___ftge@ff2
  2226  0772  3000               	movlw	0
  2227  0773  3D21               	addwfc	??___ftge+1,w
  2228  0774  00F6               	movwf	___ftge@ff2+1
  2229  0775  3080               	movlw	128
  2230  0776  3D22               	addwfc	??___ftge+2,w
  2231  0777  00F7               	movwf	___ftge@ff2+2
  2232  0778                     l1671:	
  2233  0778  3080               	movlw	128
  2234  0779  06F4               	xorwf	___ftge@ff1+2,f
  2235  077A  3080               	movlw	128
  2236  077B  06F7               	xorwf	___ftge@ff2+2,f
  2237  077C  0877               	movf	___ftge@ff2+2,w
  2238  077D  0274               	subwf	___ftge@ff1+2,w
  2239  077E  1D03               	skipz
  2240  077F  0008               	return
  2241  0780  0876               	movf	___ftge@ff2+1,w
  2242  0781  0273               	subwf	___ftge@ff1+1,w
  2243  0782  1D03               	skipz
  2244  0783  0008               	return
  2245  0784  0875               	movf	___ftge@ff2,w
  2246  0785  0272               	subwf	___ftge@ff1,w
  2247  0786  0008               	return
  2248  0787                     __end_of___ftge:	
  2249                           
  2250                           	psect	text6
  2251  0787                     __ptext6:	
  2252 ;; *************** function ___altoft *****************
  2253 ;; Defined at:
  2254 ;;		line 42 in file "/Applications/microchip/xc8/v1.45/sources/common/altoft.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  c               4   59[BANK0 ] long 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  sign            1   66[BANK0 ] unsigned char 
  2259 ;;  exp             1   65[BANK0 ] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  3   59[BANK0 ] float 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;Total ram usage:        8 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    3
  2276 ;; This function calls:
  2277 ;;		___ftpack
  2278 ;; This function is called by:
  2279 ;;		_floor
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function ___altoft
  2285  0787                     ___altoft:	
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  2289  0787  0020               	movlb	0	; select bank0
  2290  0788  01E2               	clrf	___altoft@sign
  2291  0789  308E               	movlw	142
  2292  078A  00DF               	movwf	??___altoft
  2293  078B  085F               	movf	??___altoft,w
  2294  078C  00E1               	movwf	___altoft@exp
  2295  078D  1FDE               	btfss	___altoft@c+3,7
  2296  078E  2F9C               	goto	l1197
  2297  078F  09DB               	comf	___altoft@c,f
  2298  0790  09DC               	comf	___altoft@c+1,f
  2299  0791  09DD               	comf	___altoft@c+2,f
  2300  0792  09DE               	comf	___altoft@c+3,f
  2301  0793  0ADB               	incf	___altoft@c,f
  2302  0794  1903               	skipnz
  2303  0795  0ADC               	incf	___altoft@c+1,f
  2304  0796  1903               	skipnz
  2305  0797  0ADD               	incf	___altoft@c+2,f
  2306  0798  1903               	skipnz
  2307  0799  0ADE               	incf	___altoft@c+3,f
  2308  079A  01E2               	clrf	___altoft@sign
  2309  079B  0AE2               	incf	___altoft@sign,f
  2310  079C                     l1197:	
  2311  079C  30FF               	movlw	255
  2312  079D  055E               	andwf	___altoft@c+3,w
  2313  079E  1903               	btfsc	3,2
  2314  079F  2FAC               	goto	l1199
  2315  07A0  3001               	movlw	1
  2316  07A1                     u1235:	
  2317  07A1  36DE               	lsrf	___altoft@c+3,f
  2318  07A2  0CDD               	rrf	___altoft@c+2,f
  2319  07A3  0CDC               	rrf	___altoft@c+1,f
  2320  07A4  0CDB               	rrf	___altoft@c,f
  2321  07A5  0B89               	decfsz	9,f
  2322  07A6  2FA1               	goto	u1235
  2323  07A7  3001               	movlw	1
  2324  07A8  00DF               	movwf	??___altoft
  2325  07A9  085F               	movf	??___altoft,w
  2326  07AA  07E1               	addwf	___altoft@exp,f
  2327  07AB  2F9C               	goto	l1197
  2328  07AC                     l1199:	
  2329  07AC  085B               	movf	___altoft@c,w
  2330  07AD  00F2               	movwf	___ftpack@arg
  2331  07AE  085C               	movf	___altoft@c+1,w
  2332  07AF  00F3               	movwf	___ftpack@arg+1
  2333  07B0  085D               	movf	___altoft@c+2,w
  2334  07B1  00F4               	movwf	___ftpack@arg+2
  2335  07B2  0861               	movf	___altoft@exp,w
  2336  07B3  00DF               	movwf	??___altoft
  2337  07B4  085F               	movf	??___altoft,w
  2338  07B5  00F5               	movwf	___ftpack@exp
  2339  07B6  0862               	movf	___altoft@sign,w
  2340  07B7  00E0               	movwf	??___altoft+1
  2341  07B8  0860               	movf	??___altoft+1,w
  2342  07B9  00F6               	movwf	___ftpack@sign
  2343  07BA  3186  2686         	fcall	___ftpack
  2344  07BC  0872               	movf	?___ftpack,w
  2345  07BD  0020               	movlb	0	; select bank0
  2346  07BE  00DB               	movwf	?___altoft
  2347  07BF  0873               	movf	?___ftpack+1,w
  2348  07C0  00DC               	movwf	?___altoft+1
  2349  07C1  0874               	movf	?___ftpack+2,w
  2350  07C2  00DD               	movwf	?___altoft+2
  2351  07C3  0008               	return
  2352  07C4                     __end_of___altoft:	
  2353                           
  2354                           	psect	text7
  2355  06EA                     __ptext7:	
  2356 ;; *************** function _eval_poly *****************
  2357 ;; Defined at:
  2358 ;;		line 4 in file "/Applications/microchip/xc8/v1.45/sources/common/evalpoly.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  x               3   45[BANK0 ] float 
  2361 ;;  d               2   48[BANK0 ] PTR const 
  2362 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  2363 ;;  n               2   50[BANK0 ] int 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  res             3   52[BANK0 ] int 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  3   45[BANK0 ] int 
  2368 ;; Registers used:
  2369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2375 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2379 ;;Total ram usage:       10 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    4
  2382 ;; This function calls:
  2383 ;;		___ftadd
  2384 ;;		___ftmul
  2385 ;;		___wmul
  2386 ;; This function is called by:
  2387 ;;		_sin
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _eval_poly
  2393  06EA                     _eval_poly:	
  2394                           
  2395                           ;incstack = 0
  2396                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2397  06EA  0020               	movlb	0	; select bank0
  2398  06EB  0853               	movf	eval_poly@n+1,w
  2399  06EC  00F3               	movwf	___wmul@multiplier+1
  2400  06ED  0852               	movf	eval_poly@n,w
  2401  06EE  00F2               	movwf	___wmul@multiplier
  2402  06EF  3003               	movlw	3
  2403  06F0  00F4               	movwf	___wmul@multiplicand
  2404  06F1  3000               	movlw	0
  2405  06F2  00F5               	movwf	___wmul@multiplicand+1
  2406  06F3  318F  2760  3186   	fcall	___wmul
  2407  06F6  0020               	movlb	0	; select bank0
  2408  06F7  0850               	movf	eval_poly@d,w
  2409  06F8  0772               	addwf	?___wmul,w
  2410  06F9  0084               	movwf	4
  2411  06FA  0851               	movf	eval_poly@d+1,w
  2412  06FB  3D73               	addwfc	?___wmul+1,w
  2413  06FC  0085               	movwf	5
  2414  06FD  3F00               	moviw [0]fsr0
  2415  06FE  00D4               	movwf	eval_poly@res
  2416  06FF  3F01               	moviw [1]fsr0
  2417  0700  00D5               	movwf	eval_poly@res+1
  2418  0701  3F02               	moviw [2]fsr0
  2419  0702                     L2:	
  2420  0702  00D6               	movwf	eval_poly@res+2
  2421  0703  0852               	movf	eval_poly@n,w
  2422  0704  0453               	iorwf	eval_poly@n+1,w
  2423  0705  1903               	btfsc	3,2
  2424  0706  2F43               	goto	l1493
  2425  0707  30FF               	movlw	255
  2426  0708  07D2               	addwf	eval_poly@n,f
  2427  0709  30FF               	movlw	255
  2428  070A  3DD3               	addwfc	eval_poly@n+1,f
  2429  070B  0853               	movf	eval_poly@n+1,w
  2430  070C  00F3               	movwf	___wmul@multiplier+1
  2431  070D  0852               	movf	eval_poly@n,w
  2432  070E  00F2               	movwf	___wmul@multiplier
  2433  070F  3003               	movlw	3
  2434  0710  00F4               	movwf	___wmul@multiplicand
  2435  0711  3000               	movlw	0
  2436  0712  00F5               	movwf	___wmul@multiplicand+1
  2437  0713  318F  2760  3186   	fcall	___wmul
  2438  0716  0020               	movlb	0	; select bank0
  2439  0717  0850               	movf	eval_poly@d,w
  2440  0718  0772               	addwf	?___wmul,w
  2441  0719  0084               	movwf	4
  2442  071A  0851               	movf	eval_poly@d+1,w
  2443  071B  3D73               	addwfc	?___wmul+1,w
  2444  071C  0085               	movwf	5
  2445  071D  3F00               	moviw [0]fsr0
  2446  071E  00C0               	movwf	___ftadd@f1
  2447  071F  3F01               	moviw [1]fsr0
  2448  0720  00C1               	movwf	___ftadd@f1+1
  2449  0721  3F02               	moviw [2]fsr0
  2450  0722  00C2               	movwf	___ftadd@f1+2
  2451  0723  0854               	movf	eval_poly@res,w
  2452  0724  00A0               	movwf	___ftmul@f1
  2453  0725  0855               	movf	eval_poly@res+1,w
  2454  0726  00A1               	movwf	___ftmul@f1+1
  2455  0727  0856               	movf	eval_poly@res+2,w
  2456  0728  00A2               	movwf	___ftmul@f1+2
  2457  0729  084D               	movf	eval_poly@x,w
  2458  072A  00A3               	movwf	___ftmul@f2
  2459  072B  084E               	movf	eval_poly@x+1,w
  2460  072C  00A4               	movwf	___ftmul@f2+1
  2461  072D  084F               	movf	eval_poly@x+2,w
  2462  072E  00A5               	movwf	___ftmul@f2+2
  2463  072F  3184  241D  3186   	fcall	___ftmul
  2464  0732  0020               	movlb	0	; select bank0
  2465  0733  0820               	movf	?___ftmul,w
  2466  0734  00C3               	movwf	___ftadd@f2
  2467  0735  0821               	movf	?___ftmul+1,w
  2468  0736  00C4               	movwf	___ftadd@f2+1
  2469  0737  0822               	movf	?___ftmul+2,w
  2470  0738  00C5               	movwf	___ftadd@f2+2
  2471  0739  3183  2327  3186   	fcall	___ftadd
  2472  073C  0020               	movlb	0	; select bank0
  2473  073D  0840               	movf	?___ftadd,w
  2474  073E  00D4               	movwf	eval_poly@res
  2475  073F  0841               	movf	?___ftadd+1,w
  2476  0740  00D5               	movwf	eval_poly@res+1
  2477  0741  0842               	movf	?___ftadd+2,w
  2478  0742  2F02               	goto	L2
  2479  0743                     l1493:	
  2480  0743  0854               	movf	eval_poly@res,w
  2481  0744  00CD               	movwf	?_eval_poly
  2482  0745  0855               	movf	eval_poly@res+1,w
  2483  0746  00CE               	movwf	?_eval_poly+1
  2484  0747  0856               	movf	eval_poly@res+2,w
  2485  0748  00CF               	movwf	?_eval_poly+2
  2486  0749  0008               	return
  2487  074A                     __end_of_eval_poly:	
  2488                           
  2489                           	psect	text8
  2490  0F60                     __ptext8:	
  2491 ;; *************** function ___wmul *****************
  2492 ;; Defined at:
  2493 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul16.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  multiplier      2    2[COMMON] unsigned int 
  2496 ;;  multiplicand    2    4[COMMON] unsigned int 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  product         2    6[COMMON] unsigned int 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  2    2[COMMON] unsigned int 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2511 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2512 ;;Total ram usage:        6 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    2
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_eval_poly
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function ___wmul
  2524  0F60                     ___wmul:	
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2528  0F60  01F6               	clrf	___wmul@product
  2529  0F61  01F7               	clrf	___wmul@product+1
  2530  0F62                     l1175:	
  2531  0F62  1C72               	btfss	___wmul@multiplier,0
  2532  0F63  2F68               	goto	l151
  2533  0F64  0874               	movf	___wmul@multiplicand,w
  2534  0F65  07F6               	addwf	___wmul@product,f
  2535  0F66  0875               	movf	___wmul@multiplicand+1,w
  2536  0F67  3DF7               	addwfc	___wmul@product+1,f
  2537  0F68                     l151:	
  2538  0F68  3001               	movlw	1
  2539  0F69                     u1195:	
  2540  0F69  35F4               	lslf	___wmul@multiplicand,f
  2541  0F6A  0DF5               	rlf	___wmul@multiplicand+1,f
  2542  0F6B  0B89               	decfsz	9,f
  2543  0F6C  2F69               	goto	u1195
  2544  0F6D  3001               	movlw	1
  2545  0F6E                     u1205:	
  2546  0F6E  36F3               	lsrf	___wmul@multiplier+1,f
  2547  0F6F  0CF2               	rrf	___wmul@multiplier,f
  2548  0F70  0B89               	decfsz	9,f
  2549  0F71  2F6E               	goto	u1205
  2550  0F72  0872               	movf	___wmul@multiplier,w
  2551  0F73  0473               	iorwf	___wmul@multiplier+1,w
  2552  0F74  1D03               	btfss	3,2
  2553  0F75  2F62               	goto	l1175
  2554  0F76  0877               	movf	___wmul@product+1,w
  2555  0F77  00F3               	movwf	?___wmul+1
  2556  0F78  0876               	movf	___wmul@product,w
  2557  0F79  00F2               	movwf	?___wmul
  2558  0F7A  0008               	return
  2559  0F7B                     __end_of___wmul:	
  2560                           
  2561                           	psect	text9
  2562  041D                     __ptext9:	
  2563 ;; *************** function ___ftmul *****************
  2564 ;; Defined at:
  2565 ;;		line 62 in file "/Applications/microchip/xc8/v1.45/sources/common/ftmul.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  f1              3    0[BANK0 ] float 
  2568 ;;  f2              3    3[BANK0 ] float 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2571 ;;  sign            1   15[BANK0 ] unsigned char 
  2572 ;;  cntr            1   14[BANK0 ] unsigned char 
  2573 ;;  exp             1   10[BANK0 ] unsigned char 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  3    0[BANK0 ] float 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0, pclath, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2583 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2584 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;Total ram usage:       16 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    3
  2590 ;; This function calls:
  2591 ;;		___ftpack
  2592 ;; This function is called by:
  2593 ;;		_main
  2594 ;;		_sin
  2595 ;;		_eval_poly
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function ___ftmul
  2601  041D                     ___ftmul:	
  2602                           
  2603                           ;incstack = 0
  2604                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2605  041D  0020               	movlb	0	; select bank0
  2606  041E  0820               	movf	___ftmul@f1,w
  2607  041F  00A6               	movwf	??___ftmul
  2608  0420  0821               	movf	___ftmul@f1+1,w
  2609  0421  00A7               	movwf	??___ftmul+1
  2610  0422  0822               	movf	___ftmul@f1+2,w
  2611  0423  00A8               	movwf	??___ftmul+2
  2612  0424  1003               	clrc
  2613  0425  0D27               	rlf	??___ftmul+1,w
  2614  0426  0D28               	rlf	??___ftmul+2,w
  2615  0427  00A9               	movwf	??___ftmul+3
  2616  0428  0829               	movf	??___ftmul+3,w
  2617  0429  00AA               	movwf	___ftmul@exp
  2618  042A  082A               	movf	___ftmul@exp,w
  2619  042B  1D03               	btfss	3,2
  2620  042C  2C34               	goto	l1299
  2621  042D  3000               	movlw	0
  2622  042E  00A0               	movwf	?___ftmul
  2623  042F  3000               	movlw	0
  2624  0430  00A1               	movwf	?___ftmul+1
  2625  0431  3000               	movlw	0
  2626  0432  00A2               	movwf	?___ftmul+2
  2627  0433  0008               	return
  2628  0434                     l1299:	
  2629  0434  0823               	movf	___ftmul@f2,w
  2630  0435  00A6               	movwf	??___ftmul
  2631  0436  0824               	movf	___ftmul@f2+1,w
  2632  0437  00A7               	movwf	??___ftmul+1
  2633  0438  0825               	movf	___ftmul@f2+2,w
  2634  0439  00A8               	movwf	??___ftmul+2
  2635  043A  1003               	clrc
  2636  043B  0D27               	rlf	??___ftmul+1,w
  2637  043C  0D28               	rlf	??___ftmul+2,w
  2638  043D  00A9               	movwf	??___ftmul+3
  2639  043E  0829               	movf	??___ftmul+3,w
  2640  043F  00AF               	movwf	___ftmul@sign
  2641  0440  082F               	movf	___ftmul@sign,w
  2642  0441  1D03               	btfss	3,2
  2643  0442  2C4A               	goto	l1305
  2644  0443  3000               	movlw	0
  2645  0444  00A0               	movwf	?___ftmul
  2646  0445  3000               	movlw	0
  2647  0446  00A1               	movwf	?___ftmul+1
  2648  0447  3000               	movlw	0
  2649  0448  00A2               	movwf	?___ftmul+2
  2650  0449  0008               	return
  2651  044A                     l1305:	
  2652  044A  082F               	movf	___ftmul@sign,w
  2653  044B  3E7B               	addlw	123
  2654  044C  00A6               	movwf	??___ftmul
  2655  044D  0826               	movf	??___ftmul,w
  2656  044E  07AA               	addwf	___ftmul@exp,f
  2657  044F  0820               	movf	___ftmul@f1,w
  2658  0450  00A6               	movwf	??___ftmul
  2659  0451  0821               	movf	___ftmul@f1+1,w
  2660  0452  00A7               	movwf	??___ftmul+1
  2661  0453  0822               	movf	___ftmul@f1+2,w
  2662  0454  00A8               	movwf	??___ftmul+2
  2663  0455  3010               	movlw	16
  2664  0456                     u1535:	
  2665  0456  36A8               	lsrf	??___ftmul+2,f
  2666  0457  0CA7               	rrf	??___ftmul+1,f
  2667  0458  0CA6               	rrf	??___ftmul,f
  2668  0459  0B89               	decfsz	9,f
  2669  045A  2C56               	goto	u1535
  2670  045B  0826               	movf	??___ftmul,w
  2671  045C  00A9               	movwf	??___ftmul+3
  2672  045D  0829               	movf	??___ftmul+3,w
  2673  045E  00AF               	movwf	___ftmul@sign
  2674  045F  0823               	movf	___ftmul@f2,w
  2675  0460  00A6               	movwf	??___ftmul
  2676  0461  0824               	movf	___ftmul@f2+1,w
  2677  0462  00A7               	movwf	??___ftmul+1
  2678  0463  0825               	movf	___ftmul@f2+2,w
  2679  0464  00A8               	movwf	??___ftmul+2
  2680  0465  3010               	movlw	16
  2681  0466                     u1545:	
  2682  0466  36A8               	lsrf	??___ftmul+2,f
  2683  0467  0CA7               	rrf	??___ftmul+1,f
  2684  0468  0CA6               	rrf	??___ftmul,f
  2685  0469  0B89               	decfsz	9,f
  2686  046A  2C66               	goto	u1545
  2687  046B  0826               	movf	??___ftmul,w
  2688  046C  00A9               	movwf	??___ftmul+3
  2689  046D  0829               	movf	??___ftmul+3,w
  2690  046E  06AF               	xorwf	___ftmul@sign,f
  2691  046F  3080               	movlw	128
  2692  0470  00A6               	movwf	??___ftmul
  2693  0471  0826               	movf	??___ftmul,w
  2694  0472  05AF               	andwf	___ftmul@sign,f
  2695  0473  17A1               	bsf	___ftmul@f1+1,7
  2696  0474  17A4               	bsf	___ftmul@f2+1,7
  2697  0475  30FF               	movlw	255
  2698  0476  05A3               	andwf	___ftmul@f2,f
  2699  0477  30FF               	movlw	255
  2700  0478  05A4               	andwf	___ftmul@f2+1,f
  2701  0479  3000               	movlw	0
  2702  047A  05A5               	andwf	___ftmul@f2+2,f
  2703  047B  3000               	movlw	0
  2704  047C  00AB               	movwf	___ftmul@f3_as_product
  2705  047D  3000               	movlw	0
  2706  047E  00AC               	movwf	___ftmul@f3_as_product+1
  2707  047F  3000               	movlw	0
  2708  0480  00AD               	movwf	___ftmul@f3_as_product+2
  2709  0481  3007               	movlw	7
  2710  0482  00A6               	movwf	??___ftmul
  2711  0483  0826               	movf	??___ftmul,w
  2712  0484  00AE               	movwf	___ftmul@cntr
  2713  0485                     l1317:	
  2714  0485  1C20               	btfss	___ftmul@f1,0
  2715  0486  2C8D               	goto	l1321
  2716  0487  0823               	movf	___ftmul@f2,w
  2717  0488  07AB               	addwf	___ftmul@f3_as_product,f
  2718  0489  0824               	movf	___ftmul@f2+1,w
  2719  048A  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2720  048B  0825               	movf	___ftmul@f2+2,w
  2721  048C  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2722  048D                     l1321:	
  2723  048D  3001               	movlw	1
  2724  048E                     u1565:	
  2725  048E  36A2               	lsrf	___ftmul@f1+2,f
  2726  048F  0CA1               	rrf	___ftmul@f1+1,f
  2727  0490  0CA0               	rrf	___ftmul@f1,f
  2728  0491  0B89               	decfsz	9,f
  2729  0492  2C8E               	goto	u1565
  2730  0493  3001               	movlw	1
  2731  0494                     u1575:	
  2732  0494  35A3               	lslf	___ftmul@f2,f
  2733  0495  0DA4               	rlf	___ftmul@f2+1,f
  2734  0496  0DA5               	rlf	___ftmul@f2+2,f
  2735  0497  0B89               	decfsz	9,f
  2736  0498  2C94               	goto	u1575
  2737  0499  3001               	movlw	1
  2738  049A  02AE               	subwf	___ftmul@cntr,f
  2739  049B  1D03               	btfss	3,2
  2740  049C  2C85               	goto	l1317
  2741  049D  3009               	movlw	9
  2742  049E  00A6               	movwf	??___ftmul
  2743  049F  0826               	movf	??___ftmul,w
  2744  04A0  00AE               	movwf	___ftmul@cntr
  2745  04A1                     l1329:	
  2746  04A1  1C20               	btfss	___ftmul@f1,0
  2747  04A2  2CA9               	goto	l1333
  2748  04A3  0823               	movf	___ftmul@f2,w
  2749  04A4  07AB               	addwf	___ftmul@f3_as_product,f
  2750  04A5  0824               	movf	___ftmul@f2+1,w
  2751  04A6  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2752  04A7  0825               	movf	___ftmul@f2+2,w
  2753  04A8  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2754  04A9                     l1333:	
  2755  04A9  3001               	movlw	1
  2756  04AA                     u1605:	
  2757  04AA  36A2               	lsrf	___ftmul@f1+2,f
  2758  04AB  0CA1               	rrf	___ftmul@f1+1,f
  2759  04AC  0CA0               	rrf	___ftmul@f1,f
  2760  04AD  0B89               	decfsz	9,f
  2761  04AE  2CAA               	goto	u1605
  2762  04AF  3001               	movlw	1
  2763  04B0                     u1615:	
  2764  04B0  36AD               	lsrf	___ftmul@f3_as_product+2,f
  2765  04B1  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2766  04B2  0CAB               	rrf	___ftmul@f3_as_product,f
  2767  04B3  0B89               	decfsz	9,f
  2768  04B4  2CB0               	goto	u1615
  2769  04B5  3001               	movlw	1
  2770  04B6  02AE               	subwf	___ftmul@cntr,f
  2771  04B7  1D03               	btfss	3,2
  2772  04B8  2CA1               	goto	l1329
  2773  04B9  082B               	movf	___ftmul@f3_as_product,w
  2774  04BA  00F2               	movwf	___ftpack@arg
  2775  04BB  082C               	movf	___ftmul@f3_as_product+1,w
  2776  04BC  00F3               	movwf	___ftpack@arg+1
  2777  04BD  082D               	movf	___ftmul@f3_as_product+2,w
  2778  04BE  00F4               	movwf	___ftpack@arg+2
  2779  04BF  082A               	movf	___ftmul@exp,w
  2780  04C0  00A6               	movwf	??___ftmul
  2781  04C1  0826               	movf	??___ftmul,w
  2782  04C2  00F5               	movwf	___ftpack@exp
  2783  04C3  082F               	movf	___ftmul@sign,w
  2784  04C4  00A7               	movwf	??___ftmul+1
  2785  04C5  0827               	movf	??___ftmul+1,w
  2786  04C6  00F6               	movwf	___ftpack@sign
  2787  04C7  3186  2686         	fcall	___ftpack
  2788  04C9  0872               	movf	?___ftpack,w
  2789  04CA  0020               	movlb	0	; select bank0
  2790  04CB  00A0               	movwf	?___ftmul
  2791  04CC  0873               	movf	?___ftpack+1,w
  2792  04CD  00A1               	movwf	?___ftmul+1
  2793  04CE  0874               	movf	?___ftpack+2,w
  2794  04CF  00A2               	movwf	?___ftmul+2
  2795  04D0  0008               	return
  2796  04D1                     __end_of___ftmul:	
  2797                           
  2798                           	psect	text10
  2799  0F9E                     __ptext10:	
  2800 ;; *************** function ___ftsub *****************
  2801 ;; Defined at:
  2802 ;;		line 18 in file "/Applications/microchip/xc8/v1.45/sources/common/ftsub.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  f2              3    0[BANK1 ] float 
  2805 ;;  f1              3    3[BANK1 ] float 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;		None
  2808 ;; Return value:  Size  Location     Type
  2809 ;;                  3    0[BANK1 ] float 
  2810 ;; Registers used:
  2811 ;;		wreg, status,2, status,0, pclath, cstack
  2812 ;; Tracked objects:
  2813 ;;		On entry : 0/0
  2814 ;;		On exit  : 0/0
  2815 ;;		Unchanged: 0/0
  2816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2817 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2820 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2821 ;;Total ram usage:        6 bytes
  2822 ;; Hardware stack levels used:    1
  2823 ;; Hardware stack levels required when called:    4
  2824 ;; This function calls:
  2825 ;;		___ftadd
  2826 ;; This function is called by:
  2827 ;;		_sin
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function ___ftsub
  2833  0F9E                     ___ftsub:	
  2834                           
  2835                           ;incstack = 0
  2836                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  2837  0F9E  0021               	movlb	1	; select bank1
  2838  0F9F  0822               	movf	(___ftsub@f2+2)^(0+128),w
  2839  0FA0  0421               	iorwf	(___ftsub@f2+1)^(0+128),w
  2840  0FA1  0420               	iorwf	___ftsub@f2^(0+128),w
  2841  0FA2  1903               	skipnz
  2842  0FA3  2FA6               	goto	l1455
  2843  0FA4  3080               	movlw	128
  2844  0FA5  06A2               	xorwf	(___ftsub@f2+2)^(0+128),f
  2845  0FA6                     l1455:	
  2846  0FA6  0823               	movf	___ftsub@f1^(0+128),w
  2847  0FA7  0020               	movlb	0	; select bank0
  2848  0FA8  00C0               	movwf	___ftadd@f1
  2849  0FA9  0021               	movlb	1	; select bank1
  2850  0FAA  0824               	movf	(___ftsub@f1+1)^(0+128),w
  2851  0FAB  0020               	movlb	0	; select bank0
  2852  0FAC  00C1               	movwf	___ftadd@f1+1
  2853  0FAD  0021               	movlb	1	; select bank1
  2854  0FAE  0825               	movf	(___ftsub@f1+2)^(0+128),w
  2855  0FAF  0020               	movlb	0	; select bank0
  2856  0FB0  00C2               	movwf	___ftadd@f1+2
  2857  0FB1  0021               	movlb	1	; select bank1
  2858  0FB2  0820               	movf	___ftsub@f2^(0+128),w
  2859  0FB3  0020               	movlb	0	; select bank0
  2860  0FB4  00C3               	movwf	___ftadd@f2
  2861  0FB5  0021               	movlb	1	; select bank1
  2862  0FB6  0821               	movf	(___ftsub@f2+1)^(0+128),w
  2863  0FB7  0020               	movlb	0	; select bank0
  2864  0FB8  00C4               	movwf	___ftadd@f2+1
  2865  0FB9  0021               	movlb	1	; select bank1
  2866  0FBA  0822               	movf	(___ftsub@f2+2)^(0+128),w
  2867  0FBB  0020               	movlb	0	; select bank0
  2868  0FBC  00C5               	movwf	___ftadd@f2+2
  2869  0FBD  3183  2327         	fcall	___ftadd
  2870  0FBF  0020               	movlb	0	; select bank0
  2871  0FC0  0840               	movf	?___ftadd,w
  2872  0FC1  0021               	movlb	1	; select bank1
  2873  0FC2  00A0               	movwf	?___ftsub^(0+128)
  2874  0FC3  0020               	movlb	0	; select bank0
  2875  0FC4  0841               	movf	?___ftadd+1,w
  2876  0FC5  0021               	movlb	1	; select bank1
  2877  0FC6  00A1               	movwf	(?___ftsub+1)^(0+128)
  2878  0FC7  0020               	movlb	0	; select bank0
  2879  0FC8  0842               	movf	?___ftadd+2,w
  2880  0FC9  0021               	movlb	1	; select bank1
  2881  0FCA  00A2               	movwf	(?___ftsub+2)^(0+128)
  2882  0FCB  0008               	return
  2883  0FCC                     __end_of___ftsub:	
  2884                           
  2885                           	psect	text11
  2886  0327                     __ptext11:	
  2887 ;; *************** function ___ftadd *****************
  2888 ;; Defined at:
  2889 ;;		line 86 in file "/Applications/microchip/xc8/v1.45/sources/common/ftadd.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  f1              3   32[BANK0 ] float 
  2892 ;;  f2              3   35[BANK0 ] float 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  exp1            1   44[BANK0 ] unsigned char 
  2895 ;;  exp2            1   43[BANK0 ] unsigned char 
  2896 ;;  sign            1   42[BANK0 ] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  3   32[BANK0 ] float 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2906 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;Total ram usage:       13 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    3
  2913 ;; This function calls:
  2914 ;;		___ftpack
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;;		___ftsub
  2918 ;;		_sin
  2919 ;;		_eval_poly
  2920 ;;		_floor
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           
  2925                           ;psect for function ___ftadd
  2926  0327                     ___ftadd:	
  2927                           
  2928                           ;incstack = 0
  2929                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2930  0327  0020               	movlb	0	; select bank0
  2931  0328  0840               	movf	___ftadd@f1,w
  2932  0329  00C6               	movwf	??___ftadd
  2933  032A  0841               	movf	___ftadd@f1+1,w
  2934  032B  00C7               	movwf	??___ftadd+1
  2935  032C  0842               	movf	___ftadd@f1+2,w
  2936  032D  00C8               	movwf	??___ftadd+2
  2937  032E  1003               	clrc
  2938  032F  0D47               	rlf	??___ftadd+1,w
  2939  0330  0D48               	rlf	??___ftadd+2,w
  2940  0331  00C9               	movwf	??___ftadd+3
  2941  0332  0849               	movf	??___ftadd+3,w
  2942  0333  00CC               	movwf	___ftadd@exp1
  2943  0334  0843               	movf	___ftadd@f2,w
  2944  0335  00C6               	movwf	??___ftadd
  2945  0336  0844               	movf	___ftadd@f2+1,w
  2946  0337  00C7               	movwf	??___ftadd+1
  2947  0338  0845               	movf	___ftadd@f2+2,w
  2948  0339  00C8               	movwf	??___ftadd+2
  2949  033A  1003               	clrc
  2950  033B  0D47               	rlf	??___ftadd+1,w
  2951  033C  0D48               	rlf	??___ftadd+2,w
  2952  033D  00C9               	movwf	??___ftadd+3
  2953  033E  0849               	movf	??___ftadd+3,w
  2954  033F  00CB               	movwf	___ftadd@exp2
  2955  0340  084C               	movf	___ftadd@exp1,w
  2956  0341  1903               	btfsc	3,2
  2957  0342  2B4F               	goto	l1209
  2958  0343  084B               	movf	___ftadd@exp2,w
  2959  0344  024C               	subwf	___ftadd@exp1,w
  2960  0345  1803               	skipnc
  2961  0346  2B56               	goto	l1213
  2962  0347  034C               	decf	___ftadd@exp1,w
  2963  0348  3AFF               	xorlw	255
  2964  0349  074B               	addwf	___ftadd@exp2,w
  2965  034A  00C6               	movwf	??___ftadd
  2966  034B  3019               	movlw	25
  2967  034C  0246               	subwf	??___ftadd,w
  2968  034D  1C03               	skipc
  2969  034E  2B56               	goto	l1213
  2970  034F                     l1209:	
  2971  034F  0843               	movf	___ftadd@f2,w
  2972  0350  00C0               	movwf	?___ftadd
  2973  0351  0844               	movf	___ftadd@f2+1,w
  2974  0352  00C1               	movwf	?___ftadd+1
  2975  0353  0845               	movf	___ftadd@f2+2,w
  2976  0354  00C2               	movwf	?___ftadd+2
  2977  0355  0008               	return
  2978  0356                     l1213:	
  2979  0356  084B               	movf	___ftadd@exp2,w
  2980  0357  1903               	btfsc	3,2
  2981  0358  0008               	return
  2982  0359  084C               	movf	___ftadd@exp1,w
  2983  035A  024B               	subwf	___ftadd@exp2,w
  2984  035B  1803               	skipnc
  2985  035C  2B65               	goto	l1219
  2986  035D  034B               	decf	___ftadd@exp2,w
  2987  035E  3AFF               	xorlw	255
  2988  035F  074C               	addwf	___ftadd@exp1,w
  2989  0360  00C6               	movwf	??___ftadd
  2990  0361  3019               	movlw	25
  2991  0362  0246               	subwf	??___ftadd,w
  2992  0363  1803               	btfsc	3,0
  2993  0364  0008               	return
  2994  0365                     l1219:	
  2995  0365  3006               	movlw	6
  2996  0366  00C6               	movwf	??___ftadd
  2997  0367  0846               	movf	??___ftadd,w
  2998  0368  00CA               	movwf	___ftadd@sign
  2999  0369  1BC2               	btfsc	___ftadd@f1+2,7
  3000  036A  17CA               	bsf	___ftadd@sign,7
  3001  036B  1BC5               	btfsc	___ftadd@f2+2,7
  3002  036C  174A               	bsf	___ftadd@sign,6
  3003  036D  17C1               	bsf	___ftadd@f1+1,7
  3004  036E  30FF               	movlw	255
  3005  036F  05C0               	andwf	___ftadd@f1,f
  3006  0370  30FF               	movlw	255
  3007  0371  05C1               	andwf	___ftadd@f1+1,f
  3008  0372  3000               	movlw	0
  3009  0373  05C2               	andwf	___ftadd@f1+2,f
  3010  0374  17C4               	bsf	___ftadd@f2+1,7
  3011  0375  30FF               	movlw	255
  3012  0376  05C3               	andwf	___ftadd@f2,f
  3013  0377  30FF               	movlw	255
  3014  0378  05C4               	andwf	___ftadd@f2+1,f
  3015  0379  3000               	movlw	0
  3016  037A  05C5               	andwf	___ftadd@f2+2,f
  3017  037B  084B               	movf	___ftadd@exp2,w
  3018  037C  024C               	subwf	___ftadd@exp1,w
  3019  037D  1803               	skipnc
  3020  037E  2BA1               	goto	l1241
  3021  037F                     l1231:	
  3022  037F  3001               	movlw	1
  3023  0380                     u1345:	
  3024  0380  35C3               	lslf	___ftadd@f2,f
  3025  0381  0DC4               	rlf	___ftadd@f2+1,f
  3026  0382  0DC5               	rlf	___ftadd@f2+2,f
  3027  0383  0B89               	decfsz	9,f
  3028  0384  2B80               	goto	u1345
  3029  0385  3001               	movlw	1
  3030  0386  02CB               	subwf	___ftadd@exp2,f
  3031  0387  084B               	movf	___ftadd@exp2,w
  3032  0388  064C               	xorwf	___ftadd@exp1,w
  3033  0389  1903               	skipnz
  3034  038A  2B9C               	goto	l1239
  3035  038B  3001               	movlw	1
  3036  038C  02CA               	subwf	___ftadd@sign,f
  3037  038D  084A               	movf	___ftadd@sign,w
  3038  038E  3907               	andlw	7
  3039  038F  1903               	btfsc	3,2
  3040  0390  2B9C               	goto	l1239
  3041  0391  2B7F               	goto	l1231
  3042  0392                     l1237:	
  3043  0392  3001               	movlw	1
  3044  0393                     u1375:	
  3045  0393  36C2               	lsrf	___ftadd@f1+2,f
  3046  0394  0CC1               	rrf	___ftadd@f1+1,f
  3047  0395  0CC0               	rrf	___ftadd@f1,f
  3048  0396  0B89               	decfsz	9,f
  3049  0397  2B93               	goto	u1375
  3050  0398  3001               	movlw	1
  3051  0399  00C6               	movwf	??___ftadd
  3052  039A  0846               	movf	??___ftadd,w
  3053  039B  07CC               	addwf	___ftadd@exp1,f
  3054  039C                     l1239:	
  3055  039C  084C               	movf	___ftadd@exp1,w
  3056  039D  064B               	xorwf	___ftadd@exp2,w
  3057  039E  1903               	btfsc	3,2
  3058  039F  2BC6               	goto	l343
  3059  03A0  2B92               	goto	l1237
  3060  03A1                     l1241:	
  3061  03A1  084C               	movf	___ftadd@exp1,w
  3062  03A2  024B               	subwf	___ftadd@exp2,w
  3063  03A3  1803               	skipnc
  3064  03A4  2BC6               	goto	l343
  3065  03A5                     l1243:	
  3066  03A5  3001               	movlw	1
  3067  03A6                     u1405:	
  3068  03A6  35C0               	lslf	___ftadd@f1,f
  3069  03A7  0DC1               	rlf	___ftadd@f1+1,f
  3070  03A8  0DC2               	rlf	___ftadd@f1+2,f
  3071  03A9  0B89               	decfsz	9,f
  3072  03AA  2BA6               	goto	u1405
  3073  03AB  3001               	movlw	1
  3074  03AC  02CC               	subwf	___ftadd@exp1,f
  3075  03AD  084B               	movf	___ftadd@exp2,w
  3076  03AE  064C               	xorwf	___ftadd@exp1,w
  3077  03AF  1903               	skipnz
  3078  03B0  2BC2               	goto	l1251
  3079  03B1  3001               	movlw	1
  3080  03B2  02CA               	subwf	___ftadd@sign,f
  3081  03B3  084A               	movf	___ftadd@sign,w
  3082  03B4  3907               	andlw	7
  3083  03B5  1903               	btfsc	3,2
  3084  03B6  2BC2               	goto	l1251
  3085  03B7  2BA5               	goto	l1243
  3086  03B8                     l1249:	
  3087  03B8  3001               	movlw	1
  3088  03B9                     u1435:	
  3089  03B9  36C5               	lsrf	___ftadd@f2+2,f
  3090  03BA  0CC4               	rrf	___ftadd@f2+1,f
  3091  03BB  0CC3               	rrf	___ftadd@f2,f
  3092  03BC  0B89               	decfsz	9,f
  3093  03BD  2BB9               	goto	u1435
  3094  03BE  3001               	movlw	1
  3095  03BF  00C6               	movwf	??___ftadd
  3096  03C0  0846               	movf	??___ftadd,w
  3097  03C1  07CB               	addwf	___ftadd@exp2,f
  3098  03C2                     l1251:	
  3099  03C2  084C               	movf	___ftadd@exp1,w
  3100  03C3  064B               	xorwf	___ftadd@exp2,w
  3101  03C4  1D03               	skipz
  3102  03C5  2BB8               	goto	l1249
  3103  03C6                     l343:	
  3104  03C6  1FCA               	btfss	___ftadd@sign,7
  3105  03C7  2BD8               	goto	l1255
  3106  03C8  30FF               	movlw	255
  3107  03C9  06C0               	xorwf	___ftadd@f1,f
  3108  03CA  30FF               	movlw	255
  3109  03CB  06C1               	xorwf	___ftadd@f1+1,f
  3110  03CC  30FF               	movlw	255
  3111  03CD  06C2               	xorwf	___ftadd@f1+2,f
  3112  03CE  3001               	movlw	1
  3113  03CF  07C0               	addwf	___ftadd@f1,f
  3114  03D0  3000               	movlw	0
  3115  03D1  1803               	skipnc
  3116  03D2  3001               	movlw	1
  3117  03D3  07C1               	addwf	___ftadd@f1+1,f
  3118  03D4  3000               	movlw	0
  3119  03D5  1803               	skipnc
  3120  03D6  3001               	movlw	1
  3121  03D7  07C2               	addwf	___ftadd@f1+2,f
  3122  03D8                     l1255:	
  3123  03D8  1F4A               	btfss	___ftadd@sign,6
  3124  03D9  2BEA               	goto	l1259
  3125  03DA  30FF               	movlw	255
  3126  03DB  06C3               	xorwf	___ftadd@f2,f
  3127  03DC  30FF               	movlw	255
  3128  03DD  06C4               	xorwf	___ftadd@f2+1,f
  3129  03DE  30FF               	movlw	255
  3130  03DF  06C5               	xorwf	___ftadd@f2+2,f
  3131  03E0  3001               	movlw	1
  3132  03E1  07C3               	addwf	___ftadd@f2,f
  3133  03E2  3000               	movlw	0
  3134  03E3  1803               	skipnc
  3135  03E4  3001               	movlw	1
  3136  03E5  07C4               	addwf	___ftadd@f2+1,f
  3137  03E6  3000               	movlw	0
  3138  03E7  1803               	skipnc
  3139  03E8  3001               	movlw	1
  3140  03E9  07C5               	addwf	___ftadd@f2+2,f
  3141  03EA                     l1259:	
  3142  03EA  01CA               	clrf	___ftadd@sign
  3143  03EB  0840               	movf	___ftadd@f1,w
  3144  03EC  07C3               	addwf	___ftadd@f2,f
  3145  03ED  0841               	movf	___ftadd@f1+1,w
  3146  03EE  3DC4               	addwfc	___ftadd@f2+1,f
  3147  03EF  0842               	movf	___ftadd@f1+2,w
  3148  03F0  3DC5               	addwfc	___ftadd@f2+2,f
  3149  03F1  1FC5               	btfss	___ftadd@f2+2,7
  3150  03F2  2C05               	goto	l1269
  3151  03F3  30FF               	movlw	255
  3152  03F4  06C3               	xorwf	___ftadd@f2,f
  3153  03F5  30FF               	movlw	255
  3154  03F6  06C4               	xorwf	___ftadd@f2+1,f
  3155  03F7  30FF               	movlw	255
  3156  03F8  06C5               	xorwf	___ftadd@f2+2,f
  3157  03F9  3001               	movlw	1
  3158  03FA  07C3               	addwf	___ftadd@f2,f
  3159  03FB  3000               	movlw	0
  3160  03FC  1803               	skipnc
  3161  03FD  3001               	movlw	1
  3162  03FE  07C4               	addwf	___ftadd@f2+1,f
  3163  03FF  3000               	movlw	0
  3164  0400  1803               	skipnc
  3165  0401  3001               	movlw	1
  3166  0402  07C5               	addwf	___ftadd@f2+2,f
  3167  0403  01CA               	clrf	___ftadd@sign
  3168  0404  0ACA               	incf	___ftadd@sign,f
  3169  0405                     l1269:	
  3170  0405  0843               	movf	___ftadd@f2,w
  3171  0406  00F2               	movwf	___ftpack@arg
  3172  0407  0844               	movf	___ftadd@f2+1,w
  3173  0408  00F3               	movwf	___ftpack@arg+1
  3174  0409  0845               	movf	___ftadd@f2+2,w
  3175  040A  00F4               	movwf	___ftpack@arg+2
  3176  040B  084C               	movf	___ftadd@exp1,w
  3177  040C  00C6               	movwf	??___ftadd
  3178  040D  0846               	movf	??___ftadd,w
  3179  040E  00F5               	movwf	___ftpack@exp
  3180  040F  084A               	movf	___ftadd@sign,w
  3181  0410  00C7               	movwf	??___ftadd+1
  3182  0411  0847               	movf	??___ftadd+1,w
  3183  0412  00F6               	movwf	___ftpack@sign
  3184  0413  3186  2686         	fcall	___ftpack
  3185  0415  0872               	movf	?___ftpack,w
  3186  0416  0020               	movlb	0	; select bank0
  3187  0417  00C0               	movwf	?___ftadd
  3188  0418  0873               	movf	?___ftpack+1,w
  3189  0419  00C1               	movwf	?___ftadd+1
  3190  041A  0874               	movf	?___ftpack+2,w
  3191  041B  00C2               	movwf	?___ftadd+2
  3192  041C  0008               	return
  3193  041D                     __end_of___ftadd:	
  3194                           
  3195                           	psect	text12
  3196  0F11                     __ptext12:	
  3197 ;; *************** function ___ftneg *****************
  3198 ;; Defined at:
  3199 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/ftneg.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  f1              3    2[COMMON] float 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  3    2[COMMON] float 
  3206 ;; Registers used:
  3207 ;;		wreg
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3213 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3216 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;Total ram usage:        3 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    2
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_sin
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function ___ftneg
  3229  0F11                     ___ftneg:	
  3230                           
  3231                           ;incstack = 0
  3232                           ; Regs used in ___ftneg: [wreg]
  3233  0F11  0874               	movf	___ftneg@f1+2,w
  3234  0F12  0473               	iorwf	___ftneg@f1+1,w
  3235  0F13  0472               	iorwf	___ftneg@f1,w
  3236  0F14  1903               	skipnz
  3237  0F15  0008               	return
  3238  0F16  3080               	movlw	128
  3239  0F17  06F4               	xorwf	___ftneg@f1+2,f
  3240  0F18  0008               	return
  3241  0F19                     __end_of___ftneg:	
  3242                           
  3243                           	psect	text13
  3244  04D1                     __ptext13:	
  3245 ;; *************** function ___ftdiv *****************
  3246 ;; Defined at:
  3247 ;;		line 56 in file "/Applications/microchip/xc8/v1.45/sources/common/ftdiv.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  f2              3   16[BANK0 ] float 
  3250 ;;  f1              3   19[BANK0 ] float 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  f3              3   27[BANK0 ] float 
  3253 ;;  sign            1   31[BANK0 ] unsigned char 
  3254 ;;  exp             1   30[BANK0 ] unsigned char 
  3255 ;;  cntr            1   26[BANK0 ] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  3   16[BANK0 ] float 
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0, pclath, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3265 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3266 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3267 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;Total ram usage:       16 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    3
  3272 ;; This function calls:
  3273 ;;		___ftpack
  3274 ;; This function is called by:
  3275 ;;		_main
  3276 ;;		_sin
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function ___ftdiv
  3282  04D1                     ___ftdiv:	
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3286  04D1  0020               	movlb	0	; select bank0
  3287  04D2  0833               	movf	___ftdiv@f1,w
  3288  04D3  00B6               	movwf	??___ftdiv
  3289  04D4  0834               	movf	___ftdiv@f1+1,w
  3290  04D5  00B7               	movwf	??___ftdiv+1
  3291  04D6  0835               	movf	___ftdiv@f1+2,w
  3292  04D7  00B8               	movwf	??___ftdiv+2
  3293  04D8  1003               	clrc
  3294  04D9  0D37               	rlf	??___ftdiv+1,w
  3295  04DA  0D38               	rlf	??___ftdiv+2,w
  3296  04DB  00B9               	movwf	??___ftdiv+3
  3297  04DC  0839               	movf	??___ftdiv+3,w
  3298  04DD  00BE               	movwf	___ftdiv@exp
  3299  04DE  083E               	movf	___ftdiv@exp,w
  3300  04DF  1D03               	btfss	3,2
  3301  04E0  2CE8               	goto	l1407
  3302  04E1  3000               	movlw	0
  3303  04E2  00B0               	movwf	?___ftdiv
  3304  04E3  3000               	movlw	0
  3305  04E4  00B1               	movwf	?___ftdiv+1
  3306  04E5  3000               	movlw	0
  3307  04E6  00B2               	movwf	?___ftdiv+2
  3308  04E7  0008               	return
  3309  04E8                     l1407:	
  3310  04E8  0830               	movf	___ftdiv@f2,w
  3311  04E9  00B6               	movwf	??___ftdiv
  3312  04EA  0831               	movf	___ftdiv@f2+1,w
  3313  04EB  00B7               	movwf	??___ftdiv+1
  3314  04EC  0832               	movf	___ftdiv@f2+2,w
  3315  04ED  00B8               	movwf	??___ftdiv+2
  3316  04EE  1003               	clrc
  3317  04EF  0D37               	rlf	??___ftdiv+1,w
  3318  04F0  0D38               	rlf	??___ftdiv+2,w
  3319  04F1  00B9               	movwf	??___ftdiv+3
  3320  04F2  0839               	movf	??___ftdiv+3,w
  3321  04F3  00BF               	movwf	___ftdiv@sign
  3322  04F4  083F               	movf	___ftdiv@sign,w
  3323  04F5  1D03               	btfss	3,2
  3324  04F6  2CFE               	goto	l1413
  3325  04F7  3000               	movlw	0
  3326  04F8  00B0               	movwf	?___ftdiv
  3327  04F9  3000               	movlw	0
  3328  04FA  00B1               	movwf	?___ftdiv+1
  3329  04FB  3000               	movlw	0
  3330  04FC  00B2               	movwf	?___ftdiv+2
  3331  04FD  0008               	return
  3332  04FE                     l1413:	
  3333  04FE  3000               	movlw	0
  3334  04FF  00BB               	movwf	___ftdiv@f3
  3335  0500  3000               	movlw	0
  3336  0501  00BC               	movwf	___ftdiv@f3+1
  3337  0502  3000               	movlw	0
  3338  0503  00BD               	movwf	___ftdiv@f3+2
  3339  0504  3089               	movlw	137
  3340  0505  073F               	addwf	___ftdiv@sign,w
  3341  0506  00B6               	movwf	??___ftdiv
  3342  0507  0836               	movf	??___ftdiv,w
  3343  0508  02BE               	subwf	___ftdiv@exp,f
  3344  0509  0833               	movf	___ftdiv@f1,w
  3345  050A  00B6               	movwf	??___ftdiv
  3346  050B  0834               	movf	___ftdiv@f1+1,w
  3347  050C  00B7               	movwf	??___ftdiv+1
  3348  050D  0835               	movf	___ftdiv@f1+2,w
  3349  050E  00B8               	movwf	??___ftdiv+2
  3350  050F  3010               	movlw	16
  3351  0510                     u1765:	
  3352  0510  36B8               	lsrf	??___ftdiv+2,f
  3353  0511  0CB7               	rrf	??___ftdiv+1,f
  3354  0512  0CB6               	rrf	??___ftdiv,f
  3355  0513  0B89               	decfsz	9,f
  3356  0514  2D10               	goto	u1765
  3357  0515  0836               	movf	??___ftdiv,w
  3358  0516  00B9               	movwf	??___ftdiv+3
  3359  0517  0839               	movf	??___ftdiv+3,w
  3360  0518  00BF               	movwf	___ftdiv@sign
  3361  0519  0830               	movf	___ftdiv@f2,w
  3362  051A  00B6               	movwf	??___ftdiv
  3363  051B  0831               	movf	___ftdiv@f2+1,w
  3364  051C  00B7               	movwf	??___ftdiv+1
  3365  051D  0832               	movf	___ftdiv@f2+2,w
  3366  051E  00B8               	movwf	??___ftdiv+2
  3367  051F  3010               	movlw	16
  3368  0520                     u1775:	
  3369  0520  36B8               	lsrf	??___ftdiv+2,f
  3370  0521  0CB7               	rrf	??___ftdiv+1,f
  3371  0522  0CB6               	rrf	??___ftdiv,f
  3372  0523  0B89               	decfsz	9,f
  3373  0524  2D20               	goto	u1775
  3374  0525  0836               	movf	??___ftdiv,w
  3375  0526  00B9               	movwf	??___ftdiv+3
  3376  0527  0839               	movf	??___ftdiv+3,w
  3377  0528  06BF               	xorwf	___ftdiv@sign,f
  3378  0529  3080               	movlw	128
  3379  052A  00B6               	movwf	??___ftdiv
  3380  052B  0836               	movf	??___ftdiv,w
  3381  052C  05BF               	andwf	___ftdiv@sign,f
  3382  052D  17B4               	bsf	___ftdiv@f1+1,7
  3383  052E  30FF               	movlw	255
  3384  052F  05B3               	andwf	___ftdiv@f1,f
  3385  0530  30FF               	movlw	255
  3386  0531  05B4               	andwf	___ftdiv@f1+1,f
  3387  0532  3000               	movlw	0
  3388  0533  05B5               	andwf	___ftdiv@f1+2,f
  3389  0534  17B1               	bsf	___ftdiv@f2+1,7
  3390  0535  30FF               	movlw	255
  3391  0536  05B0               	andwf	___ftdiv@f2,f
  3392  0537  30FF               	movlw	255
  3393  0538  05B1               	andwf	___ftdiv@f2+1,f
  3394  0539  3000               	movlw	0
  3395  053A  05B2               	andwf	___ftdiv@f2+2,f
  3396  053B  3018               	movlw	24
  3397  053C  00B6               	movwf	??___ftdiv
  3398  053D  0836               	movf	??___ftdiv,w
  3399  053E  00BA               	movwf	___ftdiv@cntr
  3400  053F                     l1427:	
  3401  053F  3001               	movlw	1
  3402  0540                     u1785:	
  3403  0540  35BB               	lslf	___ftdiv@f3,f
  3404  0541  0DBC               	rlf	___ftdiv@f3+1,f
  3405  0542  0DBD               	rlf	___ftdiv@f3+2,f
  3406  0543  0B89               	decfsz	9,f
  3407  0544  2D40               	goto	u1785
  3408  0545  0832               	movf	___ftdiv@f2+2,w
  3409  0546  0235               	subwf	___ftdiv@f1+2,w
  3410  0547  1D03               	skipz
  3411  0548  2D4F               	goto	u1795
  3412  0549  0831               	movf	___ftdiv@f2+1,w
  3413  054A  0234               	subwf	___ftdiv@f1+1,w
  3414  054B  1D03               	skipz
  3415  054C  2D4F               	goto	u1795
  3416  054D  0830               	movf	___ftdiv@f2,w
  3417  054E  0233               	subwf	___ftdiv@f1,w
  3418  054F                     u1795:	
  3419  054F  1C03               	skipc
  3420  0550  2D58               	goto	l1435
  3421  0551  0830               	movf	___ftdiv@f2,w
  3422  0552  02B3               	subwf	___ftdiv@f1,f
  3423  0553  0831               	movf	___ftdiv@f2+1,w
  3424  0554  3BB4               	subwfb	___ftdiv@f1+1,f
  3425  0555  0832               	movf	___ftdiv@f2+2,w
  3426  0556  3BB5               	subwfb	___ftdiv@f1+2,f
  3427  0557  143B               	bsf	___ftdiv@f3,0
  3428  0558                     l1435:	
  3429  0558  3001               	movlw	1
  3430  0559                     u1805:	
  3431  0559  35B3               	lslf	___ftdiv@f1,f
  3432  055A  0DB4               	rlf	___ftdiv@f1+1,f
  3433  055B  0DB5               	rlf	___ftdiv@f1+2,f
  3434  055C  0B89               	decfsz	9,f
  3435  055D  2D59               	goto	u1805
  3436  055E  3001               	movlw	1
  3437  055F  02BA               	subwf	___ftdiv@cntr,f
  3438  0560  1D03               	btfss	3,2
  3439  0561  2D3F               	goto	l1427
  3440  0562  083B               	movf	___ftdiv@f3,w
  3441  0563  00F2               	movwf	___ftpack@arg
  3442  0564  083C               	movf	___ftdiv@f3+1,w
  3443  0565  00F3               	movwf	___ftpack@arg+1
  3444  0566  083D               	movf	___ftdiv@f3+2,w
  3445  0567  00F4               	movwf	___ftpack@arg+2
  3446  0568  083E               	movf	___ftdiv@exp,w
  3447  0569  00B6               	movwf	??___ftdiv
  3448  056A  0836               	movf	??___ftdiv,w
  3449  056B  00F5               	movwf	___ftpack@exp
  3450  056C  083F               	movf	___ftdiv@sign,w
  3451  056D  00B7               	movwf	??___ftdiv+1
  3452  056E  0837               	movf	??___ftdiv+1,w
  3453  056F  00F6               	movwf	___ftpack@sign
  3454  0570  3186  2686         	fcall	___ftpack
  3455  0572  0872               	movf	?___ftpack,w
  3456  0573  0020               	movlb	0	; select bank0
  3457  0574  00B0               	movwf	?___ftdiv
  3458  0575  0873               	movf	?___ftpack+1,w
  3459  0576  00B1               	movwf	?___ftdiv+1
  3460  0577  0874               	movf	?___ftpack+2,w
  3461  0578  00B2               	movwf	?___ftdiv+2
  3462  0579  0008               	return
  3463  057A                     __end_of___ftdiv:	
  3464                           
  3465                           	psect	text14
  3466  0F25                     __ptext14:	
  3467 ;; *************** function _setup_tmr *****************
  3468 ;; Defined at:
  3469 ;;		line 185 in file "main.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    2
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _setup_tmr
  3499  0F25                     _setup_tmr:	
  3500                           
  3501                           ;main.c: 187: INTCON = 0x00;
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _setup_tmr: [wreg+status,2]
  3505  0F25  018B               	clrf	11	;volatile
  3506                           
  3507                           ;main.c: 190: INTCON = 0b10000000;
  3508  0F26  3080               	movlw	128
  3509  0F27  008B               	movwf	11	;volatile
  3510                           
  3511                           ;main.c: 191: OPTION_REG = 0b00000111;
  3512  0F28  3007               	movlw	7
  3513  0F29  0021               	movlb	1	; select bank1
  3514  0F2A  0095               	movwf	21	;volatile
  3515                           
  3516                           ;main.c: 192: TMR0 = 0;
  3517  0F2B  0020               	movlb	0	; select bank0
  3518  0F2C  0195               	clrf	21	;volatile
  3519                           
  3520                           ;main.c: 193: INTPPS = 0b00010000;
  3521  0F2D  3010               	movlw	16
  3522  0F2E  003C               	movlb	28	; select bank28
  3523  0F2F  0090               	movwf	16	;volatile
  3524                           
  3525                           ;main.c: 196: TRISA = 0x00;
  3526  0F30  0021               	movlb	1	; select bank1
  3527  0F31  018C               	clrf	12	;volatile
  3528                           
  3529                           ;main.c: 197: PORTA = 0b00000000;
  3530  0F32  0020               	movlb	0	; select bank0
  3531  0F33  018C               	clrf	12	;volatile
  3532                           
  3533                           ;main.c: 200: INTCON = 0b10100000;
  3534  0F34  30A0               	movlw	160
  3535  0F35  008B               	movwf	11	;volatile
  3536  0F36  0008               	return
  3537  0F37                     __end_of_setup_tmr:	
  3538                           
  3539                           	psect	text15
  3540  0F37                     __ptext15:	
  3541 ;; *************** function _setup_sci *****************
  3542 ;; Defined at:
  3543 ;;		line 167 in file "main.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    2
  3564 ;; This function calls:
  3565 ;;		Nothing
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _setup_sci
  3573  0F37                     _setup_sci:	
  3574                           
  3575                           ;main.c: 168: TRISCbits.TRISC4 = 0;
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in _setup_sci: [wreg+status,2]
  3579  0F37  0021               	movlb	1	; select bank1
  3580  0F38  120E               	bcf	14,4	;volatile
  3581                           
  3582                           ;main.c: 170: RC1STAbits.SPEN = 1;
  3583  0F39  0023               	movlb	3	; select bank3
  3584  0F3A  179D               	bsf	29,7	;volatile
  3585                           
  3586                           ;main.c: 171: RC4PPS = 0b00010100;
  3587  0F3B  3014               	movlw	20
  3588  0F3C  003D               	movlb	29	; select bank29
  3589  0F3D  00A4               	movwf	36	;volatile
  3590                           
  3591                           ;main.c: 172: TX1STA = 0x00;
  3592  0F3E  0023               	movlb	3	; select bank3
  3593  0F3F  019E               	clrf	30	;volatile
  3594                           
  3595                           ;main.c: 173: TX1STAbits.TXEN = 1;
  3596  0F40  169E               	bsf	30,5	;volatile
  3597                           
  3598                           ;main.c: 174: TX1STAbits.SYNC = 0;
  3599  0F41  121E               	bcf	30,4	;volatile
  3600                           
  3601                           ;main.c: 175: TX1STAbits.BRGH = 1;
  3602  0F42  151E               	bsf	30,2	;volatile
  3603                           
  3604                           ;main.c: 176: TX1STAbits.CSRC = 1;
  3605  0F43  179E               	bsf	30,7	;volatile
  3606                           
  3607                           ;main.c: 177: SP1BRGL = 207;
  3608  0F44  30CF               	movlw	207
  3609  0F45  009B               	movwf	27	;volatile
  3610                           
  3611                           ;main.c: 178: SP1BRGH = 0;
  3612  0F46  019C               	clrf	28	;volatile
  3613                           
  3614                           ;main.c: 179: BAUD1CON = 0x00;
  3615  0F47  019F               	clrf	31	;volatile
  3616                           
  3617                           ;main.c: 180: BAUD1CONbits.SCKP = 0;
  3618  0F48  121F               	bcf	31,4	;volatile
  3619                           
  3620                           ;main.c: 181: BAUD1CONbits.BRG16= 1;
  3621  0F49  159F               	bsf	31,3	;volatile
  3622  0F4A  0008               	return
  3623  0F4B                     __end_of_setup_sci:	
  3624                           
  3625                           	psect	text16
  3626  0F09                     __ptext16:	
  3627 ;; *************** function _setup_irq *****************
  3628 ;; Defined at:
  3629 ;;		line 203 in file "main.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    2
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _setup_irq
  3659  0F09                     _setup_irq:	
  3660                           
  3661                           ;main.c: 205: TRISAbits.TRISA4 = 1;
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in _setup_irq: [wreg]
  3665  0F09  0021               	movlb	1	; select bank1
  3666  0F0A  160C               	bsf	12,4	;volatile
  3667                           
  3668                           ;main.c: 206: TRISAbits.TRISA5 = 0;
  3669  0F0B  128C               	bcf	12,5	;volatile
  3670                           
  3671                           ;main.c: 209: INTPPS = 0b00000100;
  3672  0F0C  3004               	movlw	4
  3673  0F0D  003C               	movlb	28	; select bank28
  3674  0F0E  0090               	movwf	16	;volatile
  3675                           
  3676                           ;main.c: 212: INTCONbits.INTE = 1;
  3677  0F0F  160B               	bsf	11,4	;volatile
  3678  0F10  0008               	return
  3679  0F11                     __end_of_setup_irq:	
  3680                           
  3681                           	psect	text17
  3682  07F9                     __ptext17:	
  3683 ;; *************** function _setup_dac *****************
  3684 ;; Defined at:
  3685 ;;		line 156 in file "main.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    2
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _setup_dac
  3715  07F9                     _setup_dac:	
  3716                           
  3717                           ;main.c: 158: ANSELAbits.ANSA2 = 1;
  3718                           
  3719                           ;incstack = 0
  3720                           ; Regs used in _setup_dac: [wreg+status,2]
  3721  07F9  0023               	movlb	3	; select bank3
  3722  07FA  150C               	bsf	12,2	;volatile
  3723                           
  3724                           ;main.c: 163: DAC1CON0 = 0b10010000;
  3725  07FB  3090               	movlw	144
  3726  07FC  0022               	movlb	2	; select bank2
  3727  07FD  0098               	movwf	24	;volatile
  3728                           
  3729                           ;main.c: 164: DAC1CON1 = 0x00;
  3730  07FE  0199               	clrf	25	;volatile
  3731  07FF  0008               	return
  3732  0800                     __end_of_setup_dac:	
  3733                           
  3734                           	psect	text18
  3735  0F7B                     __ptext18:	
  3736 ;; *************** function _adconv *****************
  3737 ;; Defined at:
  3738 ;;		line 43 in file "main.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  temp            2    0[BANK0 ] unsigned int 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  2    2[COMMON] unsigned int 
  3745 ;; Registers used:
  3746 ;;		wreg
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3753 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3754 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3755 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;Total ram usage:       10 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    2
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function _adconv
  3768  0F7B                     _adconv:	
  3769                           
  3770                           ;main.c: 45: unsigned int temp;
  3771                           ;main.c: 47: GO_nDONE = 1 ;
  3772                           
  3773                           ;incstack = 0
  3774                           ; Regs used in _adconv: [wreg]
  3775  0F7B  0021               	movlb	1	; select bank1
  3776  0F7C  149D               	bsf	29,1	;volatile
  3777  0F7D                     l99:	
  3778                           ;main.c: 48: while(GO_nDONE) ;
  3779                           
  3780  0F7D  189D               	btfsc	29,1	;volatile
  3781  0F7E  2F7D               	goto	l99
  3782                           
  3783                           ;main.c: 49: temp = ADRESH ;
  3784  0F7F  081C               	movf	28,w	;volatile
  3785  0F80  00F4               	movwf	??_adconv
  3786  0F81  01F5               	clrf	??_adconv+1
  3787  0F82  0874               	movf	??_adconv,w
  3788  0F83  0020               	movlb	0	; select bank0
  3789  0F84  00A0               	movwf	adconv@temp
  3790  0F85  0875               	movf	??_adconv+1,w
  3791  0F86  00A1               	movwf	adconv@temp+1
  3792                           
  3793                           ;main.c: 50: temp = ( temp << 8 ) | ADRESL ;
  3794  0F87  0021               	movlb	1	; select bank1
  3795  0F88  081B               	movf	27,w	;volatile
  3796  0F89  00F4               	movwf	??_adconv
  3797  0F8A  01F5               	clrf	??_adconv+1
  3798  0F8B  0020               	movlb	0	; select bank0
  3799  0F8C  0820               	movf	adconv@temp,w
  3800  0F8D  00F7               	movwf	??_adconv+3
  3801  0F8E  01F6               	clrf	??_adconv+2
  3802  0F8F  0874               	movf	??_adconv,w
  3803  0F90  0476               	iorwf	??_adconv+2,w
  3804  0F91  00F8               	movwf	??_adconv+4
  3805  0F92  0875               	movf	??_adconv+1,w
  3806  0F93  0477               	iorwf	??_adconv+3,w
  3807  0F94  00F9               	movwf	??_adconv+5
  3808  0F95  0878               	movf	??_adconv+4,w
  3809  0F96  00A0               	movwf	adconv@temp
  3810  0F97  0879               	movf	??_adconv+5,w
  3811  0F98  00A1               	movwf	adconv@temp+1
  3812                           
  3813                           ;main.c: 52: return temp ;
  3814  0F99  0821               	movf	adconv@temp+1,w
  3815  0F9A  00F3               	movwf	?_adconv+1
  3816  0F9B  0820               	movf	adconv@temp,w
  3817  0F9C  00F2               	movwf	?_adconv
  3818  0F9D  0008               	return
  3819  0F9E                     __end_of_adconv:	
  3820                           
  3821                           	psect	text19
  3822  0F4B                     __ptext19:	
  3823 ;; *************** function ___lwtoft *****************
  3824 ;; Defined at:
  3825 ;;		line 28 in file "/Applications/microchip/xc8/v1.45/sources/common/lwtoft.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  c               2    0[BANK0 ] unsigned int 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  3    0[BANK0 ] float 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, pclath, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3839 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3842 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;Total ram usage:        4 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    3
  3846 ;; This function calls:
  3847 ;;		___ftpack
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           
  3854                           ;psect for function ___lwtoft
  3855  0F4B                     ___lwtoft:	
  3856                           
  3857                           ;incstack = 0
  3858                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3859  0F4B  0020               	movlb	0	; select bank0
  3860  0F4C  0820               	movf	___lwtoft@c,w
  3861  0F4D  00F2               	movwf	___ftpack@arg
  3862  0F4E  0821               	movf	___lwtoft@c+1,w
  3863  0F4F  00F3               	movwf	___ftpack@arg+1
  3864  0F50  01F4               	clrf	___ftpack@arg+2
  3865  0F51  308E               	movlw	142
  3866  0F52  00A3               	movwf	??___lwtoft
  3867  0F53  0823               	movf	??___lwtoft,w
  3868  0F54  00F5               	movwf	___ftpack@exp
  3869  0F55  01F6               	clrf	___ftpack@sign
  3870  0F56  3186  2686         	fcall	___ftpack
  3871  0F58  0872               	movf	?___ftpack,w
  3872  0F59  0020               	movlb	0	; select bank0
  3873  0F5A  00A0               	movwf	?___lwtoft
  3874  0F5B  0873               	movf	?___ftpack+1,w
  3875  0F5C  00A1               	movwf	?___lwtoft+1
  3876  0F5D  0874               	movf	?___ftpack+2,w
  3877  0F5E  00A2               	movwf	?___lwtoft+2
  3878  0F5F  0008               	return
  3879  0F60                     __end_of___lwtoft:	
  3880                           
  3881                           	psect	text20
  3882  0686                     __ptext20:	
  3883 ;; *************** function ___ftpack *****************
  3884 ;; Defined at:
  3885 ;;		line 62 in file "/Applications/microchip/xc8/v1.45/sources/common/float.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  arg             3    2[COMMON] unsigned um
  3888 ;;  exp             1    5[COMMON] unsigned char 
  3889 ;;  sign            1    6[COMMON] unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  3    2[COMMON] float 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3901 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;Total ram usage:        8 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    2
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		___altoft
  3912 ;;		___ftadd
  3913 ;;		___ftdiv
  3914 ;;		___ftmul
  3915 ;;		___lwtoft
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           
  3920                           ;psect for function ___ftpack
  3921  0686                     ___ftpack:	
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3925  0686  0875               	movf	___ftpack@exp,w
  3926  0687  1903               	btfsc	3,2
  3927  0688  2E8E               	goto	l1145
  3928  0689  0874               	movf	___ftpack@arg+2,w
  3929  068A  0473               	iorwf	___ftpack@arg+1,w
  3930  068B  0472               	iorwf	___ftpack@arg,w
  3931  068C  1D03               	skipz
  3932  068D  2E9F               	goto	l1151
  3933  068E                     l1145:	
  3934  068E  3000               	movlw	0
  3935  068F  00F2               	movwf	?___ftpack
  3936  0690  3000               	movlw	0
  3937  0691  00F3               	movwf	?___ftpack+1
  3938  0692  3000               	movlw	0
  3939  0693  00F4               	movwf	?___ftpack+2
  3940  0694  0008               	return
  3941  0695                     l1149:	
  3942  0695  3001               	movlw	1
  3943  0696  00F7               	movwf	??___ftpack
  3944  0697  0877               	movf	??___ftpack,w
  3945  0698  07F5               	addwf	___ftpack@exp,f
  3946  0699  3001               	movlw	1
  3947  069A                     u1085:	
  3948  069A  36F4               	lsrf	___ftpack@arg+2,f
  3949  069B  0CF3               	rrf	___ftpack@arg+1,f
  3950  069C  0CF2               	rrf	___ftpack@arg,f
  3951  069D  0B89               	decfsz	9,f
  3952  069E  2E9A               	goto	u1085
  3953  069F                     l1151:	
  3954  069F  30FE               	movlw	254
  3955  06A0  0574               	andwf	___ftpack@arg+2,w
  3956  06A1  1903               	btfsc	3,2
  3957  06A2  2EB8               	goto	l312
  3958  06A3  2E95               	goto	l1149
  3959  06A4                     l1153:	
  3960  06A4  3001               	movlw	1
  3961  06A5  00F7               	movwf	??___ftpack
  3962  06A6  0877               	movf	??___ftpack,w
  3963  06A7  07F5               	addwf	___ftpack@exp,f
  3964  06A8  3001               	movlw	1
  3965  06A9  07F2               	addwf	___ftpack@arg,f
  3966  06AA  3000               	movlw	0
  3967  06AB  1803               	skipnc
  3968  06AC  3001               	movlw	1
  3969  06AD  07F3               	addwf	___ftpack@arg+1,f
  3970  06AE  3000               	movlw	0
  3971  06AF  1803               	skipnc
  3972  06B0  3001               	movlw	1
  3973  06B1  07F4               	addwf	___ftpack@arg+2,f
  3974  06B2  3001               	movlw	1
  3975  06B3                     u1105:	
  3976  06B3  36F4               	lsrf	___ftpack@arg+2,f
  3977  06B4  0CF3               	rrf	___ftpack@arg+1,f
  3978  06B5  0CF2               	rrf	___ftpack@arg,f
  3979  06B6  0B89               	decfsz	9,f
  3980  06B7  2EB3               	goto	u1105
  3981  06B8                     l312:	
  3982  06B8  30FF               	movlw	255
  3983  06B9  0574               	andwf	___ftpack@arg+2,w
  3984  06BA  1903               	btfsc	3,2
  3985  06BB  2EC5               	goto	l1161
  3986  06BC  2EA4               	goto	l1153
  3987  06BD                     l1159:	
  3988  06BD  3001               	movlw	1
  3989  06BE  02F5               	subwf	___ftpack@exp,f
  3990  06BF  3001               	movlw	1
  3991  06C0                     u1125:	
  3992  06C0  35F2               	lslf	___ftpack@arg,f
  3993  06C1  0DF3               	rlf	___ftpack@arg+1,f
  3994  06C2  0DF4               	rlf	___ftpack@arg+2,f
  3995  06C3  0B89               	decfsz	9,f
  3996  06C4  2EC0               	goto	u1125
  3997  06C5                     l1161:	
  3998  06C5  1BF3               	btfsc	___ftpack@arg+1,7
  3999  06C6  2ECB               	goto	l319
  4000  06C7  3002               	movlw	2
  4001  06C8  0275               	subwf	___ftpack@exp,w
  4002  06C9  1803               	skipnc
  4003  06CA  2EBD               	goto	l1159
  4004  06CB                     l319:	
  4005  06CB  1875               	btfsc	___ftpack@exp,0
  4006  06CC  2ED3               	goto	l320
  4007  06CD  30FF               	movlw	255
  4008  06CE  05F2               	andwf	___ftpack@arg,f
  4009  06CF  307F               	movlw	127
  4010  06D0  05F3               	andwf	___ftpack@arg+1,f
  4011  06D1  30FF               	movlw	255
  4012  06D2  05F4               	andwf	___ftpack@arg+2,f
  4013  06D3                     l320:	
  4014  06D3  1003               	clrc
  4015  06D4  0CF5               	rrf	___ftpack@exp,f
  4016  06D5  0875               	movf	___ftpack@exp,w
  4017  06D6  00F7               	movwf	??___ftpack
  4018  06D7  01F8               	clrf	??___ftpack+1
  4019  06D8  01F9               	clrf	??___ftpack+2
  4020  06D9  3010               	movlw	16
  4021  06DA                     u1165:	
  4022  06DA  35F7               	lslf	??___ftpack,f
  4023  06DB  0DF8               	rlf	??___ftpack+1,f
  4024  06DC  0DF9               	rlf	??___ftpack+2,f
  4025  06DD  0B89               	decfsz	9,f
  4026  06DE  2EDA               	goto	u1165
  4027  06DF  0877               	movf	??___ftpack,w
  4028  06E0  04F2               	iorwf	___ftpack@arg,f
  4029  06E1  0878               	movf	??___ftpack+1,w
  4030  06E2  04F3               	iorwf	___ftpack@arg+1,f
  4031  06E3  0879               	movf	??___ftpack+2,w
  4032  06E4  04F4               	iorwf	___ftpack@arg+2,f
  4033  06E5  0876               	movf	___ftpack@sign,w
  4034  06E6  1903               	btfsc	3,2
  4035  06E7  0008               	return
  4036  06E8  17F4               	bsf	___ftpack@arg+2,7
  4037  06E9  0008               	return
  4038  06EA                     __end_of___ftpack:	
  4039                           
  4040                           	psect	text21
  4041  0FCC                     __ptext21:	
  4042 ;; *************** function ___lwdiv *****************
  4043 ;; Defined at:
  4044 ;;		line 6 in file "/Applications/microchip/xc8/v1.45/sources/common/lwdiv.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  divisor         2    2[COMMON] unsigned int 
  4047 ;;  dividend        2    4[COMMON] unsigned int 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  quotient        2    7[COMMON] unsigned int 
  4050 ;;  counter         1    9[COMMON] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  2    2[COMMON] unsigned int 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4061 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4062 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4063 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;Total ram usage:        8 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    2
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_main
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           
  4075                           ;psect for function ___lwdiv
  4076  0FCC                     ___lwdiv:	
  4077                           
  4078                           ;incstack = 0
  4079                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4080  0FCC  01F7               	clrf	___lwdiv@quotient
  4081  0FCD  01F8               	clrf	___lwdiv@quotient+1
  4082  0FCE  0872               	movf	___lwdiv@divisor,w
  4083  0FCF  0473               	iorwf	___lwdiv@divisor+1,w
  4084  0FD0  1903               	btfsc	3,2
  4085  0FD1  2FFB               	goto	l1605
  4086  0FD2  01F9               	clrf	___lwdiv@counter
  4087  0FD3  0AF9               	incf	___lwdiv@counter,f
  4088  0FD4                     l1593:	
  4089  0FD4  1BF3               	btfsc	___lwdiv@divisor+1,7
  4090  0FD5  2FE0               	goto	l1595
  4091  0FD6  3001               	movlw	1
  4092  0FD7                     u1975:	
  4093  0FD7  35F2               	lslf	___lwdiv@divisor,f
  4094  0FD8  0DF3               	rlf	___lwdiv@divisor+1,f
  4095  0FD9  0B89               	decfsz	9,f
  4096  0FDA  2FD7               	goto	u1975
  4097  0FDB  3001               	movlw	1
  4098  0FDC  00F6               	movwf	??___lwdiv
  4099  0FDD  0876               	movf	??___lwdiv,w
  4100  0FDE  07F9               	addwf	___lwdiv@counter,f
  4101  0FDF  2FD4               	goto	l1593
  4102  0FE0                     l1595:	
  4103  0FE0  3001               	movlw	1
  4104  0FE1                     u1995:	
  4105  0FE1  35F7               	lslf	___lwdiv@quotient,f
  4106  0FE2  0DF8               	rlf	___lwdiv@quotient+1,f
  4107  0FE3  0B89               	decfsz	9,f
  4108  0FE4  2FE1               	goto	u1995
  4109  0FE5  0873               	movf	___lwdiv@divisor+1,w
  4110  0FE6  0275               	subwf	___lwdiv@dividend+1,w
  4111  0FE7  1D03               	skipz
  4112  0FE8  2FEB               	goto	u2005
  4113  0FE9  0872               	movf	___lwdiv@divisor,w
  4114  0FEA  0274               	subwf	___lwdiv@dividend,w
  4115  0FEB                     u2005:	
  4116  0FEB  1C03               	skipc
  4117  0FEC  2FF2               	goto	l1601
  4118  0FED  0872               	movf	___lwdiv@divisor,w
  4119  0FEE  02F4               	subwf	___lwdiv@dividend,f
  4120  0FEF  0873               	movf	___lwdiv@divisor+1,w
  4121  0FF0  3BF5               	subwfb	___lwdiv@dividend+1,f
  4122  0FF1  1477               	bsf	___lwdiv@quotient,0
  4123  0FF2                     l1601:	
  4124  0FF2  3001               	movlw	1
  4125  0FF3                     u2015:	
  4126  0FF3  36F3               	lsrf	___lwdiv@divisor+1,f
  4127  0FF4  0CF2               	rrf	___lwdiv@divisor,f
  4128  0FF5  0B89               	decfsz	9,f
  4129  0FF6  2FF3               	goto	u2015
  4130  0FF7  3001               	movlw	1
  4131  0FF8  02F9               	subwf	___lwdiv@counter,f
  4132  0FF9  1D03               	btfss	3,2
  4133  0FFA  2FE0               	goto	l1595
  4134  0FFB                     l1605:	
  4135  0FFB  0878               	movf	___lwdiv@quotient+1,w
  4136  0FFC  00F3               	movwf	?___lwdiv+1
  4137  0FFD  0877               	movf	___lwdiv@quotient,w
  4138  0FFE  00F2               	movwf	?___lwdiv
  4139  0FFF  0008               	return
  4140  1000                     __end_of___lwdiv:	
  4141                           
  4142                           	psect	intentry
  4143  0004                     __pintentry:	
  4144 ;; *************** function _isr_func *****************
  4145 ;; Defined at:
  4146 ;;		line 215 in file "main.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0, pclath, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;Total ram usage:        2 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    1
  4167 ;; This function calls:
  4168 ;;		_flip_led
  4169 ;; This function is called by:
  4170 ;;		Interrupt level 1
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174  0004                     _isr_func:	
  4175                           
  4176                           ;incstack = 0
  4177  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4178                           
  4179                           ; Regs used in _isr_func: [wreg+status,2+status,0+pclath+cstack]
  4180  0005  3180               	pagesel	$
  4181  0006  0020               	movlb	0	; select bank0
  4182  0007  087F               	movf	127,w
  4183  0008  00F1               	movwf	??_isr_func+1
  4184                           
  4185                           ;main.c: 217: static int tm = 0;
  4186                           ;main.c: 219: INTCONbits.GIE = 0;
  4187  0009  138B               	bcf	11,7	;volatile
  4188                           
  4189                           ;main.c: 221: if(TMR0IF){
  4190  000A  1D0B               	btfss	11,2	;volatile
  4191  000B  2822               	goto	i1l1123
  4192                           
  4193                           ;main.c: 223: if(tm > 5){
  4194  000C  087B               	movf	isr_func@tm+1,w
  4195  000D  3A80               	xorlw	128
  4196  000E  00F0               	movwf	??_isr_func
  4197  000F  3080               	movlw	128
  4198  0010  0270               	subwf	??_isr_func,w
  4199  0011  1D03               	skipz
  4200  0012  2815               	goto	u103_25
  4201  0013  3006               	movlw	6
  4202  0014  027A               	subwf	isr_func@tm,w
  4203  0015                     u103_25:	
  4204  0015  1C03               	skipc
  4205  0016  281D               	goto	i1l1119
  4206                           
  4207                           ;main.c: 224: flip_led();
  4208  0017  318F  2719  3180   	fcall	_flip_led
  4209                           
  4210                           ;main.c: 225: tm = 0;
  4211  001A  01FA               	clrf	isr_func@tm
  4212  001B  01FB               	clrf	isr_func@tm+1
  4213                           
  4214                           ;main.c: 226: } else {
  4215  001C  2821               	goto	i1l1121
  4216  001D                     i1l1119:	
  4217                           
  4218                           ;main.c: 227: tm++;
  4219  001D  3001               	movlw	1
  4220  001E  07FA               	addwf	isr_func@tm,f
  4221  001F  3000               	movlw	0
  4222  0020  3DFB               	addwfc	isr_func@tm+1,f
  4223  0021                     i1l1121:	
  4224                           
  4225                           ;main.c: 228: }
  4226                           ;main.c: 229: TMR0IF &= 0;
  4227  0021  110B               	bcf	11,2	;volatile
  4228  0022                     i1l1123:	
  4229                           
  4230                           ;main.c: 230: }
  4231                           ;main.c: 232: if(INTCONbits.INTF){
  4232  0022  1C8B               	btfss	11,1	;volatile
  4233  0023  282C               	goto	i1l1133
  4234  0024                     i1l144:	
  4235                           ;main.c: 233: while(TX1STAbits.TRMT != 1);
  4236                           
  4237  0024  0023               	movlb	3	; select bank3
  4238  0025  1C9E               	btfss	30,1	;volatile
  4239  0026  2824               	goto	i1l144
  4240                           
  4241                           ;main.c: 234: TX1REG = 'A';
  4242  0027  3041               	movlw	65
  4243  0028  009A               	movwf	26	;volatile
  4244                           
  4245                           ;main.c: 235: INTCONbits.INTF &= 0;
  4246  0029  108B               	bcf	11,1	;volatile
  4247                           
  4248                           ;main.c: 239: PORTAbits.RA5 = 1;
  4249  002A  0020               	movlb	0	; select bank0
  4250  002B  168C               	bsf	12,5	;volatile
  4251  002C                     i1l1133:	
  4252                           
  4253                           ;main.c: 240: }
  4254                           ;main.c: 242: INTCONbits.GIE = 1;
  4255  002C  178B               	bsf	11,7	;volatile
  4256                           
  4257                           ;main.c: 243: return;
  4258  002D  0871               	movf	??_isr_func+1,w
  4259  002E  0020               	movlb	0	; select bank0
  4260  002F  00FF               	movwf	127
  4261  0030  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4262  0031  0009               	retfie
  4263  0032                     __end_of_isr_func:	
  4264                           
  4265                           	psect	text23
  4266  0F19                     __ptext23:	
  4267 ;; *************** function _flip_led *****************
  4268 ;; Defined at:
  4269 ;;		line 143 in file "main.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_isr_func
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _flip_led
  4298  0F19                     _flip_led:	
  4299                           
  4300                           ;main.c: 144: PORTAbits.RA5 = !PORTAbits.RA5;
  4301                           
  4302                           ;incstack = 0
  4303                           ; Regs used in _flip_led: [status,0]
  4304  0F19  1003               	clrc
  4305  0F1A  0020               	movlb	0	; select bank0
  4306  0F1B  1E8C               	btfss	12,5	;volatile
  4307  0F1C  1403               	setc
  4308  0F1D  1C03               	btfss	3,0
  4309  0F1E  2F22               	goto	u91_20
  4310  0F1F  0020               	movlb	0	; select bank0
  4311  0F20  168C               	bsf	12,5	;volatile
  4312  0F21  0008               	return
  4313  0F22                     u91_20:	
  4314  0F22  0020               	movlb	0	; select bank0
  4315  0F23  128C               	bcf	12,5	;volatile
  4316  0F24  0008               	return
  4317  0F25                     __end_of_flip_led:	
  4318  007E                     btemp	set	126	;btemp
  4319  007E                     int$flags	set	126
  4320  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    27
    Data        0
    BSS         4
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     28      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _main->_adconv
    ___altoft->___ftpack
    ___ftmul->___ftpack
    ___ftadd->___ftpack
    ___ftadd->___lwdiv
    ___ftdiv->___ftpack
    ___ftdiv->___ftpack
    ___lwtoft->___ftpack
    ___lwtoft->___lwdiv

Critical Paths under _isr_func in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sin
    _sin->_floor
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftsub->_floor
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _isr_func in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sin
    _sin->___ftsub

Critical Paths under _isr_func in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_func in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_func in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_func in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_func in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_func in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_func in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr_func in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr_func in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr_func in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr_func in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr_func in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12     8      4   47113
                                             16 BANK1     12     8      4
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                             _adconv
                          _setup_dac
                          _setup_irq
                          _setup_sci
                          _setup_tmr
                                _sin
 ---------------------------------------------------------------------------------
 (1) _sin                                                 14    11      3   32932
                                             76 BANK0      4     1      3
                                              6 BANK1     10    10      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (2) _floor                                                9     6      3    8617
                                             67 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     336
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     444
                                             45 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1236
                                              2 COMMON     6     0      6
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___altoft                                             8     4      4    2311
                                             59 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    8086
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3331
                                              0 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4168
                                              0 BANK1      6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3845
                                             32 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2645
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _setup_tmr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_sci                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_irq                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_dac                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adconv                                              10     8      2      68
                                              2 COMMON     8     6      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    2217
                                              0 BANK0      4     1      3
                           ___ftpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2109
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     290
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr_func                                             2     2      0       0
                                              0 COMMON     2     2      0
                           _flip_led
 ---------------------------------------------------------------------------------
 (6) _flip_led                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftadd
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul (ARG)
       ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwdiv (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___lwdiv (ARG)
     ___wmul (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
   ___ftge
   ___ftmul
     ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
       ___wmul (ARG)
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
   ___lwdiv
   ___lwtoft
     ___ftpack
     ___lwdiv (ARG)
   _adconv
   _setup_dac
   _setup_irq
   _setup_sci
   _setup_tmr
   _sin
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftge
     ___ftmul
       ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
         ___wmul (ARG)
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftadd (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lwdiv (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
           ___wmul (ARG)
         ___ftge
         ___fttol
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
         _frexp
     _eval_poly
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
         ___wmul (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___wmul (ARG)
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
         ___wmul (ARG)
       ___ftge
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
       _frexp

 _isr_func (ROOT)
   _flip_led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      24       7       45.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      80      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      80      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Feb 11 17:57:56 2018

           ___altoft@exp 0061              __CFG_CP$OFF 0000            ___altoft@sign 0062  
                     l99 0F7D      ___wmul@multiplicand 0074             ___ftadd@exp1 004C  
           ___ftadd@exp2 004B              __CFG_LVP$ON 0000             ___ftadd@sign 004A  
                    l113 0324                      l151 0F68                      l320 06D3  
                    l312 06B8                      l403 05E7                      l319 06CB  
                    l343 03C6                      l518 0134                      _PR2 001B  
                    _sin 003D             __CFG_BORV$HI 0000                      wreg 0009  
           _BAUD1CONbits 019F             ___ftdiv@cntr 003A             ___ftdiv@sign 003F  
                   l1213 0356                     l1151 069F                     l1231 037F  
                   l1161 06C5                     l1153 06A4                     l1145 068E  
                   l1241 03A1                     l1209 034F                     l1321 048D  
                   l1305 044A                     l1251 03C2                     l1243 03A5  
                   l1219 0365                     l1149 0695                     l1413 04FE  
                   l1237 0392                     l1333 04A9                     l1317 0485  
                   l1159 06BD                     l1407 04E8                     l1255 03D8  
                   l1239 039C                     l1175 0F62                     l1601 0FF2  
                   l1249 03B8                     l1329 04A1                     l1435 0558  
                   l1427 053F                     l1259 03EA                     l1605 0FFB  
                   l1269 0405                     l1197 079C                     l1381 05F8  
                   l1349 0593                     l1455 0FA6                     l1199 07AC  
                   l1375 05DE                     l1367 05C3                     l1391 07D0  
                   l1377 05EA                     l1369 05D1                     l1299 0434  
                   l1707 067E                     l1493 0743                     l1725 0065  
                   l1671 0778                     l1593 0FD4                     l1737 0101  
                   l1595 0FE0                     l1667 0761                     l1693 062B  
                   l1783 0218                     l1697 0633                     l1797 02DB  
                   ?_sin 006C                     u1105 06B3                     u2005 0FEB  
                   u1125 06C0                     u1205 0F6E                     u2015 0FF3  
                   u1235 07A1                     u1165 06DA                     u1085 069A  
                   u1405 03A6                     u2150 00FB                     u2160 00FC  
                   u1345 0380                     u1435 03B9                     u1195 0F69  
                   u1605 04AA                     u1375 0393                     u1615 04B0  
                   u1535 0456                     u1545 0466                     u1705 05DF  
                   u1805 0559                     u1565 048E                     u1645 059A  
                   u1575 0494                     u1675 05C4                     u1765 0510  
                   u1775 0520                     u1785 0540                     u1795 054F  
                   u1975 0FD7                     u1995 0FE1                     _TMR0 0015  
                   _TMR2 001A                     _WPUA 020C             __CFG_WRT$OFF 0000  
                   _main 01DC             ___ftpack@arg 0072             ___ftpack@exp 0075  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   sin@f 006C                     sin@y 00A6                     start 0032  
          __CFG_IESO$OFF 0000             ___ftmul@cntr 002E             ___ftmul@sign 002F  
           ___fttol@exp1 005A             ___fttol@lval 0056                    ??_sin 006F  
                  ?_main 00B0          __end_of___ftadd 041D            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 057A          __end_of___ftneg 0F19          __end_of___ftmul 04D1  
        __end_of___ftsub 0FCC          __end_of___fttol 0601                    _T2CON 001C  
        __end_of___lwdiv 1000                    i1l144 0024                    _PORTA 000C  
                  _PORTC 000E                    _TRISA 008C                    _TRISC 008E  
                  u91_20 0F22       __end_ofsin@coeff_a 100F       __end_ofsin@coeff_b 101B  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000                    _floor 0601  
                  _frexp 07C4                    _errno 00C2            ___ftpack@sign 0076  
         __CFG_BOREN$OFF 0000                    sin@x2 00AC                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 0034  
           __end_of_main 0327           __CFG_LPBOR$OFF 0000                   ??_main 007A  
          ___fttol@sign1 0055           __CFG_PLLEN$OFF 0000                   _ADCON0 009D  
                 _ADCON1 009E                   ?_floor 0063                   ?_frexp 0072  
       __end_of___altoft 07C4                   _ADRESH 009C                   _ADRESL 009B  
                 _CCPR1L 0291           __CFG_ZCDDIS$ON 0000                   _ANSELA 018C  
                 _ANSELC 018E         __end_of___ftpack 06EA                   _RC2PPS 0EA2  
                 i1l1121 0021                   i1l1123 0022                   _RC4PPS 0EA4  
                 i1l1133 002C                   i1l1119 001D                   u103_25 0015  
                 _INTCON 000B                   _INTPPS 0E10         __end_of___lwtoft 0F60  
                 _OSCCON 0099                   _TMR0IF 005A                   _TMR2ON 00E2  
                 _TX1REG 019A                   _TX1STA 019E                   ___ftge 074A  
       __end_of_flip_led 0F25                   _adconv 0F7B                   ___wmul 0F60  
              ??___ftadd 0046           __CFG_STVREN$ON 0000                ??___ftdiv 0036  
              ??___ftneg 0075                ??___ftmul 0026                ??___ftsub 007A  
              ??___fttol 0051                ??___lwdiv 0076         __end_of_isr_func 0032  
                 main@xd 00BF                   main@yd 00BC                   floor@i 0067  
                 floor@x 0063    ___ftmul@f3_as_product 002B                   sin@sgn 00AF  
__end_of__initialization 0039               ___altoft@c 005B               ___ftadd@f1 0040  
             ___ftadd@f2 0043               ___ftge@ff1 0072               ___ftge@ff2 0075  
           eval_poly@res 0054               ___ftdiv@f1 0033               ___ftdiv@f2 0030  
             ___ftdiv@f3 003B               ___ftneg@f1 0072               ___ftmul@f1 0020  
             ___ftmul@f2 0023               ___ftsub@f1 00A3               ___ftsub@f2 00A0  
             ___fttol@f1 004D           __pcstackCOMMON 0070            __end_of_floor 0686  
          __end_of_frexp 07F9               ___lwtoft@c 0020                  ??_floor 0066  
                ??_frexp 0076               __pbssBANK1 00C2       __size_of_eval_poly 0060  
             __pmaintext 01DC                  ?___ftge 0072                  ?_adconv 0072  
                ?___wmul 0072               __pintentry 0004                  _CCP1CON 0293  
              ?___altoft 005B                ?___ftpack 0072                ?___lwtoft 0020  
     __size_of_setup_dac 0007                  _SP1BRGH 019C                  _SP1BRGL 019B  
     __size_of_setup_irq 0008       __size_of_setup_sci 0014       __size_of_setup_tmr 0012  
             adconv@temp 0020                  _PWM3DCH 0618                  _PWM3DCL 0617  
              ?_flip_led 0070                ?_isr_func 0070          __size_of___ftge 003D  
                ___ftadd 0327                  ___ftdiv 04D1                  ___ftneg 0F11  
        __size_of_adconv 0023          __size_of___wmul 001B                  ___ftmul 041D  
                ___ftsub 0F9E                  ___fttol 057A                  ___lwdiv 0FCC  
             ??___altoft 005F               ??___ftpack 0077        __end_of_eval_poly 074A  
                __ptext1 003D                  __ptext2 0601                  __ptext3 07C4  
                __ptext4 057A                  __ptext5 074A                  __ptext6 0787  
                __ptext7 06EA                  __ptext8 0F60                  __ptext9 041D  
                _sin$676 00A9               ??___lwtoft 0023             __size_of_sin 019F  
                main@num 00BA               ??_flip_led 0070     end_of_initialization 0039  
             ??_isr_func 0070        __end_of_setup_dac 0800        __end_of_setup_irq 0F11  
      __end_of_setup_sci 0F4B        __end_of_setup_tmr 0F37                _PORTAbits 000C  
       __CFG_FOSC$INTOSC 0000                _TRISAbits 008C                _TRISCbits 008E  
            ___ftdiv@exp 003E              ___ftmul@exp 002A           __end_of___ftge 0787  
         __end_of_adconv 0F9E           __end_of___wmul 0F7B               floor@expon 006A  
    start_initialization 0034               eval_poly@d 0050               eval_poly@n 0052  
             eval_poly@x 004D              __end_of_sin 01DC               frexp@value 0072  
               ??___ftge 0020                 ??_adconv 0074                 ??___wmul 0076  
      __size_of___altoft 003D        __size_of___ftpack 0064              __pbssCOMMON 007A  
              ___latbits 0002        __size_of___lwtoft 0015            __pcstackBANK0 0020  
          __pcstackBANK1 00A0        __size_of_flip_led 000C               sin@coeff_a 1000  
             sin@coeff_b 100F               isr_func@tm 007A                __pnvBANK1 00BC  
       ___lwdiv@dividend 0074        __size_of_isr_func 002E                 ?___ftadd 0040  
               ?___ftdiv 0030                 ?___ftneg 0072                 ?___ftmul 0020  
               ?___ftsub 00A0                 ?___fttol 004D                 ?___lwdiv 0072  
       __CFG_PPS1WAY$OFF 0000                 _DAC1CON0 0118                 _DAC1CON1 0119  
               _BAUD1CON 019F                _eval_poly 06EA         ___lwdiv@quotient 0077  
         __size_of_floor 0085           __size_of_frexp 0035           ___wmul@product 0076  
               _GO_nDONE 04E9                _setup_dac 07F9                _setup_irq 0F09  
              _setup_sci 0F37                _setup_tmr 0F25        ___wmul@multiplier 0072  
             ?_eval_poly 004D                frexp@eptr 0075               ?_setup_dac 0070  
       __size_of___ftadd 00F6               ?_setup_irq 0070               ?_setup_sci 0070  
       __size_of___ftdiv 00A9               ?_setup_tmr 0070         __size_of___ftneg 0008  
               ___altoft 0787         __size_of___ftmul 00B4         __size_of___ftsub 002E  
       __size_of___fttol 0087         __size_of___lwdiv 0034                 ___ftpack 0686  
             _ANSELAbits 018C                 ___lwtoft 0F4B                 _main$674 00B4  
               _main$675 00B7          ___lwdiv@divisor 0072          ___lwdiv@counter 0079  
               __ptext10 0F9E                 __ptext11 0327                 __ptext20 0686  
               __ptext12 0F11                 __ptext21 0FCC                 __ptext13 04D1  
               __ptext14 0F25                 __ptext23 0F19                 __ptext15 0F37  
               __ptext16 0F09                 __ptext17 07F9                 __ptext18 0F7B  
               __ptext19 0F4B                 _flip_led 0F19            __size_of_main 014B  
               _isr_func 0004               _RC1STAbits 019D                 int$flags 007E  
               main@argc 00B0                 main@argv 00B2               _INTCONbits 000B  
            ??_eval_poly 007A                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
            ??_setup_dac 0072              ??_setup_irq 0072              ??_setup_sci 0072  
            ??_setup_tmr 0072            __pstringtext1 1000            __pstringtext2 100F  
             _OPTION_REG 0095               _TX1STAbits 019E  
