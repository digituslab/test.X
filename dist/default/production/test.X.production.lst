

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 19 18:33:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1705
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1705 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000E                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  008C                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010E                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0113                     	;# 
   114  0114                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011C                     	;# 
   121  018C                     	;# 
   122  018E                     	;# 
   123  0191                     	;# 
   124  0191                     	;# 
   125  0192                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0194                     	;# 
   129  0195                     	;# 
   130  0196                     	;# 
   131  0197                     	;# 
   132  0199                     	;# 
   133  0199                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019A                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019C                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019D                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019E                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  019F                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  020C                     	;# 
   158  020E                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  028C                     	;# 
   176  028E                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0293                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  029A                     	;# 
   187  029E                     	;# 
   188  030C                     	;# 
   189  030E                     	;# 
   190  038C                     	;# 
   191  038E                     	;# 
   192  0391                     	;# 
   193  0392                     	;# 
   194  0393                     	;# 
   195  0397                     	;# 
   196  0398                     	;# 
   197  0399                     	;# 
   198  0415                     	;# 
   199  0416                     	;# 
   200  0417                     	;# 
   201  041C                     	;# 
   202  041D                     	;# 
   203  041E                     	;# 
   204  0511                     	;# 
   205  0515                     	;# 
   206  0617                     	;# 
   207  0618                     	;# 
   208  0619                     	;# 
   209  0619                     	;# 
   210  061A                     	;# 
   211  061B                     	;# 
   212  061C                     	;# 
   213  061C                     	;# 
   214  0691                     	;# 
   215  0692                     	;# 
   216  0693                     	;# 
   217  0694                     	;# 
   218  0695                     	;# 
   219  0696                     	;# 
   220  0697                     	;# 
   221  0698                     	;# 
   222  0699                     	;# 
   223  069A                     	;# 
   224  069B                     	;# 
   225  069C                     	;# 
   226  069D                     	;# 
   227  069E                     	;# 
   228  069F                     	;# 
   229  0E0F                     	;# 
   230  0E10                     	;# 
   231  0E11                     	;# 
   232  0E12                     	;# 
   233  0E13                     	;# 
   234  0E14                     	;# 
   235  0E15                     	;# 
   236  0E17                     	;# 
   237  0E20                     	;# 
   238  0E21                     	;# 
   239  0E22                     	;# 
   240  0E24                     	;# 
   241  0E25                     	;# 
   242  0E28                     	;# 
   243  0E29                     	;# 
   244  0E2A                     	;# 
   245  0E2B                     	;# 
   246  0E90                     	;# 
   247  0E91                     	;# 
   248  0E92                     	;# 
   249  0E94                     	;# 
   250  0E95                     	;# 
   251  0EA0                     	;# 
   252  0EA1                     	;# 
   253  0EA2                     	;# 
   254  0EA3                     	;# 
   255  0EA4                     	;# 
   256  0EA5                     	;# 
   257  0F0F                     	;# 
   258  0F10                     	;# 
   259  0F11                     	;# 
   260  0F12                     	;# 
   261  0F13                     	;# 
   262  0F14                     	;# 
   263  0F15                     	;# 
   264  0F16                     	;# 
   265  0F17                     	;# 
   266  0F18                     	;# 
   267  0F19                     	;# 
   268  0F1A                     	;# 
   269  0F1B                     	;# 
   270  0F1C                     	;# 
   271  0F1D                     	;# 
   272  0F1E                     	;# 
   273  0F1F                     	;# 
   274  0F20                     	;# 
   275  0F21                     	;# 
   276  0F22                     	;# 
   277  0F23                     	;# 
   278  0F24                     	;# 
   279  0F25                     	;# 
   280  0F26                     	;# 
   281  0F27                     	;# 
   282  0F28                     	;# 
   283  0F29                     	;# 
   284  0F2A                     	;# 
   285  0F2B                     	;# 
   286  0F2C                     	;# 
   287  0F2D                     	;# 
   288  0F9E                     	;# 
   289  0FE4                     	;# 
   290  0FE5                     	;# 
   291  0FE6                     	;# 
   292  0FE7                     	;# 
   293  0FE8                     	;# 
   294  0FE9                     	;# 
   295  0FEA                     	;# 
   296  0FEB                     	;# 
   297  0FED                     	;# 
   298  0FEE                     	;# 
   299  0FEF                     	;# 
   300                           
   301                           	psect	idataBANK0
   302  0280                     __pidataBANK0:	
   303                           
   304                           ;initializer for LCD_SetCursor@F5089
   305  0280  3400               	retlw	0
   306  0281  3400               	retlw	0
   307  0282  3440               	retlw	64
   308  0283  3400               	retlw	0
   309  0015                     _TMR0	set	21
   310  000B                     _INTCON	set	11
   311  000C                     _PORTAbits	set	12
   312  0012                     _PIR2bits	set	18
   313  0011                     _PIR1bits	set	17
   314  000B                     _INTCONbits	set	11
   315  001B                     _PR2	set	27
   316  001A                     _TMR2	set	26
   317  001C                     _T2CON	set	28
   318  000E                     _PORTC	set	14
   319  000C                     _PORTA	set	12
   320  005A                     _TMR0IF	set	90
   321  00E2                     _TMR2ON	set	226
   322  008C                     _TRISAbits	set	140
   323  0092                     _PIE2bits	set	146
   324  0091                     _PIE1bits	set	145
   325  008E                     _TRISCbits	set	142
   326  009E                     _ADCON1	set	158
   327  009D                     _ADCON0	set	157
   328  008E                     _TRISC	set	142
   329  008C                     _TRISA	set	140
   330  0095                     _OPTION_REG	set	149
   331  0099                     _OSCCON	set	153
   332  009B                     _ADRESL	set	155
   333  009C                     _ADRESH	set	156
   334  04E9                     _GO_nDONE	set	1257
   335  0119                     _DAC1CON1	set	281
   336  0118                     _DAC1CON0	set	280
   337  019A                     _TX1REG	set	410
   338  019F                     _BAUD1CONbits	set	415
   339  019F                     _BAUD1CON	set	415
   340  019C                     _SP1BRGH	set	412
   341  019B                     _SP1BRGL	set	411
   342  019E                     _TX1STAbits	set	414
   343  019E                     _TX1STA	set	414
   344  019D                     _RC1STAbits	set	413
   345  018C                     _ANSELAbits	set	396
   346  018E                     _ANSELCbits	set	398
   347  018E                     _ANSELC	set	398
   348  018C                     _ANSELA	set	396
   349  0211                     _SSP1BUF	set	529
   350  0216                     _SSPCON2bits	set	534
   351  0211                     _SSPBUF	set	529
   352  0216                     _SSP1CON2bits	set	534
   353  0216                     _SSP1CON2	set	534
   354  0212                     _SSP1ADD	set	530
   355  0215                     _SSP1CON1	set	533
   356  0214                     _SSP1STAT	set	532
   357  020C                     _WPUA	set	524
   358  0291                     _CCPR1L	set	657
   359  0293                     _CCP1CON	set	659
   360  0617                     _PWM3DCL	set	1559
   361  0618                     _PWM3DCH	set	1560
   362  0E10                     _INTPPS	set	3600
   363  0EA4                     _RC4PPS	set	3748
   364  0EA0                     _RC0PPS	set	3744
   365  0EA1                     _RC1PPS	set	3745
   366  0EA2                     _RC2PPS	set	3746
   367                           
   368                           	psect	stringtext1
   369  0242                     __pstringtext1:	
   370  0242                     STR_1:	
   371  0242  3448               	retlw	72	;'H'
   372  0243  3465               	retlw	101	;'e'
   373  0244  346C               	retlw	108	;'l'
   374  0245  346C               	retlw	108	;'l'
   375  0246  346F               	retlw	111	;'o'
   376  0247  3420               	retlw	32	;' '
   377  0248  3477               	retlw	119	;'w'
   378  0249  346F               	retlw	111	;'o'
   379  024A  3472               	retlw	114	;'r'
   380  024B  346C               	retlw	108	;'l'
   381  024C  3464               	retlw	100	;'d'
   382  024D  3421               	retlw	33	;'!'
   383  024E  3400               	retlw	0
   384                           
   385                           	psect	stringtext2
   386  024F                     __pstringtext2:	
   387  024F                     STR_2:	
   388  024F  3446               	retlw	70	;'F'
   389  0250  3465               	retlw	101	;'e'
   390  0251  3462               	retlw	98	;'b'
   391  0252  342E               	retlw	46	;'.'
   392  0253  3431               	retlw	49	;'1'
   393  0254  3439               	retlw	57	;'9'
   394  0255  342C               	retlw	44	;','
   395  0256  3432               	retlw	50	;'2'
   396  0257  3430               	retlw	48	;'0'
   397  0258  3431               	retlw	49	;'1'
   398  0259  3438               	retlw	56	;'8'
   399  025A  3400               	retlw	0
   400                           
   401                           	psect	stringtext3
   402  0000                     __pstringtext3:	
   403                           
   404                           ; #config settings
   405  0000                     
   406                           	psect	cinit
   407  0040                     start_initialization:	
   408  0040                     __initialization:	
   409                           
   410                           ; Initialize objects allocated to BANK0
   411  0040  3182  2280  3180   	fcall	__pidataBANK0	;fetch initializer
   412  0043  00B9               	movwf	__pdataBANK0& (0+127)
   413  0044  3182  2281  3180   	fcall	__pidataBANK0+1	;fetch initializer
   414  0047  00BA               	movwf	(__pdataBANK0+1)& (0+127)
   415  0048  3182  2282  3180   	fcall	__pidataBANK0+2	;fetch initializer
   416  004B  00BB               	movwf	(__pdataBANK0+2)& (0+127)
   417  004C  3182  2283         	fcall	__pidataBANK0+3	;fetch initializer
   418  004E  00BC               	movwf	(__pdataBANK0+3)& (0+127)
   419                           
   420                           ; Clear objects allocated to COMMON
   421  004F  01FA               	clrf	__pbssCOMMON& (0+127)
   422  0050  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   423                           
   424                           ; Clear objects allocated to BANK0
   425  0051  01B1               	clrf	__pbssBANK0& (0+127)
   426  0052  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   427  0053  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   428  0054  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   429  0055  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   430  0056  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   431  0057  01B7               	clrf	(__pbssBANK0+6)& (0+127)
   432  0058  01B8               	clrf	(__pbssBANK0+7)& (0+127)
   433  0059                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  0059                     __end_of__initialization:	
   437  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   438  005A  0020               	movlb	0
   439  005B  3180  28EF         	ljmp	_main	;jump to C main() function
   440                           
   441                           	psect	bssCOMMON
   442  007A                     __pbssCOMMON:	
   443  007A                     _AckCheck:	
   444  007A                     	ds	2
   445                           
   446                           	psect	bssBANK0
   447  0031                     __pbssBANK0:	
   448  0031                     main@xd:	
   449  0031                     	ds	3
   450  0034                     main@yd:	
   451  0034                     	ds	3
   452  0037                     isr_func@tm:	
   453  0037                     	ds	2
   454                           
   455                           	psect	dataBANK0
   456  0039                     __pdataBANK0:	
   457  0039                     LCD_SetCursor@F5089:	
   458  0039                     	ds	4
   459                           
   460                           	psect	cstackCOMMON
   461  0070                     __pcstackCOMMON:	
   462  0070                     ?_setup_tmr:	
   463  0070                     ?_setup_irq:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_setup_i2c:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_LCD_Init:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_LCD_Clear:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_i2c_idleCheck:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_i2c_stop:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_command:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_LCD_Putc:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_flip_led:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ??_flip_led:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_isr_func:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ??_isr_func:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_i2c_send:	
   500                           ; 1 bytes @ 0x0
   501                           
   502                           
   503                           ; 2 bytes @ 0x0
   504  0070                     	ds	2
   505  0072                     ??_setup_tmr:	
   506  0072                     ??_setup_irq:	
   507                           ; 1 bytes @ 0x2
   508                           
   509  0072                     ??_setup_i2c:	
   510                           ; 1 bytes @ 0x2
   511                           
   512  0072                     ??_i2c_idleCheck:	
   513                           ; 1 bytes @ 0x2
   514                           
   515                           
   516                           ; 1 bytes @ 0x2
   517  0072                     	ds	1
   518  0073                     i2c_idleCheck@mask:	
   519                           
   520                           ; 1 bytes @ 0x3
   521  0073                     	ds	1
   522  0074                     ??_i2c_stop:	
   523  0074                     ??_i2c_send:	
   524                           ; 1 bytes @ 0x4
   525                           
   526  0074                     ?_i2c_Start:	
   527                           ; 1 bytes @ 0x4
   528                           
   529  0074                     i2c_send@dt:	
   530                           ; 2 bytes @ 0x4
   531                           
   532  0074                     i2c_Start@adrs:	
   533                           ; 1 bytes @ 0x4
   534                           
   535                           
   536                           ; 2 bytes @ 0x4
   537  0074                     	ds	2
   538  0076                     i2c_Start@rw:	
   539                           
   540                           ; 2 bytes @ 0x6
   541  0076                     	ds	2
   542  0078                     ??_i2c_Start:	
   543                           
   544                           ; 1 bytes @ 0x8
   545  0078                     	ds	2
   546  007A                     ??_LCD_SetCursor:	
   547  007A                     ??_main:	
   548                           ; 1 bytes @ 0xA
   549                           
   550  007A                     ??_command:	
   551                           ; 1 bytes @ 0xA
   552                           
   553  007A                     ??_LCD_Putc:	
   554                           ; 1 bytes @ 0xA
   555                           
   556                           
   557                           	psect	cstackBANK0
   558  0020                     __pcstackBANK0:	
   559                           ; 1 bytes @ 0xA
   560                           
   561  0020                     command@ans:	
   562  0020                     LCD_Putc@ans:	
   563                           ; 2 bytes @ 0x0
   564                           
   565                           
   566                           ; 2 bytes @ 0x0
   567  0020                     	ds	2
   568  0022                     command@c:	
   569  0022                     LCD_Putc@c:	
   570                           ; 1 bytes @ 0x2
   571                           
   572                           
   573                           ; 1 bytes @ 0x2
   574  0022                     	ds	1
   575  0023                     ??_LCD_Clear:	
   576  0023                     ?_LCD_SetCursor:	
   577                           ; 1 bytes @ 0x3
   578                           
   579  0023                     ?_LCD_Puts:	
   580                           ; 1 bytes @ 0x3
   581                           
   582  0023                     LCD_SetCursor@col:	
   583                           ; 1 bytes @ 0x3
   584                           
   585  0023                     LCD_Puts@s:	
   586                           ; 2 bytes @ 0x3
   587                           
   588                           
   589                           ; 2 bytes @ 0x3
   590  0023                     	ds	1
   591  0024                     ??_LCD_Init:	
   592                           
   593                           ; 1 bytes @ 0x4
   594  0024                     	ds	1
   595  0025                     ??_LCD_Puts:	
   596  0025                     LCD_SetCursor@row:	
   597                           ; 1 bytes @ 0x5
   598                           
   599                           
   600                           ; 2 bytes @ 0x5
   601  0025                     	ds	2
   602  0027                     LCD_SetCursor@row_offsets:	
   603                           
   604                           ; 4 bytes @ 0x7
   605  0027                     	ds	4
   606  002B                     ?_main:	
   607  002B                     main@argc:	
   608                           ; 2 bytes @ 0xB
   609                           
   610                           
   611                           ; 2 bytes @ 0xB
   612  002B                     	ds	2
   613  002D                     main@argv:	
   614                           
   615                           ; 2 bytes @ 0xD
   616  002D                     	ds	2
   617  002F                     main@num:	
   618                           
   619                           ; 2 bytes @ 0xF
   620  002F                     	ds	2
   621                           
   622                           	psect	maintext
   623  00EF                     __pmaintext:	
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   626 ;;
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 85 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  argc            2   11[BANK0 ] int 
   632 ;;  argv            2   13[BANK0 ] PTR PTR unsigned char 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  num             2   15[BANK0 ] unsigned int 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  2   11[BANK0 ] int 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B1F/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   648 ;;Total ram usage:        6 bytes
   649 ;; Hardware stack levels required when called:    7
   650 ;; This function calls:
   651 ;;		_LCD_Clear
   652 ;;		_LCD_Init
   653 ;;		_LCD_Puts
   654 ;;		_LCD_SetCursor
   655 ;;		_setup_i2c
   656 ;;		_setup_irq
   657 ;;		_setup_tmr
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _main
   665  00EF                     _main:	
   666                           
   667                           ;main.c: 86: unsigned int num;
   668                           ;main.c: 87: static float yd = 0;
   669                           ;main.c: 88: static float xd = 0;
   670                           ;main.c: 91: OSCCON = 0b01110010 ;
   671                           
   672                           ;incstack = 0
   673                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   674  00EF  3072               	movlw	114
   675  00F0  0021               	movlb	1	; select bank1
   676  00F1  0099               	movwf	25	;volatile
   677                           
   678                           ;main.c: 92: OPTION_REG = 0b00000000 ;
   679  00F2  0195               	clrf	21	;volatile
   680                           
   681                           ;main.c: 93: ANSELA = 0b00000000 ;
   682  00F3  0023               	movlb	3	; select bank3
   683  00F4  018C               	clrf	12	;volatile
   684                           
   685                           ;main.c: 94: ANSELC = 0b10000000 ;
   686  00F5  3080               	movlw	128
   687  00F6  008E               	movwf	14	;volatile
   688                           
   689                           ;main.c: 95: TRISA = 0b00100000 ;
   690  00F7  3020               	movlw	32
   691  00F8  0021               	movlb	1	; select bank1
   692  00F9  008C               	movwf	12	;volatile
   693                           
   694                           ;main.c: 96: TRISC = 0b00001000 ;
   695  00FA  3008               	movlw	8
   696  00FB  008E               	movwf	14	;volatile
   697                           
   698                           ;main.c: 97: WPUA = 0b00100000 ;
   699  00FC  3020               	movlw	32
   700  00FD  0024               	movlb	4	; select bank4
   701  00FE  008C               	movwf	12	;volatile
   702                           
   703                           ;main.c: 98: PORTA = 0b00000000 ;
   704  00FF  0020               	movlb	0	; select bank0
   705  0100  018C               	clrf	12	;volatile
   706                           
   707                           ;main.c: 99: PORTC = 0b00000000 ;
   708  0101  018E               	clrf	14	;volatile
   709                           
   710                           ;main.c: 102: ADCON0 = 0b00011101;
   711  0102  301D               	movlw	29
   712  0103  0021               	movlb	1	; select bank1
   713  0104  009D               	movwf	29	;volatile
   714                           
   715                           ;main.c: 103: ADCON1 = 0b10010000;
   716  0105  3090               	movlw	144
   717  0106  009E               	movwf	30	;volatile
   718                           
   719                           ;main.c: 107: RC2PPS = 0b00001100 ;
   720  0107  300C               	movlw	12
   721  0108  003D               	movlb	29	; select bank29
   722  0109  00A2               	movwf	34	;volatile
   723                           
   724                           ;main.c: 108: CCP1CON = 0b00001100;
   725  010A  300C               	movlw	12
   726  010B  0025               	movlb	5	; select bank5
   727  010C  0093               	movwf	19	;volatile
   728                           
   729                           ;main.c: 109: CCPR1L = 10;
   730  010D  300A               	movlw	10
   731  010E  0091               	movwf	17	;volatile
   732                           
   733                           ;main.c: 114: PWM3DCH = 64 ;
   734  010F  3040               	movlw	64
   735  0110  002C               	movlb	12	; select bank12
   736  0111  0098               	movwf	24	;volatile
   737                           
   738                           ;main.c: 115: PWM3DCL = 0 ;
   739  0112  0197               	clrf	23	;volatile
   740                           
   741                           ;main.c: 117: T2CON = 0b00000010 ;
   742  0113  3002               	movlw	2
   743  0114  0020               	movlb	0	; select bank0
   744  0115  009C               	movwf	28	;volatile
   745                           
   746                           ;main.c: 118: TMR2 = 0 ;
   747  0116  019A               	clrf	26	;volatile
   748                           
   749                           ;main.c: 119: PR2 = 153 ;
   750  0117  3099               	movlw	153
   751  0118  009B               	movwf	27	;volatile
   752                           
   753                           ;main.c: 120: TMR2ON = 1 ;
   754  0119  151C               	bsf	28,2	;volatile
   755                           
   756                           ;main.c: 122: num = 255;
   757  011A  30FF               	movlw	255
   758  011B  00AF               	movwf	main@num
   759  011C  3000               	movlw	0
   760  011D  00B0               	movwf	main@num+1
   761                           
   762                           ;main.c: 124: setup_tmr();
   763  011E  3182  2222  3180   	fcall	_setup_tmr
   764                           
   765                           ;main.c: 125: setup_irq();
   766  0121  3182  2272  3180   	fcall	_setup_irq
   767                           
   768                           ;main.c: 126: setup_i2c();
   769  0124  3181  219F  3180   	fcall	_setup_i2c
   770                           
   771                           ;main.c: 128: LCD_Init();
   772  0127  3180  205D  3180   	fcall	_LCD_Init
   773                           
   774                           ;main.c: 129: LCD_Clear();
   775  012A  3182  2234  3180   	fcall	_LCD_Clear
   776                           
   777                           ;main.c: 145: LCD_SetCursor(0,0);
   778  012D  3000               	movlw	0
   779  012E  0020               	movlb	0	; select bank0
   780  012F  00A3               	movwf	LCD_SetCursor@col
   781  0130  00A4               	movwf	LCD_SetCursor@col+1
   782  0131  3000               	movlw	0
   783  0132  00A5               	movwf	LCD_SetCursor@row
   784  0133  00A6               	movwf	LCD_SetCursor@row+1
   785  0134  3181  21FC  3180   	fcall	_LCD_SetCursor
   786                           
   787                           ;main.c: 146: LCD_Puts("Hello world!");
   788  0137  3042               	movlw	low (STR_1| (0+32768))
   789  0138  0020               	movlb	0	; select bank0
   790  0139  00A3               	movwf	LCD_Puts@s
   791  013A  3082               	movlw	high (STR_1| (0+32768))
   792  013B  00A4               	movwf	LCD_Puts@s+1
   793  013C  3181  21E5  3180   	fcall	_LCD_Puts
   794                           
   795                           ;main.c: 147: LCD_SetCursor(0,1);
   796  013F  3000               	movlw	0
   797  0140  0020               	movlb	0	; select bank0
   798  0141  00A3               	movwf	LCD_SetCursor@col
   799  0142  00A4               	movwf	LCD_SetCursor@col+1
   800  0143  3001               	movlw	1
   801  0144  00A5               	movwf	LCD_SetCursor@row
   802  0145  3000               	movlw	0
   803  0146  00A6               	movwf	LCD_SetCursor@row+1
   804  0147  3181  21FC  3180   	fcall	_LCD_SetCursor
   805                           
   806                           ;main.c: 148: LCD_Puts("Feb.19,2018");
   807  014A  304F               	movlw	low (STR_2| (0+32768))
   808  014B  0020               	movlb	0	; select bank0
   809  014C  00A3               	movwf	LCD_Puts@s
   810  014D  3082               	movlw	high (STR_2| (0+32768))
   811  014E  00A4               	movwf	LCD_Puts@s+1
   812  014F  3181  21E5  3180   	fcall	_LCD_Puts
   813  0152                     l149:	
   814                           ;main.c: 151: while(1) {
   815                           
   816  0152  2952               	goto	l149
   817  0153                     __end_of_main:	
   818                           ;main.c: 156: }
   819                           ;main.c: 157: return (0);
   820                           ;	Return value of _main is never used
   821                           
   822                           
   823                           	psect	text1
   824  0222                     __ptext1:	
   825 ;; *************** function _setup_tmr *****************
   826 ;; Defined at:
   827 ;;		line 396 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    2
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _setup_tmr
   857  0222                     _setup_tmr:	
   858                           
   859                           ;main.c: 398: INTCON = 0x00;
   860                           
   861                           ;incstack = 0
   862                           ; Regs used in _setup_tmr: [wreg+status,2]
   863  0222  018B               	clrf	11	;volatile
   864                           
   865                           ;main.c: 401: INTCON = 0b10000000;
   866  0223  3080               	movlw	128
   867  0224  008B               	movwf	11	;volatile
   868                           
   869                           ;main.c: 402: OPTION_REG = 0b00000111;
   870  0225  3007               	movlw	7
   871  0226  0021               	movlb	1	; select bank1
   872  0227  0095               	movwf	21	;volatile
   873                           
   874                           ;main.c: 403: TMR0 = 0;
   875  0228  0020               	movlb	0	; select bank0
   876  0229  0195               	clrf	21	;volatile
   877                           
   878                           ;main.c: 404: INTPPS = 0b00010000;
   879  022A  3010               	movlw	16
   880  022B  003C               	movlb	28	; select bank28
   881  022C  0090               	movwf	16	;volatile
   882                           
   883                           ;main.c: 407: TRISA = 0x00;
   884  022D  0021               	movlb	1	; select bank1
   885  022E  018C               	clrf	12	;volatile
   886                           
   887                           ;main.c: 408: PORTA = 0b00000000;
   888  022F  0020               	movlb	0	; select bank0
   889  0230  018C               	clrf	12	;volatile
   890                           
   891                           ;main.c: 411: INTCON = 0b10100000;
   892  0231  30A0               	movlw	160
   893  0232  008B               	movwf	11	;volatile
   894  0233  0008               	return
   895  0234                     __end_of_setup_tmr:	
   896                           
   897                           	psect	text2
   898  0272                     __ptext2:	
   899 ;; *************** function _setup_irq *****************
   900 ;; Defined at:
   901 ;;		line 414 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    2
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _setup_irq
   931  0272                     _setup_irq:	
   932                           
   933                           ;main.c: 416: TRISAbits.TRISA4 = 1;
   934                           
   935                           ;incstack = 0
   936                           ; Regs used in _setup_irq: [wreg]
   937  0272  0021               	movlb	1	; select bank1
   938  0273  160C               	bsf	12,4	;volatile
   939                           
   940                           ;main.c: 417: TRISAbits.TRISA5 = 0;
   941  0274  128C               	bcf	12,5	;volatile
   942                           
   943                           ;main.c: 420: INTPPS = 0b00000100;
   944  0275  3004               	movlw	4
   945  0276  003C               	movlb	28	; select bank28
   946  0277  0090               	movwf	16	;volatile
   947                           
   948                           ;main.c: 423: INTCONbits.INTE = 1;
   949  0278  160B               	bsf	11,4	;volatile
   950  0279  0008               	return
   951  027A                     __end_of_setup_irq:	
   952                           
   953                           	psect	text3
   954  019F                     __ptext3:	
   955 ;; *************** function _setup_i2c *****************
   956 ;; Defined at:
   957 ;;		line 160 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;Total ram usage:        1 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    2
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           
   986                           ;psect for function _setup_i2c
   987  019F                     _setup_i2c:	
   988                           
   989                           ;main.c: 161: _delay((unsigned long)((40)*(8000000/4000.0)));
   990                           
   991                           ;incstack = 0
   992                           ; Regs used in _setup_i2c: [wreg+status,2]
   993  019F  3068               	movlw	104
   994  01A0  00F2               	movwf	??_setup_i2c
   995  01A1  30E4               	movlw	228
   996  01A2                     u397:	
   997  01A2  0B89               	decfsz	9,f
   998  01A3  29A2               	goto	u397
   999  01A4  0BF2               	decfsz	??_setup_i2c,f
  1000  01A5  29A2               	goto	u397
  1001  01A6  3200               	nop2
  1002                           
  1003                           ;main.c: 164: RC1PPS = 0b00010001;
  1004  01A7  3011               	movlw	17
  1005  01A8  003D               	movlb	29	; select bank29
  1006  01A9  00A1               	movwf	33	;volatile
  1007                           
  1008                           ;main.c: 165: RC0PPS = 0b00010000;
  1009  01AA  3010               	movlw	16
  1010  01AB  00A0               	movwf	32	;volatile
  1011                           
  1012                           ;main.c: 168: ANSELCbits.ANSC0 = 0;
  1013  01AC  0023               	movlb	3	; select bank3
  1014  01AD  100E               	bcf	14,0	;volatile
  1015                           
  1016                           ;main.c: 169: ANSELCbits.ANSC1 = 0;
  1017  01AE  108E               	bcf	14,1	;volatile
  1018                           
  1019                           ;main.c: 172: TRISCbits.TRISC1 = 1;
  1020  01AF  0021               	movlb	1	; select bank1
  1021  01B0  148E               	bsf	14,1	;volatile
  1022                           
  1023                           ;main.c: 173: TRISCbits.TRISC0 = 1;
  1024  01B1  140E               	bsf	14,0	;volatile
  1025                           
  1026                           ;main.c: 177: SSP1STAT = 0b10000000;
  1027  01B2  3080               	movlw	128
  1028  01B3  0024               	movlb	4	; select bank4
  1029  01B4  0094               	movwf	20	;volatile
  1030                           
  1031                           ;main.c: 178: SSP1CON1 = 0b00101000;
  1032  01B5  3028               	movlw	40
  1033  01B6  0095               	movwf	21	;volatile
  1034                           
  1035                           ;main.c: 180: SSP1ADD = 12;
  1036  01B7  300C               	movlw	12
  1037  01B8  0092               	movwf	18	;volatile
  1038                           
  1039                           ;main.c: 181: SSP1STAT = 0;
  1040  01B9  0194               	clrf	20	;volatile
  1041                           
  1042                           ;main.c: 183: PIE1bits.SSP1IE = 1;
  1043  01BA  0021               	movlb	1	; select bank1
  1044  01BB  1591               	bsf	17,3	;volatile
  1045                           
  1046                           ;main.c: 184: PIE2bits.BCL1IE = 1;
  1047  01BC  1592               	bsf	18,3	;volatile
  1048                           
  1049                           ;main.c: 185: INTCONbits.GIE = 1;
  1050  01BD  178B               	bsf	11,7	;volatile
  1051                           
  1052                           ;main.c: 186: INTCONbits.PEIE = 1;
  1053  01BE  170B               	bsf	11,6	;volatile
  1054                           
  1055                           ;main.c: 187: PIR1bits.SSP1IF = 0;
  1056  01BF  0020               	movlb	0	; select bank0
  1057  01C0  1191               	bcf	17,3	;volatile
  1058                           
  1059                           ;main.c: 188: PIR2bits.BCL1IF = 0;
  1060  01C1  1192               	bcf	18,3	;volatile
  1061  01C2  0008               	return
  1062  01C3                     __end_of_setup_i2c:	
  1063                           ;main.c: 194: return;
  1064                           
  1065                           
  1066                           	psect	text4
  1067  01FC                     __ptext4:	
  1068 ;; *************** function _LCD_SetCursor *****************
  1069 ;; Defined at:
  1070 ;;		line 259 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  col             2    3[BANK0 ] int 
  1073 ;;  row             2    5[BANK0 ] int 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  row_offsets     4    7[BANK0 ] int [2]
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1086 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1088 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;Total ram usage:        8 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    5
  1092 ;; This function calls:
  1093 ;;		_command
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _LCD_SetCursor
  1101  01FC                     _LCD_SetCursor:	
  1102                           
  1103                           ;main.c: 261: int row_offsets[] = { 0x00, 0x40 } ;
  1104                           
  1105                           ;incstack = 0
  1106                           ; Regs used in _LCD_SetCursor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1107  01FC  0020               	movlb	0	; select bank0
  1108  01FD  083C               	movf	LCD_SetCursor@F5089+3,w
  1109  01FE  00AA               	movwf	LCD_SetCursor@row_offsets+3
  1110  01FF  083B               	movf	LCD_SetCursor@F5089+2,w
  1111  0200  00A9               	movwf	LCD_SetCursor@row_offsets+2
  1112  0201  083A               	movf	LCD_SetCursor@F5089+1,w
  1113  0202  00A8               	movwf	LCD_SetCursor@row_offsets+1
  1114  0203  0839               	movf	LCD_SetCursor@F5089,w
  1115  0204  00A7               	movwf	LCD_SetCursor@row_offsets
  1116                           
  1117                           ;main.c: 262: command(0x80 | (col + row_offsets[row])) ;
  1118  0205  3525               	lslf	LCD_SetCursor@row,w
  1119  0206  3E27               	addlw	(low (LCD_SetCursor@row_offsets| 0))& (0+255)
  1120  0207  0086               	movwf	6
  1121  0208  0187               	clrf	7
  1122  0209  0801               	movf	1,w
  1123  020A  0723               	addwf	LCD_SetCursor@col,w
  1124  020B  3880               	iorlw	128
  1125  020C  3181  2179         	fcall	_command
  1126  020E  0008               	return
  1127  020F                     __end_of_LCD_SetCursor:	
  1128                           
  1129                           	psect	text5
  1130  01E5                     __ptext5:	
  1131 ;; *************** function _LCD_Puts *****************
  1132 ;; Defined at:
  1133 ;;		line 289 in file "main.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  s               2    3[BANK0 ] PTR const unsigned char 
  1136 ;;		 -> STR_2(12), STR_1(13), 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  ans             2    0        int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1150 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1151 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1152 ;;Total ram usage:        3 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    5
  1155 ;; This function calls:
  1156 ;;		_LCD_Putc
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           
  1163                           ;psect for function _LCD_Puts
  1164  01E5                     _LCD_Puts:	
  1165  01E5                     l1168:	
  1166                           ;main.c: 291: int ans ;
  1167                           ;main.c: 292: while(*s) {
  1168                           
  1169                           ;incstack = 0
  1170                           ; Regs used in _LCD_Puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1171                           
  1172  01E5  0020               	movlb	0	; select bank0
  1173  01E6  0823               	movf	LCD_Puts@s,w
  1174  01E7  0084               	movwf	4
  1175  01E8  0824               	movf	LCD_Puts@s+1,w
  1176  01E9  0085               	movwf	5
  1177  01EA  0012               	moviw fsr0++
  1178  01EB  1903               	btfsc	3,2
  1179  01EC  0008               	return
  1180                           
  1181                           ;main.c: 293: LCD_Putc(*s++);
  1182  01ED  0020               	movlb	0	; select bank0
  1183  01EE  0823               	movf	LCD_Puts@s,w
  1184  01EF  0084               	movwf	4
  1185  01F0  0824               	movf	LCD_Puts@s+1,w
  1186  01F1  0085               	movwf	5
  1187  01F2  0800               	movf	0,w	;code access
  1188  01F3  3181  2153  3181   	fcall	_LCD_Putc
  1189  01F6  3001               	movlw	1
  1190  01F7  0020               	movlb	0	; select bank0
  1191  01F8  07A3               	addwf	LCD_Puts@s,f
  1192  01F9  3000               	movlw	0
  1193  01FA  3DA4               	addwfc	LCD_Puts@s+1,f
  1194  01FB  29E5               	goto	l1168
  1195  01FC                     __end_of_LCD_Puts:	
  1196                           
  1197                           	psect	text6
  1198  0153                     __ptext6:	
  1199 ;; *************** function _LCD_Putc *****************
  1200 ;; Defined at:
  1201 ;;		line 270 in file "main.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  c               1    wreg     unsigned char 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  c               1    2[BANK0 ] unsigned char 
  1206 ;;  ans             2    0[BANK0 ] int 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1217 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1219 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;Total ram usage:        3 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    4
  1223 ;; This function calls:
  1224 ;;		_i2c_Start
  1225 ;;		_i2c_send
  1226 ;;		_i2c_stop
  1227 ;; This function is called by:
  1228 ;;		_LCD_Puts
  1229 ;;		_LCD_CreateChar
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _LCD_Putc
  1235  0153                     _LCD_Putc:	
  1236                           
  1237                           ;incstack = 0
  1238                           ; Regs used in _LCD_Putc: [wreg+status,2+status,0+pclath+cstack]
  1239                           ;LCD_Putc@c stored from wreg
  1240  0153  0020               	movlb	0	; select bank0
  1241  0154  00A2               	movwf	LCD_Putc@c
  1242                           
  1243                           ;main.c: 272: int ans ;
  1244                           ;main.c: 273: ans = i2c_Start((0x3e),(0));
  1245  0155  303E               	movlw	62
  1246  0156  00F4               	movwf	i2c_Start@adrs
  1247  0157  3000               	movlw	0
  1248  0158  00F5               	movwf	i2c_Start@adrs+1
  1249  0159  3000               	movlw	0
  1250  015A  00F6               	movwf	i2c_Start@rw
  1251  015B  00F7               	movwf	i2c_Start@rw+1
  1252  015C  3181  21C3  3181   	fcall	_i2c_Start
  1253  015F  0875               	movf	?_i2c_Start+1,w
  1254  0160  0020               	movlb	0	; select bank0
  1255  0161  00A1               	movwf	LCD_Putc@ans+1
  1256  0162  0874               	movf	?_i2c_Start,w
  1257  0163  00A0               	movwf	LCD_Putc@ans
  1258                           
  1259                           ;main.c: 274: if (ans == 0) {
  1260  0164  0820               	movf	LCD_Putc@ans,w
  1261  0165  0421               	iorwf	LCD_Putc@ans+1,w
  1262  0166  1D03               	btfss	3,2
  1263  0167  2971               	goto	l191
  1264                           
  1265                           ;main.c: 276: i2c_send(0b01000000) ;
  1266  0168  3040               	movlw	64
  1267  0169  3182  220F  3181   	fcall	_i2c_send
  1268                           
  1269                           ;main.c: 277: i2c_send(c) ;
  1270  016C  0020               	movlb	0	; select bank0
  1271  016D  0822               	movf	LCD_Putc@c,w
  1272  016E  3182  220F  3181   	fcall	_i2c_send
  1273  0171                     l191:	
  1274                           
  1275                           ;main.c: 278: }
  1276                           ;main.c: 279: i2c_stop() ;
  1277  0171  3182  227A  3181   	fcall	_i2c_stop
  1278                           
  1279                           ;main.c: 280: _delay((unsigned long)((26)*(8000000/4000000.0))) ;
  1280  0174  3011               	movlw	17
  1281  0175                     u407:	
  1282  0175  0B89               	decfsz	9,f
  1283  0176  2975               	goto	u407
  1284  0177  0000               	nop
  1285  0178  0008               	return
  1286  0179                     __end_of_LCD_Putc:	
  1287                           
  1288                           	psect	text7
  1289  005D                     __ptext7:	
  1290 ;; *************** function _LCD_Init *****************
  1291 ;; Defined at:
  1292 ;;		line 317 in file "main.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0, pclath, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1310 ;;Total ram usage:        1 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    6
  1313 ;; This function calls:
  1314 ;;		_LCD_Clear
  1315 ;;		_command
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           
  1322                           ;psect for function _LCD_Init
  1323  005D                     _LCD_Init:	
  1324                           
  1325                           ;main.c: 319: command(0x38);
  1326                           
  1327                           ;incstack = 0
  1328                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1329  005D  3038               	movlw	56
  1330  005E  3181  2179  3180   	fcall	_command
  1331                           
  1332                           ;main.c: 320: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1333  0061  300D               	movlw	13
  1334  0062  0020               	movlb	0	; select bank0
  1335  0063  00A4               	movwf	??_LCD_Init
  1336  0064  30FB               	movlw	251
  1337  0065                     u417:	
  1338  0065  0B89               	decfsz	9,f
  1339  0066  2865               	goto	u417
  1340  0067  0BA4               	decfsz	??_LCD_Init,f
  1341  0068  2865               	goto	u417
  1342  0069  3200               	nop2
  1343                           
  1344                           ;main.c: 321: command(0x39);
  1345  006A  3039               	movlw	57
  1346  006B  3181  2179  3180   	fcall	_command
  1347                           
  1348                           ;main.c: 322: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1349  006E  300D               	movlw	13
  1350  006F  0020               	movlb	0	; select bank0
  1351  0070  00A4               	movwf	??_LCD_Init
  1352  0071  30FB               	movlw	251
  1353  0072                     u427:	
  1354  0072  0B89               	decfsz	9,f
  1355  0073  2872               	goto	u427
  1356  0074  0BA4               	decfsz	??_LCD_Init,f
  1357  0075  2872               	goto	u427
  1358  0076  3200               	nop2
  1359                           
  1360                           ;main.c: 323: command(0x14);
  1361  0077  3014               	movlw	20
  1362  0078  3181  2179  3180   	fcall	_command
  1363                           
  1364                           ;main.c: 324: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1365  007B  300D               	movlw	13
  1366  007C  0020               	movlb	0	; select bank0
  1367  007D  00A4               	movwf	??_LCD_Init
  1368  007E  30FB               	movlw	251
  1369  007F                     u437:	
  1370  007F  0B89               	decfsz	9,f
  1371  0080  287F               	goto	u437
  1372  0081  0BA4               	decfsz	??_LCD_Init,f
  1373  0082  287F               	goto	u437
  1374  0083  3200               	nop2
  1375                           
  1376                           ;main.c: 325: command(0x73);
  1377  0084  3073               	movlw	115
  1378  0085  3181  2179  3180   	fcall	_command
  1379                           
  1380                           ;main.c: 326: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1381  0088  300D               	movlw	13
  1382  0089  0020               	movlb	0	; select bank0
  1383  008A  00A4               	movwf	??_LCD_Init
  1384  008B  30FB               	movlw	251
  1385  008C                     u447:	
  1386  008C  0B89               	decfsz	9,f
  1387  008D  288C               	goto	u447
  1388  008E  0BA4               	decfsz	??_LCD_Init,f
  1389  008F  288C               	goto	u447
  1390  0090  3200               	nop2
  1391                           
  1392                           ;main.c: 327: command(0x53);
  1393  0091  3053               	movlw	83
  1394  0092  3181  2179  3180   	fcall	_command
  1395                           
  1396                           ;main.c: 328: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1397  0095  300D               	movlw	13
  1398  0096  0020               	movlb	0	; select bank0
  1399  0097  00A4               	movwf	??_LCD_Init
  1400  0098  30FB               	movlw	251
  1401  0099                     u457:	
  1402  0099  0B89               	decfsz	9,f
  1403  009A  2899               	goto	u457
  1404  009B  0BA4               	decfsz	??_LCD_Init,f
  1405  009C  2899               	goto	u457
  1406  009D  3200               	nop2
  1407                           
  1408                           ;main.c: 329: command(0x6c);
  1409  009E  306C               	movlw	108
  1410  009F  3181  2179  3180   	fcall	_command
  1411                           
  1412                           ;main.c: 330: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1413  00A2  300D               	movlw	13
  1414  00A3  0020               	movlb	0	; select bank0
  1415  00A4  00A4               	movwf	??_LCD_Init
  1416  00A5  30FB               	movlw	251
  1417  00A6                     u467:	
  1418  00A6  0B89               	decfsz	9,f
  1419  00A7  28A6               	goto	u467
  1420  00A8  0BA4               	decfsz	??_LCD_Init,f
  1421  00A9  28A6               	goto	u467
  1422  00AA  3200               	nop2
  1423                           
  1424                           ;main.c: 331: command(0x38);
  1425  00AB  3038               	movlw	56
  1426  00AC  3181  2179  3180   	fcall	_command
  1427                           
  1428                           ;main.c: 332: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1429  00AF  300D               	movlw	13
  1430  00B0  0020               	movlb	0	; select bank0
  1431  00B1  00A4               	movwf	??_LCD_Init
  1432  00B2  30FB               	movlw	251
  1433  00B3                     u477:	
  1434  00B3  0B89               	decfsz	9,f
  1435  00B4  28B3               	goto	u477
  1436  00B5  0BA4               	decfsz	??_LCD_Init,f
  1437  00B6  28B3               	goto	u477
  1438  00B7  3200               	nop2
  1439                           
  1440                           ;main.c: 334: command(0x01);
  1441  00B8  3001               	movlw	1
  1442  00B9  3181  2179  3180   	fcall	_command
  1443                           
  1444                           ;main.c: 335: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1445  00BC  300D               	movlw	13
  1446  00BD  0020               	movlb	0	; select bank0
  1447  00BE  00A4               	movwf	??_LCD_Init
  1448  00BF  30FB               	movlw	251
  1449  00C0                     u487:	
  1450  00C0  0B89               	decfsz	9,f
  1451  00C1  28C0               	goto	u487
  1452  00C2  0BA4               	decfsz	??_LCD_Init,f
  1453  00C3  28C0               	goto	u487
  1454  00C4  3200               	nop2
  1455                           
  1456                           ;main.c: 336: command(0x38);
  1457  00C5  3038               	movlw	56
  1458  00C6  3181  2179  3180   	fcall	_command
  1459                           
  1460                           ;main.c: 337: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1461  00C9  300D               	movlw	13
  1462  00CA  0020               	movlb	0	; select bank0
  1463  00CB  00A4               	movwf	??_LCD_Init
  1464  00CC  30FB               	movlw	251
  1465  00CD                     u497:	
  1466  00CD  0B89               	decfsz	9,f
  1467  00CE  28CD               	goto	u497
  1468  00CF  0BA4               	decfsz	??_LCD_Init,f
  1469  00D0  28CD               	goto	u497
  1470  00D1  3200               	nop2
  1471                           
  1472                           ;main.c: 341: command(0x0c);
  1473  00D2  300C               	movlw	12
  1474  00D3  3181  2179  3180   	fcall	_command
  1475                           
  1476                           ;main.c: 342: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1477  00D6  300D               	movlw	13
  1478  00D7  0020               	movlb	0	; select bank0
  1479  00D8  00A4               	movwf	??_LCD_Init
  1480  00D9  30FB               	movlw	251
  1481  00DA                     u507:	
  1482  00DA  0B89               	decfsz	9,f
  1483  00DB  28DA               	goto	u507
  1484  00DC  0BA4               	decfsz	??_LCD_Init,f
  1485  00DD  28DA               	goto	u507
  1486  00DE  3200               	nop2
  1487                           
  1488                           ;main.c: 346: command(0x06);
  1489  00DF  3006               	movlw	6
  1490  00E0  3181  2179  3180   	fcall	_command
  1491                           
  1492                           ;main.c: 347: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1493  00E3  300D               	movlw	13
  1494  00E4  0020               	movlb	0	; select bank0
  1495  00E5  00A4               	movwf	??_LCD_Init
  1496  00E6  30FB               	movlw	251
  1497  00E7                     u517:	
  1498  00E7  0B89               	decfsz	9,f
  1499  00E8  28E7               	goto	u517
  1500  00E9  0BA4               	decfsz	??_LCD_Init,f
  1501  00EA  28E7               	goto	u517
  1502  00EB  3200               	nop2
  1503                           
  1504                           ;main.c: 350: LCD_Clear() ;
  1505  00EC  3182  2234         	fcall	_LCD_Clear
  1506  00EE  0008               	return
  1507  00EF                     __end_of_LCD_Init:	
  1508                           
  1509                           	psect	text8
  1510  0234                     __ptext8:	
  1511 ;; *************** function _LCD_Clear *****************
  1512 ;; Defined at:
  1513 ;;		line 247 in file "main.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, pclath, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1529 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1530 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1531 ;;Total ram usage:        1 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    5
  1534 ;; This function calls:
  1535 ;;		_command
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;;		_LCD_Init
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           
  1543                           ;psect for function _LCD_Clear
  1544  0234                     _LCD_Clear:	
  1545                           
  1546                           ;main.c: 249: command(0x01) ;
  1547                           
  1548                           ;incstack = 0
  1549                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1550  0234  3001               	movlw	1
  1551  0235  3181  2179  3182   	fcall	_command
  1552                           
  1553                           ;main.c: 250: _delay((unsigned long)((5)*(8000000/4000.0))) ;
  1554  0238  300D               	movlw	13
  1555  0239  0020               	movlb	0	; select bank0
  1556  023A  00A3               	movwf	??_LCD_Clear
  1557  023B  30FB               	movlw	251
  1558  023C                     u527:	
  1559  023C  0B89               	decfsz	9,f
  1560  023D  2A3C               	goto	u527
  1561  023E  0BA3               	decfsz	??_LCD_Clear,f
  1562  023F  2A3C               	goto	u527
  1563  0240  3200               	nop2
  1564  0241  0008               	return
  1565  0242                     __end_of_LCD_Clear:	
  1566                           
  1567                           	psect	text9
  1568  0179                     __ptext9:	
  1569 ;; *************** function _command *****************
  1570 ;; Defined at:
  1571 ;;		line 231 in file "main.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  c               1    wreg     unsigned char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  c               1    2[BANK0 ] unsigned char 
  1576 ;;  ans             2    0[BANK0 ] int 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1587 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1589 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1590 ;;Total ram usage:        3 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    4
  1593 ;; This function calls:
  1594 ;;		_i2c_Start
  1595 ;;		_i2c_send
  1596 ;;		_i2c_stop
  1597 ;; This function is called by:
  1598 ;;		_LCD_Clear
  1599 ;;		_LCD_SetCursor
  1600 ;;		_LCD_Init
  1601 ;;		_LCD_CreateChar
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _command
  1607  0179                     _command:	
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in _command: [wreg+status,2+status,0+pclath+cstack]
  1611                           ;command@c stored from wreg
  1612  0179  0020               	movlb	0	; select bank0
  1613  017A  00A2               	movwf	command@c
  1614                           
  1615                           ;main.c: 233: int ans ;
  1616                           ;main.c: 234: ans = i2c_Start((0x3e),(0));
  1617  017B  303E               	movlw	62
  1618  017C  00F4               	movwf	i2c_Start@adrs
  1619  017D  3000               	movlw	0
  1620  017E  00F5               	movwf	i2c_Start@adrs+1
  1621  017F  3000               	movlw	0
  1622  0180  00F6               	movwf	i2c_Start@rw
  1623  0181  00F7               	movwf	i2c_Start@rw+1
  1624  0182  3181  21C3  3181   	fcall	_i2c_Start
  1625  0185  0875               	movf	?_i2c_Start+1,w
  1626  0186  0020               	movlb	0	; select bank0
  1627  0187  00A1               	movwf	command@ans+1
  1628  0188  0874               	movf	?_i2c_Start,w
  1629  0189  00A0               	movwf	command@ans
  1630                           
  1631                           ;main.c: 235: if (ans == 0) {
  1632  018A  0820               	movf	command@ans,w
  1633  018B  0421               	iorwf	command@ans+1,w
  1634  018C  1D03               	btfss	3,2
  1635  018D  2997               	goto	l179
  1636                           
  1637                           ;main.c: 237: i2c_send(0b00000000) ;
  1638  018E  3000               	movlw	0
  1639  018F  3182  220F  3181   	fcall	_i2c_send
  1640                           
  1641                           ;main.c: 238: i2c_send(c) ;
  1642  0192  0020               	movlb	0	; select bank0
  1643  0193  0822               	movf	command@c,w
  1644  0194  3182  220F  3181   	fcall	_i2c_send
  1645  0197                     l179:	
  1646                           
  1647                           ;main.c: 239: }
  1648                           ;main.c: 240: i2c_stop() ;
  1649  0197  3182  227A  3181   	fcall	_i2c_stop
  1650                           
  1651                           ;main.c: 241: _delay((unsigned long)((26)*(8000000/4000000.0))) ;
  1652  019A  3011               	movlw	17
  1653  019B                     u537:	
  1654  019B  0B89               	decfsz	9,f
  1655  019C  299B               	goto	u537
  1656  019D  0000               	nop
  1657  019E  0008               	return
  1658  019F                     __end_of_command:	
  1659                           
  1660                           	psect	text10
  1661  027A                     __ptext10:	
  1662 ;; *************** function _i2c_stop *****************
  1663 ;; Defined at:
  1664 ;;		line 214 in file "main.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    3
  1685 ;; This function calls:
  1686 ;;		_i2c_idleCheck
  1687 ;; This function is called by:
  1688 ;;		_command
  1689 ;;		_LCD_Putc
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _i2c_stop
  1695  027A                     _i2c_stop:	
  1696                           
  1697                           ;main.c: 217: i2c_idleCheck(0x5) ;
  1698                           
  1699                           ;incstack = 0
  1700                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  1701  027A  3005               	movlw	5
  1702  027B  3182  2267         	fcall	_i2c_idleCheck
  1703                           
  1704                           ;main.c: 218: SSP1CON2bits.PEN = 1 ;
  1705  027D  0024               	movlb	4	; select bank4
  1706  027E  1516               	bsf	22,2	;volatile
  1707  027F  0008               	return
  1708  0280                     __end_of_i2c_stop:	
  1709                           
  1710                           	psect	text11
  1711  020F                     __ptext11:	
  1712 ;; *************** function _i2c_send *****************
  1713 ;; Defined at:
  1714 ;;		line 221 in file "main.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  dt              1    wreg     unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  dt              1    4[COMMON] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2  172[None  ] int 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;Total ram usage:        1 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    3
  1735 ;; This function calls:
  1736 ;;		_i2c_idleCheck
  1737 ;; This function is called by:
  1738 ;;		_command
  1739 ;;		_LCD_Putc
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _i2c_send
  1745  020F                     _i2c_send:	
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _i2c_send: [wreg+status,2+status,0+pclath+cstack]
  1749                           ;i2c_send@dt stored from wreg
  1750  020F  00F4               	movwf	i2c_send@dt
  1751                           
  1752                           ;main.c: 223: i2c_idleCheck(0x5) ;
  1753  0210  3005               	movlw	5
  1754  0211  3182  2267  3182   	fcall	_i2c_idleCheck
  1755                           
  1756                           ;main.c: 224: AckCheck = 1 ;
  1757  0214  3001               	movlw	1
  1758  0215  00FA               	movwf	_AckCheck
  1759  0216  3000               	movlw	0
  1760  0217  00FB               	movwf	_AckCheck+1
  1761                           
  1762                           ;main.c: 225: SSP1BUF = dt ;
  1763  0218  0874               	movf	i2c_send@dt,w
  1764  0219  0024               	movlb	4	; select bank4
  1765  021A  0091               	movwf	17	;volatile
  1766  021B                     l918:	
  1767                           ;main.c: 226: while (AckCheck) ;
  1768                           
  1769  021B  087A               	movf	_AckCheck,w
  1770  021C  047B               	iorwf	_AckCheck+1,w
  1771  021D  1D03               	btfss	3,2
  1772  021E  2A1B               	goto	l918
  1773                           
  1774                           ;main.c: 227: return SSP1CON2bits.ACKSTAT ;
  1775                           ;	Return value of _i2c_send is never used
  1776  021F  0024               	movlb	4	; select bank4
  1777  0220  0816               	movf	22,w	;volatile
  1778  0221  0008               	return
  1779  0222                     __end_of_i2c_send:	
  1780                           
  1781                           	psect	text12
  1782  01C3                     __ptext12:	
  1783 ;; *************** function _i2c_Start *****************
  1784 ;; Defined at:
  1785 ;;		line 201 in file "main.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  adrs            2    4[COMMON] int 
  1788 ;;  rw              2    6[COMMON] int 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  2    4[COMMON] int 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1804 ;;Total ram usage:        6 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    3
  1807 ;; This function calls:
  1808 ;;		_i2c_idleCheck
  1809 ;; This function is called by:
  1810 ;;		_command
  1811 ;;		_LCD_Putc
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           
  1816                           ;psect for function _i2c_Start
  1817  01C3                     _i2c_Start:	
  1818                           
  1819                           ;main.c: 204: i2c_idleCheck(0x5) ;
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _i2c_Start: [wreg+status,2+status,0+pclath+cstack]
  1823  01C3  3005               	movlw	5
  1824  01C4  3182  2267  3181   	fcall	_i2c_idleCheck
  1825                           
  1826                           ;main.c: 205: SSP1CON2bits.SEN = 1 ;
  1827  01C7  0024               	movlb	4	; select bank4
  1828  01C8  1416               	bsf	22,0	;volatile
  1829                           
  1830                           ;main.c: 207: i2c_idleCheck(0x5) ;
  1831  01C9  3005               	movlw	5
  1832  01CA  3182  2267  3181   	fcall	_i2c_idleCheck
  1833                           
  1834                           ;main.c: 208: AckCheck = 1 ;
  1835  01CD  3001               	movlw	1
  1836  01CE  00FA               	movwf	_AckCheck
  1837  01CF  3000               	movlw	0
  1838  01D0  00FB               	movwf	_AckCheck+1
  1839                           
  1840                           ;main.c: 209: SSPBUF = (char)((adrs<<1)+rw) ;
  1841  01D1  3574               	lslf	i2c_Start@adrs,w
  1842  01D2  0776               	addwf	i2c_Start@rw,w
  1843  01D3  0024               	movlb	4	; select bank4
  1844  01D4  0091               	movwf	17	;volatile
  1845  01D5                     l902:	
  1846                           ;main.c: 210: while (AckCheck) ;
  1847                           
  1848  01D5  087A               	movf	_AckCheck,w
  1849  01D6  047B               	iorwf	_AckCheck+1,w
  1850  01D7  1D03               	btfss	3,2
  1851  01D8  29D5               	goto	l902
  1852                           
  1853                           ;main.c: 211: return SSPCON2bits.ACKSTAT ;
  1854  01D9  0024               	movlb	4	; select bank4
  1855  01DA  0E16               	swapf	22,w	;volatile
  1856  01DB  0C89               	rrf	9,f
  1857  01DC  0C89               	rrf	9,f
  1858  01DD  3901               	andlw	1
  1859  01DE  00F8               	movwf	??_i2c_Start
  1860  01DF  01F9               	clrf	??_i2c_Start+1
  1861  01E0  0878               	movf	??_i2c_Start,w
  1862  01E1  00F4               	movwf	?_i2c_Start
  1863  01E2  0879               	movf	??_i2c_Start+1,w
  1864  01E3  00F5               	movwf	?_i2c_Start+1
  1865  01E4  0008               	return
  1866  01E5                     __end_of_i2c_Start:	
  1867                           
  1868                           	psect	text13
  1869  0267                     __ptext13:	
  1870 ;; *************** function _i2c_idleCheck *****************
  1871 ;; Defined at:
  1872 ;;		line 197 in file "main.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  mask            1    wreg     unsigned char 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  mask            1    3[COMMON] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;Total ram usage:        2 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_i2c_Start
  1897 ;;		_i2c_stop
  1898 ;;		_i2c_send
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _i2c_idleCheck
  1904  0267                     _i2c_idleCheck:	
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _i2c_idleCheck: [wreg+status,2+status,0]
  1908                           ;i2c_idleCheck@mask stored from wreg
  1909  0267  00F3               	movwf	i2c_idleCheck@mask
  1910  0268                     l892:	
  1911                           ;main.c: 198: while (( SSP1CON2 & 0x1F ) | (SSP1STAT & mask)) ;
  1912                           
  1913  0268  0873               	movf	i2c_idleCheck@mask,w
  1914  0269  0024               	movlb	4	; select bank4
  1915  026A  0514               	andwf	20,w	;volatile
  1916  026B  00F2               	movwf	??_i2c_idleCheck
  1917  026C  0816               	movf	22,w	;volatile
  1918  026D  391F               	andlw	31
  1919  026E  0472               	iorwf	??_i2c_idleCheck,w
  1920  026F  1903               	btfsc	3,2
  1921  0270  0008               	return
  1922  0271  2A68               	goto	l892
  1923  0272                     __end_of_i2c_idleCheck:	
  1924                           
  1925                           	psect	intentry
  1926  0004                     __pintentry:	
  1927 ;; *************** function _isr_func *****************
  1928 ;; Defined at:
  1929 ;;		line 426 in file "main.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1947 ;;Total ram usage:        2 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    1
  1950 ;; This function calls:
  1951 ;;		_flip_led
  1952 ;; This function is called by:
  1953 ;;		Interrupt level 1
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957  0004                     _isr_func:	
  1958                           
  1959                           ;incstack = 0
  1960  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1961                           
  1962                           ; Regs used in _isr_func: [wreg+status,2+status,0+pclath+cstack]
  1963  0005  3180               	pagesel	$
  1964  0006  0020               	movlb	0	; select bank0
  1965  0007  087F               	movf	127,w
  1966  0008  00F1               	movwf	??_isr_func+1
  1967                           
  1968                           ;main.c: 428: static int tm = 0;
  1969                           ;main.c: 430: INTCONbits.GIE = 0;
  1970  0009  138B               	bcf	11,7	;volatile
  1971                           
  1972                           ;main.c: 432: if(TMR0IF){
  1973  000A  1D0B               	btfss	11,2	;volatile
  1974  000B  2824               	goto	i1l1104
  1975                           
  1976                           ;main.c: 434: if(tm > 10){
  1977  000C  0838               	movf	isr_func@tm+1,w
  1978  000D  3A80               	xorlw	128
  1979  000E  00F0               	movwf	??_isr_func
  1980  000F  3080               	movlw	128
  1981  0010  0270               	subwf	??_isr_func,w
  1982  0011  1D03               	skipz
  1983  0012  2815               	goto	u32_25
  1984  0013  300B               	movlw	11
  1985  0014  0237               	subwf	isr_func@tm,w
  1986  0015                     u32_25:	
  1987  0015  1C03               	skipc
  1988  0016  281E               	goto	i1l1100
  1989                           
  1990                           ;main.c: 435: flip_led();
  1991  0017  3182  225B  3180   	fcall	_flip_led
  1992                           
  1993                           ;main.c: 436: tm = 0;
  1994  001A  0020               	movlb	0	; select bank0
  1995  001B  01B7               	clrf	isr_func@tm
  1996  001C  01B8               	clrf	isr_func@tm+1
  1997                           
  1998                           ;main.c: 437: } else {
  1999  001D  2823               	goto	i1l1102
  2000  001E                     i1l1100:	
  2001                           
  2002                           ;main.c: 438: tm++;
  2003  001E  3001               	movlw	1
  2004  001F  0020               	movlb	0	; select bank0
  2005  0020  07B7               	addwf	isr_func@tm,f
  2006  0021  3000               	movlw	0
  2007  0022  3DB8               	addwfc	isr_func@tm+1,f
  2008  0023                     i1l1102:	
  2009                           
  2010                           ;main.c: 439: }
  2011                           ;main.c: 440: TMR0IF &= 0;
  2012  0023  110B               	bcf	11,2	;volatile
  2013  0024                     i1l1104:	
  2014                           
  2015                           ;main.c: 441: }
  2016                           ;main.c: 443: if(INTCONbits.INTF){
  2017  0024  1C8B               	btfss	11,1	;volatile
  2018  0025  282E               	goto	i1l1114
  2019  0026                     i1l232:	
  2020                           ;main.c: 444: while(TX1STAbits.TRMT != 1);
  2021                           
  2022  0026  0023               	movlb	3	; select bank3
  2023  0027  1C9E               	btfss	30,1	;volatile
  2024  0028  2826               	goto	i1l232
  2025                           
  2026                           ;main.c: 445: TX1REG = 'A';
  2027  0029  3041               	movlw	65
  2028  002A  009A               	movwf	26	;volatile
  2029                           
  2030                           ;main.c: 446: INTCONbits.INTF &= 0;
  2031  002B  108B               	bcf	11,1	;volatile
  2032                           
  2033                           ;main.c: 450: PORTAbits.RA5 = 1;
  2034  002C  0020               	movlb	0	; select bank0
  2035  002D  168C               	bsf	12,5	;volatile
  2036  002E                     i1l1114:	
  2037                           
  2038                           ;main.c: 451: }
  2039                           ;main.c: 453: if(PIR1bits.SSP1IF == 1){
  2040  002E  1D91               	btfss	17,3	;volatile
  2041  002F  2837               	goto	i1l1122
  2042                           
  2043                           ;main.c: 454: if(AckCheck == 1){ AckCheck = 0; }
  2044  0030  037A               	decf	_AckCheck,w
  2045  0031  047B               	iorwf	_AckCheck+1,w
  2046  0032  1D03               	btfss	3,2
  2047  0033  2836               	goto	i1l1120
  2048  0034  01FA               	clrf	_AckCheck
  2049  0035  01FB               	clrf	_AckCheck+1
  2050  0036                     i1l1120:	
  2051                           
  2052                           ;main.c: 455: PIR1bits.SSP1IF = 0;
  2053  0036  1191               	bcf	17,3	;volatile
  2054  0037                     i1l1122:	
  2055                           
  2056                           ;main.c: 456: }
  2057                           ;main.c: 458: if(PIR2bits.BCL1IF == 1){
  2058  0037  1992               	btfsc	18,3	;volatile
  2059                           
  2060                           ;main.c: 459: PIR2bits.BCL1IF = 0;
  2061  0038  1192               	bcf	18,3	;volatile
  2062                           
  2063                           ;main.c: 460: }
  2064                           ;main.c: 462: INTCONbits.GIE = 1;
  2065  0039  178B               	bsf	11,7	;volatile
  2066                           
  2067                           ;main.c: 463: return;
  2068  003A  0871               	movf	??_isr_func+1,w
  2069  003B  00FF               	movwf	127
  2070  003C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2071  003D  0009               	retfie
  2072  003E                     __end_of_isr_func:	
  2073                           
  2074                           	psect	text15
  2075  025B                     __ptext15:	
  2076 ;; *************** function _flip_led *****************
  2077 ;; Defined at:
  2078 ;;		line 354 in file "main.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		status,0
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2096 ;;Total ram usage:        0 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_isr_func
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           
  2106                           ;psect for function _flip_led
  2107  025B                     _flip_led:	
  2108                           
  2109                           ;main.c: 355: PORTAbits.RA5 = !PORTAbits.RA5;
  2110                           
  2111                           ;incstack = 0
  2112                           ; Regs used in _flip_led: [status,0]
  2113  025B  1003               	clrc
  2114  025C  0020               	movlb	0	; select bank0
  2115  025D  1E8C               	btfss	12,5	;volatile
  2116  025E  1403               	setc
  2117  025F  1C03               	btfss	3,0
  2118  0260  2A64               	goto	u26_20
  2119  0261  0020               	movlb	0	; select bank0
  2120  0262  168C               	bsf	12,5	;volatile
  2121  0263  0008               	return
  2122  0264                     u26_20:	
  2123  0264  0020               	movlb	0	; select bank0
  2124  0265  128C               	bcf	12,5	;volatile
  2125  0266  0008               	return
  2126  0267                     __end_of_flip_led:	
  2127  007E                     btemp	set	126	;btemp
  2128  007E                     int$flags	set	126
  2129  007E                     wtemp0	set	126


Data Sizes:
    Strings     25
    Constant    0
    Data        4
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     17      29
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    LCD_Puts@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[12]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _LCD_Putc->_i2c_Start
    _command->_i2c_Start
    _i2c_stop->_i2c_idleCheck
    _i2c_send->_i2c_idleCheck
    _i2c_Start->_i2c_idleCheck

Critical Paths under _isr_func in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_SetCursor
    _LCD_SetCursor->_command
    _LCD_Puts->_LCD_Putc
    _LCD_Init->_LCD_Clear
    _LCD_Clear->_command

Critical Paths under _isr_func in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_func in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_func in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_func in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_func in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_func in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_func in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_func in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr_func in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr_func in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr_func in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr_func in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr_func in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     2      4    2711
                                             11 BANK0      6     2      4
                          _LCD_Clear
                           _LCD_Init
                           _LCD_Puts
                      _LCD_SetCursor
                          _setup_i2c
                          _setup_irq
                          _setup_tmr
 ---------------------------------------------------------------------------------
 (1) _setup_tmr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_irq                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_i2c                                            1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SetCursor                                        8     4      4     757
                                              3 BANK0      8     4      4
                            _command
 ---------------------------------------------------------------------------------
 (1) _LCD_Puts                                             5     3      2     652
                                              3 BANK0      3     1      2
                           _LCD_Putc
 ---------------------------------------------------------------------------------
 (2) _LCD_Putc                                             3     3      0     433
                                              0 BANK0      3     3      0
                          _i2c_Start
                           _i2c_send
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0     866
                                              4 BANK0      1     1      0
                          _LCD_Clear
                            _command
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0     433
                                              3 BANK0      1     1      0
                            _command
 ---------------------------------------------------------------------------------
 (2) _command                                              3     3      0     433
                                              0 BANK0      3     3      0
                          _i2c_Start
                           _i2c_send
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0      22
                      _i2c_idleCheck
 ---------------------------------------------------------------------------------
 (3) _i2c_send                                             1     1      0      44
                                              4 COMMON     1     1      0
                      _i2c_idleCheck
 ---------------------------------------------------------------------------------
 (3) _i2c_Start                                            6     2      4     322
                                              4 COMMON     6     2      4
                      _i2c_idleCheck
 ---------------------------------------------------------------------------------
 (4) _i2c_idleCheck                                        2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr_func                                             2     2      0       0
                                              0 COMMON     2     2      0
                           _flip_led
 ---------------------------------------------------------------------------------
 (7) _flip_led                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _command
       _i2c_Start
         _i2c_idleCheck
       _i2c_send
         _i2c_idleCheck
       _i2c_stop
         _i2c_idleCheck
   _LCD_Init
     _LCD_Clear
       _command
         _i2c_Start
           _i2c_idleCheck
         _i2c_send
           _i2c_idleCheck
         _i2c_stop
           _i2c_idleCheck
     _command
       _i2c_Start
         _i2c_idleCheck
       _i2c_send
         _i2c_idleCheck
       _i2c_stop
         _i2c_idleCheck
   _LCD_Puts
     _LCD_Putc
       _i2c_Start
         _i2c_idleCheck
       _i2c_send
         _i2c_idleCheck
       _i2c_stop
         _i2c_idleCheck
   _LCD_SetCursor
     _command
       _i2c_Start
         _i2c_idleCheck
       _i2c_send
         _i2c_idleCheck
       _i2c_stop
         _i2c_idleCheck
   _setup_i2c
   _setup_irq
   _setup_tmr

 _isr_func (ROOT)
   _flip_led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      1D       5       36.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      29      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      29      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 19 18:33:30 2018

             __CFG_CP$OFF 0000             _i2c_idleCheck 0267             _LCD_SetCursor 01FC  
             __CFG_LVP$ON 0000                       l149 0152                       l191 0171  
                     l179 0197                       l902 01D5                       l918 021B  
                     l892 0268                       _PR2 001B                       u407 0175  
                     u417 0065                       u507 00DA                       u427 0072  
                     u517 00E7                       u437 007F                       u527 023C  
                     u447 008C                       u537 019B                       u457 0099  
                     u467 00A6                       u477 00B3                       u397 01A2  
                     u487 00C0                       u497 00CD              __CFG_BORV$HI 0000  
                     wreg 0009              _BAUD1CONbits 019F                      l1168 01E5  
                    STR_1 0242                      STR_2 024F                      _TMR0 0015  
                    _TMR2 001A                      _WPUA 020C               i2c_Start@rw 0076  
              i2c_send@dt 0074              __CFG_WRT$OFF 0000                      _main 00EF  
      __size_of_LCD_Clear 000E                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      btemp 007E                      start 003E  
           __CFG_IESO$OFF 0000            ?_i2c_idleCheck 0070          __end_of_LCD_Init 00EF  
        __end_of_LCD_Putc 0179          __end_of_LCD_Puts 01FC            ?_LCD_SetCursor 0023  
                   ?_main 002B               LCD_Putc@ans 0020             __CFG_WDTE$OFF 0000  
                   _T2CON 001C                     i1l232 0026                     u32_25 0015  
                   u26_20 0264                     _PORTA 000C                     _PORTC 000E  
                   _TRISA 008C                     _TRISC 008E             __CFG_PWRTE$ON 0000  
          __CFG_FCMEN$OFF 0000           __end_of_command 019F            __CFG_BOREN$OFF 0000  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 0040              __end_of_main 0153          __end_of_i2c_send 0222  
        __end_of_i2c_stop 0280            __CFG_LPBOR$OFF 0000                    ??_main 007A  
       __end_of_LCD_Clear 0242            __CFG_PLLEN$OFF 0000                    _ADCON0 009D  
                  _ADCON1 009E                    _ADRESH 009C                    _ADRESL 009B  
                  _CCPR1L 0291            __CFG_ZCDDIS$ON 0000                    _ANSELA 018C  
                  _ANSELC 018E                    _RC0PPS 0EA0                    _RC1PPS 0EA1  
      __size_of_i2c_Start 0022                    _RC2PPS 0EA2                    i1l1100 001E  
                  i1l1102 0023                    i1l1120 0036                    i1l1104 0024  
                  i1l1122 0037                    i1l1114 002E                    _RC4PPS 0EA4  
                  _INTCON 000B                    _INTPPS 0E10                    _OSCCON 0099  
                  _TMR0IF 005A                    _TMR2ON 00E2                    _TX1REG 019A  
                  _TX1STA 019E                    _SSPBUF 0211             i2c_Start@adrs 0074  
        __end_of_flip_led 0267           ??_i2c_idleCheck 0072            __CFG_STVREN$ON 0000  
         ??_LCD_SetCursor 007A          __end_of_isr_func 003E                    main@xd 0031  
                  main@yd 0034                 ??_command 007A   __end_of__initialization 0059  
               ?_LCD_Init 0070                 ?_LCD_Putc 0070                 ?_LCD_Puts 0023  
          __pcstackCOMMON 0070                 LCD_Putc@c 0022              __pidataBANK0 0280  
               LCD_Puts@s 0023         __end_of_i2c_Start 01E5                __pbssBANK0 0031  
               ?_i2c_send 0070                 ?_i2c_stop 0070                ??_LCD_Init 0024  
              ??_LCD_Putc 007A                ??_LCD_Puts 0025                __pmaintext 00EF  
              __pintentry 0004                   _CCP1CON 0293        __size_of_setup_i2c 0024  
                 _SP1BRGH 019C                   _SP1BRGL 019B        __size_of_setup_irq 0008  
      __size_of_setup_tmr 0012                   _PWM3DCH 0618                   _PWM3DCL 0617  
                 _SSP1ADD 0212                   _SSP1BUF 0211                 ?_flip_led 0070  
              ??_i2c_send 0074                ??_i2c_stop 0074                 ?_isr_func 0070  
LCD_SetCursor@row_offsets 0027                   __ptext1 0222                   __ptext2 0272  
                 __ptext3 019F                   __ptext4 01FC                   __ptext5 01E5  
                 __ptext6 0153                   __ptext7 005D                   __ptext8 0234  
                 __ptext9 0179                   _command 0179                 _LCD_Clear 0234  
                 main@num 002F                ??_flip_led 0070      end_of_initialization 0059  
        LCD_SetCursor@col 0023          LCD_SetCursor@row 0025                ??_isr_func 0070  
       __end_of_setup_i2c 01C3         __end_of_setup_irq 027A         __end_of_setup_tmr 0234  
               _PORTAbits 000C          __CFG_FOSC$INTOSC 0000                 _TRISAbits 008C  
               _TRISCbits 008E                ?_LCD_Clear 0070                command@ans 0020  
       __size_of_LCD_Init 0092         __size_of_LCD_Putc 0026         __size_of_LCD_Puts 0017  
   __end_of_i2c_idleCheck 0272     __end_of_LCD_SetCursor 020F                 _i2c_Start 01C3  
     start_initialization 0040         __size_of_i2c_send 0013         __size_of_i2c_stop 0006  
             __pdataBANK0 0039                ?_i2c_Start 0074               __pbssCOMMON 007A  
               ___latbits 0002             __pcstackBANK0 0020               ??_LCD_Clear 0023  
       __size_of_flip_led 000C                isr_func@tm 0037         __size_of_isr_func 003A  
        __CFG_PPS1WAY$OFF 0000                  _DAC1CON0 0118                  _DAC1CON1 0119  
                ?_command 0070                  _BAUD1CON 019F                  _LCD_Init 005D  
                _LCD_Putc 0153                  _LCD_Puts 01E5                  _PIE1bits 0091  
                _PIE2bits 0092                  _PIR1bits 0011                  _PIR2bits 0012  
                _GO_nDONE 04E9                  _SSP1CON1 0215                  _SSP1CON2 0216  
                _SSP1STAT 0214                 _setup_i2c 019F                 _setup_irq 0272  
                _AckCheck 007A                 _setup_tmr 0222               ??_i2c_Start 0078  
      LCD_SetCursor@F5089 0039                  _i2c_send 020F                  _i2c_stop 027A  
              ?_setup_i2c 0070                ?_setup_irq 0070                ?_setup_tmr 0070  
       i2c_idleCheck@mask 0073                _ANSELAbits 018C                _ANSELCbits 018E  
        __size_of_command 0026                  __ptext10 027A                  __ptext11 020F  
                __ptext12 01C3                  __ptext13 0267                  __ptext15 025B  
            _SSP1CON2bits 0216                  _flip_led 025B             __size_of_main 0064  
                _isr_func 0004                _RC1STAbits 019D                  int$flags 007E  
                command@c 0022                  main@argc 002B                  main@argv 002D  
              _INTCONbits 000B                  intlevel1 0000    __size_of_i2c_idleCheck 000B  
  __size_of_LCD_SetCursor 0013         __CFG_CLKOUTEN$OFF 0000               ??_setup_i2c 0072  
             ??_setup_irq 0072               ??_setup_tmr 0072             __pstringtext1 0242  
           __pstringtext2 024F             __pstringtext3 0000                _OPTION_REG 0095  
             _SSPCON2bits 0216                _TX1STAbits 019E  
