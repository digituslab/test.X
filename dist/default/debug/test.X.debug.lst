

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Feb 11 17:10:46 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1705
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1705 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000E                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011C                     	;# 
   124  018C                     	;# 
   125  018E                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019A                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  019F                     	;# 
   160  020C                     	;# 
   161  020E                     	;# 
   162  0211                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0213                     	;# 
   168  0214                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  028C                     	;# 
   179  028E                     	;# 
   180  0291                     	;# 
   181  0291                     	;# 
   182  0292                     	;# 
   183  0293                     	;# 
   184  0293                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  029A                     	;# 
   190  029E                     	;# 
   191  030C                     	;# 
   192  030E                     	;# 
   193  038C                     	;# 
   194  038E                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  0397                     	;# 
   199  0398                     	;# 
   200  0399                     	;# 
   201  0415                     	;# 
   202  0416                     	;# 
   203  0417                     	;# 
   204  041C                     	;# 
   205  041D                     	;# 
   206  041E                     	;# 
   207  0511                     	;# 
   208  0515                     	;# 
   209  0617                     	;# 
   210  0618                     	;# 
   211  0619                     	;# 
   212  0619                     	;# 
   213  061A                     	;# 
   214  061B                     	;# 
   215  061C                     	;# 
   216  061C                     	;# 
   217  0691                     	;# 
   218  0692                     	;# 
   219  0693                     	;# 
   220  0694                     	;# 
   221  0695                     	;# 
   222  0696                     	;# 
   223  0697                     	;# 
   224  0698                     	;# 
   225  0699                     	;# 
   226  069A                     	;# 
   227  069B                     	;# 
   228  069C                     	;# 
   229  069D                     	;# 
   230  069E                     	;# 
   231  069F                     	;# 
   232  0E0F                     	;# 
   233  0E10                     	;# 
   234  0E11                     	;# 
   235  0E12                     	;# 
   236  0E13                     	;# 
   237  0E14                     	;# 
   238  0E15                     	;# 
   239  0E17                     	;# 
   240  0E20                     	;# 
   241  0E21                     	;# 
   242  0E22                     	;# 
   243  0E24                     	;# 
   244  0E25                     	;# 
   245  0E28                     	;# 
   246  0E29                     	;# 
   247  0E2A                     	;# 
   248  0E2B                     	;# 
   249  0E90                     	;# 
   250  0E91                     	;# 
   251  0E92                     	;# 
   252  0E94                     	;# 
   253  0E95                     	;# 
   254  0EA0                     	;# 
   255  0EA1                     	;# 
   256  0EA2                     	;# 
   257  0EA3                     	;# 
   258  0EA4                     	;# 
   259  0EA5                     	;# 
   260  0F0F                     	;# 
   261  0F10                     	;# 
   262  0F11                     	;# 
   263  0F12                     	;# 
   264  0F13                     	;# 
   265  0F14                     	;# 
   266  0F15                     	;# 
   267  0F16                     	;# 
   268  0F17                     	;# 
   269  0F18                     	;# 
   270  0F19                     	;# 
   271  0F1A                     	;# 
   272  0F1B                     	;# 
   273  0F1C                     	;# 
   274  0F1D                     	;# 
   275  0F1E                     	;# 
   276  0F1F                     	;# 
   277  0F20                     	;# 
   278  0F21                     	;# 
   279  0F22                     	;# 
   280  0F23                     	;# 
   281  0F24                     	;# 
   282  0F25                     	;# 
   283  0F26                     	;# 
   284  0F27                     	;# 
   285  0F28                     	;# 
   286  0F29                     	;# 
   287  0F2A                     	;# 
   288  0F2B                     	;# 
   289  0F2C                     	;# 
   290  0F2D                     	;# 
   291  0F9E                     	;# 
   292  0FE4                     	;# 
   293  0FE5                     	;# 
   294  0FE6                     	;# 
   295  0FE7                     	;# 
   296  0FE8                     	;# 
   297  0FE9                     	;# 
   298  0FEA                     	;# 
   299  0FEB                     	;# 
   300  0FED                     	;# 
   301  0FEE                     	;# 
   302  0FEF                     	;# 
   303                           
   304                           	psect	stringtext1
   305  0765                     __pstringtext1:	
   306  0765                     sin@coeff_a:	
   307  0765  34F4               	retlw	244
   308  0766  344A               	retlw	74
   309  0767  3448               	retlw	72
   310  0768  3495               	retlw	149
   311  0769  3495               	retlw	149
   312  076A  34C7               	retlw	199
   313  076B  34C1               	retlw	193
   314  076C  34DC               	retlw	220
   315  076D  3445               	retlw	69
   316  076E  34DC               	retlw	220
   317  076F  346D               	retlw	109
   318  0770  34C3               	retlw	195
   319  0771  34B3               	retlw	179
   320  0772  3433               	retlw	51
   321  0773  3440               	retlw	64
   322  0774                     __end_ofsin@coeff_a:	
   323                           
   324                           	psect	stringtext2
   325  0774                     __pstringtext2:	
   326  0774                     sin@coeff_b:	
   327  0774  3434               	retlw	52
   328  0775  3401               	retlw	1
   329  0776  3448               	retlw	72
   330  0777  349D               	retlw	157
   331  0778  34B0               	retlw	176
   332  0779  3445               	retlw	69
   333  077A  3400               	retlw	0
   334  077B  34DA               	retlw	218
   335  077C  3442               	retlw	66
   336  077D  3400               	retlw	0
   337  077E  3480               	retlw	128
   338  077F  343F               	retlw	63
   339  0780                     __end_ofsin@coeff_b:	
   340                           
   341                           	psect	nvBANK1
   342  00A0                     __pnvBANK1:	
   343  00A0                     main@yd:	
   344  00A0                     	ds	3
   345  000B                     _INTCONbits	set	11
   346  0015                     _TMR0	set	21
   347  000B                     _INTCON	set	11
   348  000C                     _PORTAbits	set	12
   349  001B                     _PR2	set	27
   350  001A                     _TMR2	set	26
   351  001C                     _T2CON	set	28
   352  000E                     _PORTC	set	14
   353  000C                     _PORTA	set	12
   354  005A                     _TMR0IF	set	90
   355  00E2                     _TMR2ON	set	226
   356  008C                     _TRISAbits	set	140
   357  008E                     _TRISCbits	set	142
   358  009E                     _ADCON1	set	158
   359  009D                     _ADCON0	set	157
   360  008E                     _TRISC	set	142
   361  008C                     _TRISA	set	140
   362  0095                     _OPTION_REG	set	149
   363  0099                     _OSCCON	set	153
   364  009B                     _ADRESL	set	155
   365  009C                     _ADRESH	set	156
   366  04E9                     _GO_nDONE	set	1257
   367  019F                     _BAUD1CONbits	set	415
   368  019F                     _BAUD1CON	set	415
   369  019C                     _SP1BRGH	set	412
   370  019B                     _SP1BRGL	set	411
   371  019E                     _TX1STA	set	414
   372  019D                     _RC1STAbits	set	413
   373  019E                     _TX1STAbits	set	414
   374  019A                     _TX1REG	set	410
   375  018E                     _ANSELC	set	398
   376  018C                     _ANSELA	set	396
   377  020C                     _WPUA	set	524
   378  0291                     _CCPR1L	set	657
   379  0293                     _CCP1CON	set	659
   380  0617                     _PWM3DCL	set	1559
   381  0618                     _PWM3DCH	set	1560
   382  0E10                     _INTPPS	set	3600
   383  0EA4                     _RC4PPS	set	3748
   384  0EA2                     _RC2PPS	set	3746
   385                           
   386                           ; #config settings
   387  0000                     
   388                           	psect	cinit
   389  0034                     start_initialization:	
   390  0034                     __initialization:	
   391                           
   392                           ; Clear objects allocated to COMMON
   393  0034  01FA               	clrf	__pbssCOMMON& (0+127)
   394  0035  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   395                           
   396                           ; Clear objects allocated to BANK1
   397  0036  0021               	movlb	1	; select bank1
   398  0037  01A3               	clrf	__pbssBANK1& (0+127)
   399  0038  01A4               	clrf	(__pbssBANK1+1)& (0+127)
   400  0039                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  0039                     __end_of__initialization:	
   404  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   405  003A  0020               	movlb	0
   406  003B  3184  2CF3         	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409  007A                     __pbssCOMMON:	
   410  007A                     isr_func@tm:	
   411  007A                     	ds	2
   412                           
   413                           	psect	bssBANK1
   414  00A3                     __pbssBANK1:	
   415  00A3                     _errno:	
   416  00A3                     	ds	2
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:	
   420  0070                     ?_setup_tmr:	
   421  0070                     ?_setup_irq:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_setup_sci:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_flip_led:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ??_flip_led:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_isr_func:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_isr_func:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	2
   442  0072                     ?___ftge:	
   443  0072                     ??_setup_tmr:	
   444                           ; 1 bit 
   445                           
   446  0072                     ??_setup_irq:	
   447                           ; 1 bytes @ 0x2
   448                           
   449  0072                     ??_setup_sci:	
   450                           ; 1 bytes @ 0x2
   451                           
   452  0072                     ?_adconv:	
   453                           ; 1 bytes @ 0x2
   454                           
   455  0072                     ?___wmul:	
   456                           ; 2 bytes @ 0x2
   457                           
   458  0072                     ?___ftpack:	
   459                           ; 2 bytes @ 0x2
   460                           
   461  0072                     ?_frexp:	
   462                           ; 3 bytes @ 0x2
   463                           
   464  0072                     ?___ftneg:	
   465                           ; 3 bytes @ 0x2
   466                           
   467  0072                     ?___fttol:	
   468                           ; 3 bytes @ 0x2
   469                           
   470  0072                     ___wmul@multiplier:	
   471                           ; 4 bytes @ 0x2
   472                           
   473  0072                     ___ftpack@arg:	
   474                           ; 2 bytes @ 0x2
   475                           
   476  0072                     ___ftge@ff1:	
   477                           ; 3 bytes @ 0x2
   478                           
   479  0072                     ___ftneg@f1:	
   480                           ; 3 bytes @ 0x2
   481                           
   482  0072                     ___fttol@f1:	
   483                           ; 3 bytes @ 0x2
   484                           
   485  0072                     frexp@value:	
   486                           ; 3 bytes @ 0x2
   487                           
   488                           
   489                           ; 3 bytes @ 0x2
   490  0072                     	ds	2
   491  0074                     ??_adconv:	
   492  0074                     ___wmul@multiplicand:	
   493                           ; 1 bytes @ 0x4
   494                           
   495                           
   496                           ; 2 bytes @ 0x4
   497  0074                     	ds	1
   498  0075                     ??___ftneg:	
   499  0075                     ___ftpack@exp:	
   500                           ; 1 bytes @ 0x5
   501                           
   502  0075                     frexp@eptr:	
   503                           ; 1 bytes @ 0x5
   504                           
   505  0075                     ___ftge@ff2:	
   506                           ; 1 bytes @ 0x5
   507                           
   508                           
   509                           ; 3 bytes @ 0x5
   510  0075                     	ds	1
   511  0076                     ??_frexp:	
   512  0076                     ??___wmul:	
   513                           ; 1 bytes @ 0x6
   514                           
   515  0076                     ??___fttol:	
   516                           ; 1 bytes @ 0x6
   517                           
   518  0076                     ___ftpack@sign:	
   519                           ; 1 bytes @ 0x6
   520                           
   521  0076                     ___wmul@product:	
   522                           ; 1 bytes @ 0x6
   523                           
   524                           
   525                           ; 2 bytes @ 0x6
   526  0076                     	ds	1
   527  0077                     ??___ftpack:	
   528                           
   529                           ; 1 bytes @ 0x7
   530  0077                     	ds	3
   531  007A                     ??_eval_poly:	
   532  007A                     ??___ftsub:	
   533                           ; 1 bytes @ 0xA
   534                           
   535                           
   536                           	psect	cstackBANK0
   537  0020                     __pcstackBANK0:	
   538                           ; 1 bytes @ 0xA
   539                           
   540  0020                     ??___ftge:	
   541  0020                     ?___ftmul:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0020                     ___fttol@sign1:	
   545                           ; 3 bytes @ 0x0
   546                           
   547  0020                     adconv@temp:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0020                     ___ftmul@f1:	
   551                           ; 2 bytes @ 0x0
   552                           
   553                           
   554                           ; 3 bytes @ 0x0
   555  0020                     	ds	1
   556  0021                     ___fttol@lval:	
   557                           
   558                           ; 4 bytes @ 0x1
   559  0021                     	ds	2
   560  0023                     ___ftmul@f2:	
   561                           
   562                           ; 3 bytes @ 0x3
   563  0023                     	ds	2
   564  0025                     ___fttol@exp1:	
   565                           
   566                           ; 1 bytes @ 0x5
   567  0025                     	ds	1
   568  0026                     ??___ftmul:	
   569  0026                     ?___altoft:	
   570                           ; 1 bytes @ 0x6
   571                           
   572  0026                     ___altoft@c:	
   573                           ; 3 bytes @ 0x6
   574                           
   575                           
   576                           ; 4 bytes @ 0x6
   577  0026                     	ds	4
   578  002A                     ??___altoft:	
   579  002A                     ___ftmul@exp:	
   580                           ; 1 bytes @ 0xA
   581                           
   582                           
   583                           ; 1 bytes @ 0xA
   584  002A                     	ds	1
   585  002B                     ___ftmul@f3_as_product:	
   586                           
   587                           ; 3 bytes @ 0xB
   588  002B                     	ds	1
   589  002C                     ___altoft@exp:	
   590                           
   591                           ; 1 bytes @ 0xC
   592  002C                     	ds	1
   593  002D                     ___altoft@sign:	
   594                           
   595                           ; 1 bytes @ 0xD
   596  002D                     	ds	1
   597  002E                     ___ftmul@cntr:	
   598                           
   599                           ; 1 bytes @ 0xE
   600  002E                     	ds	1
   601  002F                     ___ftmul@sign:	
   602                           
   603                           ; 1 bytes @ 0xF
   604  002F                     	ds	1
   605  0030                     ?___ftadd:	
   606  0030                     ___ftadd@f1:	
   607                           ; 3 bytes @ 0x10
   608                           
   609                           
   610                           ; 3 bytes @ 0x10
   611  0030                     	ds	3
   612  0033                     ___ftadd@f2:	
   613                           
   614                           ; 3 bytes @ 0x13
   615  0033                     	ds	3
   616  0036                     ??___ftadd:	
   617                           
   618                           ; 1 bytes @ 0x16
   619  0036                     	ds	4
   620  003A                     ___ftadd@sign:	
   621                           
   622                           ; 1 bytes @ 0x1A
   623  003A                     	ds	1
   624  003B                     ___ftadd@exp2:	
   625                           
   626                           ; 1 bytes @ 0x1B
   627  003B                     	ds	1
   628  003C                     ___ftadd@exp1:	
   629                           
   630                           ; 1 bytes @ 0x1C
   631  003C                     	ds	1
   632  003D                     ?_floor:	
   633  003D                     ?_eval_poly:	
   634                           ; 3 bytes @ 0x1D
   635                           
   636  003D                     eval_poly@x:	
   637                           ; 3 bytes @ 0x1D
   638                           
   639  003D                     floor@x:	
   640                           ; 3 bytes @ 0x1D
   641                           
   642                           
   643                           ; 3 bytes @ 0x1D
   644  003D                     	ds	3
   645  0040                     ??_floor:	
   646  0040                     eval_poly@d:	
   647                           ; 1 bytes @ 0x20
   648                           
   649                           
   650                           ; 2 bytes @ 0x20
   651  0040                     	ds	1
   652  0041                     floor@i:	
   653                           
   654                           ; 3 bytes @ 0x21
   655  0041                     	ds	1
   656  0042                     eval_poly@n:	
   657                           
   658                           ; 2 bytes @ 0x22
   659  0042                     	ds	2
   660  0044                     floor@expon:	
   661  0044                     eval_poly@res:	
   662                           ; 2 bytes @ 0x24
   663                           
   664                           
   665                           ; 3 bytes @ 0x24
   666  0044                     	ds	2
   667  0046                     ?___ftsub:	
   668  0046                     ___ftsub@f2:	
   669                           ; 3 bytes @ 0x26
   670                           
   671                           
   672                           ; 3 bytes @ 0x26
   673  0046                     	ds	1
   674  0047                     ?___ftdiv:	
   675  0047                     ___ftdiv@f2:	
   676                           ; 3 bytes @ 0x27
   677                           
   678                           
   679                           ; 3 bytes @ 0x27
   680  0047                     	ds	2
   681  0049                     ___ftsub@f1:	
   682                           
   683                           ; 3 bytes @ 0x29
   684  0049                     	ds	1
   685  004A                     ___ftdiv@f1:	
   686                           
   687                           ; 3 bytes @ 0x2A
   688  004A                     	ds	3
   689  004D                     ??___ftdiv:	
   690                           
   691                           ; 1 bytes @ 0x2D
   692  004D                     	ds	4
   693  0051                     ___ftdiv@cntr:	
   694                           
   695                           ; 1 bytes @ 0x31
   696  0051                     	ds	1
   697  0052                     ___ftdiv@f3:	
   698                           
   699                           ; 3 bytes @ 0x32
   700  0052                     	ds	3
   701  0055                     ___ftdiv@exp:	
   702                           
   703                           ; 1 bytes @ 0x35
   704  0055                     	ds	1
   705  0056                     ___ftdiv@sign:	
   706                           
   707                           ; 1 bytes @ 0x36
   708  0056                     	ds	1
   709  0057                     ?_sin:	
   710  0057                     sin@f:	
   711                           ; 3 bytes @ 0x37
   712                           
   713                           
   714                           ; 3 bytes @ 0x37
   715  0057                     	ds	3
   716  005A                     ??_sin:	
   717                           
   718                           ; 1 bytes @ 0x3A
   719  005A                     	ds	1
   720  005B                     sin@y:	
   721                           
   722                           ; 3 bytes @ 0x3B
   723  005B                     	ds	3
   724  005E                     _sin$644:	
   725                           
   726                           ; 3 bytes @ 0x3E
   727  005E                     	ds	3
   728  0061                     sin@x2:	
   729                           
   730                           ; 3 bytes @ 0x41
   731  0061                     	ds	3
   732  0064                     sin@sgn:	
   733                           
   734                           ; 1 bytes @ 0x44
   735  0064                     	ds	1
   736  0065                     ?_main:	
   737  0065                     main@argc:	
   738                           ; 2 bytes @ 0x45
   739                           
   740                           
   741                           ; 2 bytes @ 0x45
   742  0065                     	ds	2
   743  0067                     main@argv:	
   744                           
   745                           ; 2 bytes @ 0x47
   746  0067                     	ds	2
   747  0069                     ??_main:	
   748                           
   749                           ; 1 bytes @ 0x49
   750  0069                     	ds	2
   751  006B                     _main$643:	
   752                           
   753                           ; 3 bytes @ 0x4B
   754  006B                     	ds	3
   755  006E                     main@num:	
   756                           
   757                           ; 2 bytes @ 0x4E
   758  006E                     	ds	2
   759                           
   760                           	psect	maintext
   761  04F3                     __pmaintext:	
   762 ;;
   763 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   764 ;;
   765 ;; *************** function _main *****************
   766 ;; Defined at:
   767 ;;		line 64 in file "main.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  argc            2   69[BANK0 ] int 
   770 ;;  argv            2   71[BANK0 ] PTR PTR unsigned char 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  num             2   78[BANK0 ] unsigned int 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  2   69[BANK0 ] int 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B1F/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   783 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   784 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   785 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
   786 ;;Total ram usage:       11 bytes
   787 ;; Hardware stack levels required when called:    6
   788 ;; This function calls:
   789 ;;		___ftmul
   790 ;;		_adconv
   791 ;;		_setup_irq
   792 ;;		_setup_sci
   793 ;;		_setup_tmr
   794 ;;		_sin
   795 ;; This function is called by:
   796 ;;		Startup code after reset
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _main
   802  04F3                     _main:	
   803                           
   804                           ;main.c: 65: unsigned int num;
   805                           ;main.c: 66: static float yd = 0;
   806                           ;main.c: 69: OSCCON = 0b01110010 ;
   807                           
   808                           ;incstack = 0
   809                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   810  04F3  3072               	movlw	114
   811  04F4  0021               	movlb	1	; select bank1
   812  04F5  0099               	movwf	25	;volatile
   813                           
   814                           ;main.c: 70: OPTION_REG = 0b00000000 ;
   815  04F6  0195               	clrf	21	;volatile
   816                           
   817                           ;main.c: 71: ANSELA = 0b00000000 ;
   818  04F7  0023               	movlb	3	; select bank3
   819  04F8  018C               	clrf	12	;volatile
   820                           
   821                           ;main.c: 72: ANSELC = 0b10000000 ;
   822  04F9  3080               	movlw	128
   823  04FA  008E               	movwf	14	;volatile
   824                           
   825                           ;main.c: 73: TRISA = 0b00100000 ;
   826  04FB  3020               	movlw	32
   827  04FC  0021               	movlb	1	; select bank1
   828  04FD  008C               	movwf	12	;volatile
   829                           
   830                           ;main.c: 74: TRISC = 0b00001000 ;
   831  04FE  3008               	movlw	8
   832  04FF  008E               	movwf	14	;volatile
   833                           
   834                           ;main.c: 75: WPUA = 0b00100000 ;
   835  0500  3020               	movlw	32
   836  0501  0024               	movlb	4	; select bank4
   837  0502  008C               	movwf	12	;volatile
   838                           
   839                           ;main.c: 76: PORTA = 0b00000000 ;
   840  0503  0020               	movlb	0	; select bank0
   841  0504  018C               	clrf	12	;volatile
   842                           
   843                           ;main.c: 77: PORTC = 0b00000000 ;
   844  0505  018E               	clrf	14	;volatile
   845                           
   846                           ;main.c: 79: ADCON0 = 0b00011101;
   847  0506  301D               	movlw	29
   848  0507  0021               	movlb	1	; select bank1
   849  0508  009D               	movwf	29	;volatile
   850                           
   851                           ;main.c: 80: ADCON1 = 0b10010000;
   852  0509  3090               	movlw	144
   853  050A  009E               	movwf	30	;volatile
   854                           
   855                           ;main.c: 84: RC2PPS = 0b00001100 ;
   856  050B  300C               	movlw	12
   857  050C  003D               	movlb	29	; select bank29
   858  050D  00A2               	movwf	34	;volatile
   859                           
   860                           ;main.c: 85: CCP1CON = 0b00001100;
   861  050E  300C               	movlw	12
   862  050F  0025               	movlb	5	; select bank5
   863  0510  0093               	movwf	19	;volatile
   864                           
   865                           ;main.c: 86: CCPR1L = 10;
   866  0511  300A               	movlw	10
   867  0512  0091               	movwf	17	;volatile
   868                           
   869                           ;main.c: 106: PWM3DCH = 64 ;
   870  0513  3040               	movlw	64
   871  0514  002C               	movlb	12	; select bank12
   872  0515  0098               	movwf	24	;volatile
   873                           
   874                           ;main.c: 107: PWM3DCL = 0 ;
   875  0516  0197               	clrf	23	;volatile
   876                           
   877                           ;main.c: 109: T2CON = 0b00000010 ;
   878  0517  3002               	movlw	2
   879  0518  0020               	movlb	0	; select bank0
   880  0519  009C               	movwf	28	;volatile
   881                           
   882                           ;main.c: 110: TMR2 = 0 ;
   883  051A  019A               	clrf	26	;volatile
   884                           
   885                           ;main.c: 111: PR2 = 153 ;
   886  051B  3099               	movlw	153
   887  051C  009B               	movwf	27	;volatile
   888                           
   889                           ;main.c: 112: TMR2ON = 1 ;
   890  051D  151C               	bsf	28,2	;volatile
   891                           
   892                           ;main.c: 114: num = 255;
   893  051E  30FF               	movlw	255
   894  051F  00EE               	movwf	main@num
   895  0520  3000               	movlw	0
   896  0521  00EF               	movwf	main@num+1
   897                           
   898                           ;main.c: 116: setup_tmr();
   899  0522  3187  2753  3184   	fcall	_setup_tmr
   900                           
   901                           ;main.c: 117: setup_irq();
   902  0525  3187  2794  3184   	fcall	_setup_irq
   903                           
   904                           ;main.c: 118: setup_sci();
   905  0528  3187  273F  3184   	fcall	_setup_sci
   906  052B                     l1687:	
   907                           ;main.c: 120: while(1) {
   908                           
   909                           
   910                           ;main.c: 121: num = adconv() ;
   911  052B  3186  26E3  3184   	fcall	_adconv
   912  052E  0873               	movf	?_adconv+1,w
   913  052F  0020               	movlb	0	; select bank0
   914  0530  00EF               	movwf	main@num+1
   915  0531  0872               	movf	?_adconv,w
   916  0532  00EE               	movwf	main@num
   917                           
   918                           ;main.c: 122: CCPR1L = num/4 ;
   919  0533  086F               	movf	main@num+1,w
   920  0534  00EA               	movwf	??_main+1
   921  0535  086E               	movf	main@num,w
   922  0536  00E9               	movwf	??_main
   923  0537  36EA               	lsrf	??_main+1,f
   924  0538  0CE9               	rrf	??_main,f
   925  0539  36EA               	lsrf	??_main+1,f
   926  053A  0CE9               	rrf	??_main,f
   927  053B  0869               	movf	??_main,w
   928  053C  0025               	movlb	5	; select bank5
   929  053D  0091               	movwf	17	;volatile
   930                           
   931                           ;main.c: 123: yd = sin((3.141592/180.0)*30.0)*1.0;
   932  053E  300B               	movlw	11
   933  053F  0020               	movlb	0	; select bank0
   934  0540  00D7               	movwf	sin@f
   935  0541  3006               	movlw	6
   936  0542  00D8               	movwf	sin@f+1
   937  0543  303F               	movlw	63
   938  0544  00D9               	movwf	sin@f+2
   939  0545  3180  203D  3184   	fcall	_sin
   940  0548  0020               	movlb	0	; select bank0
   941  0549  0857               	movf	?_sin,w
   942  054A  00EB               	movwf	_main$643
   943  054B  0858               	movf	?_sin+1,w
   944  054C  00EC               	movwf	_main$643+1
   945  054D  0859               	movf	?_sin+2,w
   946  054E  00ED               	movwf	_main$643+2
   947                           
   948                           ;main.c: 123: yd = sin((3.141592/180.0)*30.0)*1.0;
   949  054F  3000               	movlw	0
   950  0550  00A0               	movwf	___ftmul@f1
   951  0551  3080               	movlw	128
   952  0552  00A1               	movwf	___ftmul@f1+1
   953  0553  303F               	movlw	63
   954  0554  00A2               	movwf	___ftmul@f1+2
   955  0555  086B               	movf	_main$643,w
   956  0556  00A3               	movwf	___ftmul@f2
   957  0557  086C               	movf	_main$643+1,w
   958  0558  00A4               	movwf	___ftmul@f2+1
   959  0559  086D               	movf	_main$643+2,w
   960  055A  00A5               	movwf	___ftmul@f2+2
   961  055B  3182  228A  3184   	fcall	___ftmul
   962  055E  0020               	movlb	0	; select bank0
   963  055F  0820               	movf	?___ftmul,w
   964  0560  0021               	movlb	1	; select bank1
   965  0561  00A0               	movwf	main@yd^(0+128)
   966  0562  0020               	movlb	0	; select bank0
   967  0563  0821               	movf	?___ftmul+1,w
   968  0564  0021               	movlb	1	; select bank1
   969  0565  00A1               	movwf	(main@yd+1)^(0+128)
   970  0566  0020               	movlb	0	; select bank0
   971  0567  0822               	movf	?___ftmul+2,w
   972  0568  0021               	movlb	1	; select bank1
   973  0569  00A2               	movwf	(main@yd+2)^(0+128)
   974                           
   975                           ;main.c: 129: TX1REG = 0x55;
   976  056A  3055               	movlw	85
   977  056B  0023               	movlb	3	; select bank3
   978  056C  009A               	movwf	26	;volatile
   979  056D                     l102:	
   980                           ;main.c: 130: while(TX1STAbits.TRMT != 1);
   981                           
   982  056D  189E               	btfsc	30,1	;volatile
   983  056E  2D2B               	goto	l1687
   984  056F  2D6D               	goto	l102
   985  0570                     __end_of_main:	
   986                           ;main.c: 132: }
   987                           ;main.c: 133: return (0);
   988                           ;	Return value of _main is never used
   989                           
   990                           
   991                           	psect	text1
   992  003D                     __ptext1:	
   993 ;; *************** function _sin *****************
   994 ;; Defined at:
   995 ;;		line 13 in file "/Applications/microchip/xc8/v1.45/sources/common/sin.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  f               3   55[BANK0 ] int 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  x2              3   65[BANK0 ] int 
  1000 ;;  y               3   59[BANK0 ] int 
  1001 ;;  sgn             1   68[BANK0 ] unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  3   55[BANK0 ] unsigned char 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1011 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1012 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1014 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1015 ;;Total ram usage:       14 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    5
  1018 ;; This function calls:
  1019 ;;		___ftadd
  1020 ;;		___ftdiv
  1021 ;;		___ftge
  1022 ;;		___ftmul
  1023 ;;		___ftneg
  1024 ;;		___ftsub
  1025 ;;		_eval_poly
  1026 ;;		_floor
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _sin
  1034  003D                     _sin:	
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _sin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1038  003D  0020               	movlb	0	; select bank0
  1039  003E  01E4               	clrf	sin@sgn
  1040  003F  0857               	movf	sin@f,w
  1041  0040  00F2               	movwf	___ftge@ff1
  1042  0041  0858               	movf	sin@f+1,w
  1043  0042  00F3               	movwf	___ftge@ff1+1
  1044  0043  0859               	movf	sin@f+2,w
  1045  0044  00F4               	movwf	___ftge@ff1+2
  1046  0045  3000               	movlw	0
  1047  0046  00F5               	movwf	___ftge@ff2
  1048  0047  3000               	movlw	0
  1049  0048  00F6               	movwf	___ftge@ff2+1
  1050  0049  3000               	movlw	0
  1051  004A  00F7               	movwf	___ftge@ff2+2
  1052  004B  3186  2634  3180   	fcall	___ftge
  1053  004E  1803               	btfsc	3,0
  1054  004F  2863               	goto	l1635
  1055  0050  0020               	movlb	0	; select bank0
  1056  0051  0857               	movf	sin@f,w
  1057  0052  00F2               	movwf	___ftneg@f1
  1058  0053  0858               	movf	sin@f+1,w
  1059  0054  00F3               	movwf	___ftneg@f1+1
  1060  0055  0859               	movf	sin@f+2,w
  1061  0056  00F4               	movwf	___ftneg@f1+2
  1062  0057  3187  278C  3180   	fcall	___ftneg
  1063  005A  0872               	movf	?___ftneg,w
  1064  005B  0020               	movlb	0	; select bank0
  1065  005C  00D7               	movwf	sin@f
  1066  005D  0873               	movf	?___ftneg+1,w
  1067  005E  00D8               	movwf	sin@f+1
  1068  005F  0874               	movf	?___ftneg+2,w
  1069  0060  00D9               	movwf	sin@f+2
  1070  0061  01E4               	clrf	sin@sgn
  1071  0062  0AE4               	incf	sin@sgn,f
  1072  0063                     l1635:	
  1073  0063  30FA               	movlw	250
  1074  0064  0020               	movlb	0	; select bank0
  1075  0065  00A0               	movwf	___ftmul@f1
  1076  0066  3022               	movlw	34
  1077  0067  00A1               	movwf	___ftmul@f1+1
  1078  0068  303E               	movlw	62
  1079  0069  00A2               	movwf	___ftmul@f1+2
  1080  006A  0857               	movf	sin@f,w
  1081  006B  00A3               	movwf	___ftmul@f2
  1082  006C  0858               	movf	sin@f+1,w
  1083  006D  00A4               	movwf	___ftmul@f2+1
  1084  006E  0859               	movf	sin@f+2,w
  1085  006F  00A5               	movwf	___ftmul@f2+2
  1086  0070  3182  228A  3180   	fcall	___ftmul
  1087  0073  0020               	movlb	0	; select bank0
  1088  0074  0820               	movf	?___ftmul,w
  1089  0075  00D7               	movwf	sin@f
  1090  0076  0821               	movf	?___ftmul+1,w
  1091  0077  00D8               	movwf	sin@f+1
  1092  0078  0822               	movf	?___ftmul+2,w
  1093  0079  00D9               	movwf	sin@f+2
  1094  007A  0857               	movf	sin@f,w
  1095  007B  00BD               	movwf	floor@x
  1096  007C  0858               	movf	sin@f+1,w
  1097  007D  00BE               	movwf	floor@x+1
  1098  007E  0859               	movf	sin@f+2,w
  1099  007F  00BF               	movwf	floor@x+2
  1100  0080  3184  246E  3180   	fcall	_floor
  1101  0083  0020               	movlb	0	; select bank0
  1102  0084  083D               	movf	?_floor,w
  1103  0085  00C6               	movwf	___ftsub@f2
  1104  0086  083E               	movf	?_floor+1,w
  1105  0087  00C7               	movwf	___ftsub@f2+1
  1106  0088  083F               	movf	?_floor+2,w
  1107  0089  00C8               	movwf	___ftsub@f2+2
  1108  008A  0857               	movf	sin@f,w
  1109  008B  00C9               	movwf	___ftsub@f1
  1110  008C  0858               	movf	sin@f+1,w
  1111  008D  00CA               	movwf	___ftsub@f1+1
  1112  008E  0859               	movf	sin@f+2,w
  1113  008F  00CB               	movwf	___ftsub@f1+2
  1114  0090  3187  2706  3180   	fcall	___ftsub
  1115  0093  0020               	movlb	0	; select bank0
  1116  0094  0846               	movf	?___ftsub,w
  1117  0095  00D7               	movwf	sin@f
  1118  0096  0847               	movf	?___ftsub+1,w
  1119  0097  00D8               	movwf	sin@f+1
  1120  0098  0848               	movf	?___ftsub+2,w
  1121  0099  00D9               	movwf	sin@f+2
  1122  009A  3000               	movlw	0
  1123  009B  00A0               	movwf	___ftmul@f1
  1124  009C  3080               	movlw	128
  1125  009D  00A1               	movwf	___ftmul@f1+1
  1126  009E  3040               	movlw	64
  1127  009F  00A2               	movwf	___ftmul@f1+2
  1128  00A0  0857               	movf	sin@f,w
  1129  00A1  00A3               	movwf	___ftmul@f2
  1130  00A2  0858               	movf	sin@f+1,w
  1131  00A3  00A4               	movwf	___ftmul@f2+1
  1132  00A4  0859               	movf	sin@f+2,w
  1133  00A5  00A5               	movwf	___ftmul@f2+2
  1134  00A6  3182  228A  3180   	fcall	___ftmul
  1135  00A9  0020               	movlb	0	; select bank0
  1136  00AA  0820               	movf	?___ftmul,w
  1137  00AB  00D7               	movwf	sin@f
  1138  00AC  0821               	movf	?___ftmul+1,w
  1139  00AD  00D8               	movwf	sin@f+1
  1140  00AE  0822               	movf	?___ftmul+2,w
  1141  00AF  00D9               	movwf	sin@f+2
  1142  00B0  3000               	movlw	0
  1143  00B1  00F2               	movwf	___ftge@ff1
  1144  00B2  3000               	movlw	0
  1145  00B3  00F3               	movwf	___ftge@ff1+1
  1146  00B4  3040               	movlw	64
  1147  00B5  00F4               	movwf	___ftge@ff1+2
  1148  00B6  0857               	movf	sin@f,w
  1149  00B7  00F5               	movwf	___ftge@ff2
  1150  00B8  0858               	movf	sin@f+1,w
  1151  00B9  00F6               	movwf	___ftge@ff2+1
  1152  00BA  0859               	movf	sin@f+2,w
  1153  00BB  00F7               	movwf	___ftge@ff2+2
  1154  00BC  3186  2634  3180   	fcall	___ftge
  1155  00BF  1803               	btfsc	3,0
  1156  00C0  28E1               	goto	l1647
  1157  00C1  3000               	movlw	0
  1158  00C2  0020               	movlb	0	; select bank0
  1159  00C3  00C6               	movwf	___ftsub@f2
  1160  00C4  3000               	movlw	0
  1161  00C5  00C7               	movwf	___ftsub@f2+1
  1162  00C6  3040               	movlw	64
  1163  00C7  00C8               	movwf	___ftsub@f2+2
  1164  00C8  0857               	movf	sin@f,w
  1165  00C9  00C9               	movwf	___ftsub@f1
  1166  00CA  0858               	movf	sin@f+1,w
  1167  00CB  00CA               	movwf	___ftsub@f1+1
  1168  00CC  0859               	movf	sin@f+2,w
  1169  00CD  00CB               	movwf	___ftsub@f1+2
  1170  00CE  3187  2706  3180   	fcall	___ftsub
  1171  00D1  0020               	movlb	0	; select bank0
  1172  00D2  0846               	movf	?___ftsub,w
  1173  00D3  00D7               	movwf	sin@f
  1174  00D4  0847               	movf	?___ftsub+1,w
  1175  00D5  00D8               	movwf	sin@f+1
  1176  00D6  0848               	movf	?___ftsub+2,w
  1177  00D7  00D9               	movwf	sin@f+2
  1178  00D8  0864               	movf	sin@sgn,w
  1179  00D9  1D03               	btfss	3,2
  1180  00DA  28DD               	goto	u2020
  1181  00DB  3001               	movlw	1
  1182  00DC  28DE               	goto	u2030
  1183  00DD                     u2020:	
  1184  00DD  3000               	movlw	0
  1185  00DE                     u2030:	
  1186  00DE  00DA               	movwf	??_sin
  1187  00DF  085A               	movf	??_sin,w
  1188  00E0  00E4               	movwf	sin@sgn
  1189  00E1                     l1647:	
  1190  00E1  3000               	movlw	0
  1191  00E2  00F2               	movwf	___ftge@ff1
  1192  00E3  3080               	movlw	128
  1193  00E4  00F3               	movwf	___ftge@ff1+1
  1194  00E5  303F               	movlw	63
  1195  00E6  00F4               	movwf	___ftge@ff1+2
  1196  00E7  0020               	movlb	0	; select bank0
  1197  00E8  0857               	movf	sin@f,w
  1198  00E9  00F5               	movwf	___ftge@ff2
  1199  00EA  0858               	movf	sin@f+1,w
  1200  00EB  00F6               	movwf	___ftge@ff2+1
  1201  00EC  0859               	movf	sin@f+2,w
  1202  00ED  00F7               	movwf	___ftge@ff2+2
  1203  00EE  3186  2634  3180   	fcall	___ftge
  1204  00F1  1803               	btfsc	3,0
  1205  00F2  2914               	goto	l504
  1206  00F3  3000               	movlw	0
  1207  00F4  0020               	movlb	0	; select bank0
  1208  00F5  00B0               	movwf	___ftadd@f1
  1209  00F6  3000               	movlw	0
  1210  00F7  00B1               	movwf	___ftadd@f1+1
  1211  00F8  3040               	movlw	64
  1212  00F9  00B2               	movwf	___ftadd@f1+2
  1213  00FA  0857               	movf	sin@f,w
  1214  00FB  00F2               	movwf	___ftneg@f1
  1215  00FC  0858               	movf	sin@f+1,w
  1216  00FD  00F3               	movwf	___ftneg@f1+1
  1217  00FE  0859               	movf	sin@f+2,w
  1218  00FF  00F4               	movwf	___ftneg@f1+2
  1219  0100  3187  278C  3180   	fcall	___ftneg
  1220  0103  0872               	movf	?___ftneg,w
  1221  0104  0020               	movlb	0	; select bank0
  1222  0105  00B3               	movwf	___ftadd@f2
  1223  0106  0873               	movf	?___ftneg+1,w
  1224  0107  00B4               	movwf	___ftadd@f2+1
  1225  0108  0874               	movf	?___ftneg+2,w
  1226  0109  00B5               	movwf	___ftadd@f2+2
  1227  010A  3181  2194  3180   	fcall	___ftadd
  1228  010D  0020               	movlb	0	; select bank0
  1229  010E  0830               	movf	?___ftadd,w
  1230  010F  00D7               	movwf	sin@f
  1231  0110  0831               	movf	?___ftadd+1,w
  1232  0111  00D8               	movwf	sin@f+1
  1233  0112  0832               	movf	?___ftadd+2,w
  1234  0113  00D9               	movwf	sin@f+2
  1235  0114                     l504:	
  1236  0114  0020               	movlb	0	; select bank0
  1237  0115  0857               	movf	sin@f,w
  1238  0116  00A0               	movwf	___ftmul@f1
  1239  0117  0858               	movf	sin@f+1,w
  1240  0118  00A1               	movwf	___ftmul@f1+1
  1241  0119  0859               	movf	sin@f+2,w
  1242  011A  00A2               	movwf	___ftmul@f1+2
  1243  011B  0857               	movf	sin@f,w
  1244  011C  00A3               	movwf	___ftmul@f2
  1245  011D  0858               	movf	sin@f+1,w
  1246  011E  00A4               	movwf	___ftmul@f2+1
  1247  011F  0859               	movf	sin@f+2,w
  1248  0120  00A5               	movwf	___ftmul@f2+2
  1249  0121  3182  228A  3180   	fcall	___ftmul
  1250  0124  0020               	movlb	0	; select bank0
  1251  0125  0820               	movf	?___ftmul,w
  1252  0126  00E1               	movwf	sin@x2
  1253  0127  0821               	movf	?___ftmul+1,w
  1254  0128  00E2               	movwf	sin@x2+1
  1255  0129  0822               	movf	?___ftmul+2,w
  1256  012A  00E3               	movwf	sin@x2+2
  1257  012B  0861               	movf	sin@x2,w
  1258  012C  00BD               	movwf	eval_poly@x
  1259  012D  0862               	movf	sin@x2+1,w
  1260  012E  00BE               	movwf	eval_poly@x+1
  1261  012F  0863               	movf	sin@x2+2,w
  1262  0130  00BF               	movwf	eval_poly@x+2
  1263  0131  3074               	movlw	low (sin@coeff_b| (0+32768))
  1264  0132  00C0               	movwf	eval_poly@d
  1265  0133  3087               	movlw	high (sin@coeff_b| (0+32768))
  1266  0134  00C1               	movwf	eval_poly@d+1
  1267  0135  3003               	movlw	3
  1268  0136  00C2               	movwf	eval_poly@n
  1269  0137  3000               	movlw	0
  1270  0138  00C3               	movwf	eval_poly@n+1
  1271  0139  3185  25D4  3180   	fcall	_eval_poly
  1272  013C  0020               	movlb	0	; select bank0
  1273  013D  083D               	movf	?_eval_poly,w
  1274  013E  00DB               	movwf	sin@y
  1275  013F  083E               	movf	?_eval_poly+1,w
  1276  0140  00DC               	movwf	sin@y+1
  1277  0141  083F               	movf	?_eval_poly+2,w
  1278  0142  00DD               	movwf	sin@y+2
  1279  0143  3004               	movlw	4
  1280  0144  00C2               	movwf	eval_poly@n
  1281  0145  3000               	movlw	0
  1282  0146  00C3               	movwf	eval_poly@n+1
  1283  0147  3065               	movlw	low (sin@coeff_a| (0+32768))
  1284  0148  00C0               	movwf	eval_poly@d
  1285  0149  3087               	movlw	high (sin@coeff_a| (0+32768))
  1286  014A  00C1               	movwf	eval_poly@d+1
  1287  014B  0861               	movf	sin@x2,w
  1288  014C  00BD               	movwf	eval_poly@x
  1289  014D  0862               	movf	sin@x2+1,w
  1290  014E  00BE               	movwf	eval_poly@x+1
  1291  014F  0863               	movf	sin@x2+2,w
  1292  0150  00BF               	movwf	eval_poly@x+2
  1293  0151  3185  25D4  3180   	fcall	_eval_poly
  1294  0154  0020               	movlb	0	; select bank0
  1295  0155  083D               	movf	?_eval_poly,w
  1296  0156  00CA               	movwf	___ftdiv@f1
  1297  0157  083E               	movf	?_eval_poly+1,w
  1298  0158  00CB               	movwf	___ftdiv@f1+1
  1299  0159  083F               	movf	?_eval_poly+2,w
  1300  015A  00CC               	movwf	___ftdiv@f1+2
  1301  015B  085B               	movf	sin@y,w
  1302  015C  00C7               	movwf	___ftdiv@f2
  1303  015D  085C               	movf	sin@y+1,w
  1304  015E  00C8               	movwf	___ftdiv@f2+1
  1305  015F  085D               	movf	sin@y+2,w
  1306  0160  00C9               	movwf	___ftdiv@f2+2
  1307  0161  3183  233E  3180   	fcall	___ftdiv
  1308  0164  0020               	movlb	0	; select bank0
  1309  0165  0847               	movf	?___ftdiv,w
  1310  0166  00DE               	movwf	_sin$644
  1311  0167  0848               	movf	?___ftdiv+1,w
  1312  0168  00DF               	movwf	_sin$644+1
  1313  0169  0849               	movf	?___ftdiv+2,w
  1314  016A  00E0               	movwf	_sin$644+2
  1315  016B  085E               	movf	_sin$644,w
  1316  016C  00A0               	movwf	___ftmul@f1
  1317  016D  085F               	movf	_sin$644+1,w
  1318  016E  00A1               	movwf	___ftmul@f1+1
  1319  016F  0860               	movf	_sin$644+2,w
  1320  0170  00A2               	movwf	___ftmul@f1+2
  1321  0171  0857               	movf	sin@f,w
  1322  0172  00A3               	movwf	___ftmul@f2
  1323  0173  0858               	movf	sin@f+1,w
  1324  0174  00A4               	movwf	___ftmul@f2+1
  1325  0175  0859               	movf	sin@f+2,w
  1326  0176  00A5               	movwf	___ftmul@f2+2
  1327  0177  3182  228A  3180   	fcall	___ftmul
  1328  017A  0020               	movlb	0	; select bank0
  1329  017B  0820               	movf	?___ftmul,w
  1330  017C  00D7               	movwf	sin@f
  1331  017D  0821               	movf	?___ftmul+1,w
  1332  017E  00D8               	movwf	sin@f+1
  1333  017F  0822               	movf	?___ftmul+2,w
  1334  0180  00D9               	movwf	sin@f+2
  1335  0181  0864               	movf	sin@sgn,w
  1336  0182  1903               	btfsc	3,2
  1337  0183  0008               	return
  1338  0184  0857               	movf	sin@f,w
  1339  0185  00F2               	movwf	___ftneg@f1
  1340  0186  0858               	movf	sin@f+1,w
  1341  0187  00F3               	movwf	___ftneg@f1+1
  1342  0188  0859               	movf	sin@f+2,w
  1343  0189  00F4               	movwf	___ftneg@f1+2
  1344  018A  3187  278C         	fcall	___ftneg
  1345  018C  0872               	movf	?___ftneg,w
  1346  018D  0020               	movlb	0	; select bank0
  1347  018E  00D7               	movwf	?_sin
  1348  018F  0873               	movf	?___ftneg+1,w
  1349  0190  00D8               	movwf	?_sin+1
  1350  0191  0874               	movf	?___ftneg+2,w
  1351  0192  00D9               	movwf	?_sin+2
  1352  0193  0008               	return
  1353  0194                     __end_of_sin:	
  1354                           
  1355                           	psect	text2
  1356  046E                     __ptext2:	
  1357 ;; *************** function _floor *****************
  1358 ;; Defined at:
  1359 ;;		line 13 in file "/Applications/microchip/xc8/v1.45/sources/common/floor.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  x               3   29[BANK0 ] unsigned char 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  i               3   33[BANK0 ] unsigned char 
  1364 ;;  expon           2   36[BANK0 ] int 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  3   29[BANK0 ] int 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1374 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1375 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1377 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1378 ;;Total ram usage:        9 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    4
  1381 ;; This function calls:
  1382 ;;		___altoft
  1383 ;;		___ftadd
  1384 ;;		___ftge
  1385 ;;		___fttol
  1386 ;;		_frexp
  1387 ;; This function is called by:
  1388 ;;		_sin
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function _floor
  1394  046E                     _floor:	
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1398  046E  0020               	movlb	0	; select bank0
  1399  046F  083D               	movf	floor@x,w
  1400  0470  00F2               	movwf	frexp@value
  1401  0471  083E               	movf	floor@x+1,w
  1402  0472  00F3               	movwf	frexp@value+1
  1403  0473  083F               	movf	floor@x+2,w
  1404  0474  00F4               	movwf	frexp@value+2
  1405  0475  3044               	movlw	(low (floor@expon| 0))& (0+255)
  1406  0476  00C0               	movwf	??_floor
  1407  0477  0840               	movf	??_floor,w
  1408  0478  00F5               	movwf	frexp@eptr
  1409  0479  3186  26AE  3184   	fcall	_frexp
  1410  047C  0020               	movlb	0	; select bank0
  1411  047D  1FC5               	btfss	floor@expon+1,7
  1412  047E  2CA0               	goto	l1607
  1413  047F  083D               	movf	floor@x,w
  1414  0480  00F2               	movwf	___ftge@ff1
  1415  0481  083E               	movf	floor@x+1,w
  1416  0482  00F3               	movwf	___ftge@ff1+1
  1417  0483  083F               	movf	floor@x+2,w
  1418  0484  00F4               	movwf	___ftge@ff1+2
  1419  0485  3000               	movlw	0
  1420  0486  00F5               	movwf	___ftge@ff2
  1421  0487  3000               	movlw	0
  1422  0488  00F6               	movwf	___ftge@ff2+1
  1423  0489  3000               	movlw	0
  1424  048A  00F7               	movwf	___ftge@ff2+2
  1425  048B  3186  2634  3184   	fcall	___ftge
  1426  048E  1803               	btfsc	3,0
  1427  048F  2C98               	goto	l1603
  1428  0490  3000               	movlw	0
  1429  0491  0020               	movlb	0	; select bank0
  1430  0492  00BD               	movwf	?_floor
  1431  0493  3080               	movlw	128
  1432  0494  00BE               	movwf	?_floor+1
  1433  0495  30BF               	movlw	191
  1434  0496  00BF               	movwf	?_floor+2
  1435  0497  0008               	return
  1436  0498                     l1603:	
  1437  0498  3000               	movlw	0
  1438  0499  0020               	movlb	0	; select bank0
  1439  049A  00BD               	movwf	?_floor
  1440  049B  3000               	movlw	0
  1441  049C  00BE               	movwf	?_floor+1
  1442  049D  3000               	movlw	0
  1443  049E  00BF               	movwf	?_floor+2
  1444  049F  0008               	return
  1445  04A0                     l1607:	
  1446  04A0  3000               	movlw	0
  1447  04A1  0245               	subwf	floor@expon+1,w
  1448  04A2  3015               	movlw	21
  1449  04A3  1903               	skipnz
  1450  04A4  0244               	subwf	floor@expon,w
  1451  04A5  1803               	btfsc	3,0
  1452  04A6  0008               	return
  1453  04A7  083D               	movf	floor@x,w
  1454  04A8  00F2               	movwf	___fttol@f1
  1455  04A9  083E               	movf	floor@x+1,w
  1456  04AA  00F3               	movwf	___fttol@f1+1
  1457  04AB  083F               	movf	floor@x+2,w
  1458  04AC  00F4               	movwf	___fttol@f1+2
  1459  04AD  3183  23E7  3184   	fcall	___fttol
  1460  04B0  0875               	movf	?___fttol+3,w
  1461  04B1  0020               	movlb	0	; select bank0
  1462  04B2  00A9               	movwf	___altoft@c+3
  1463  04B3  0874               	movf	?___fttol+2,w
  1464  04B4  00A8               	movwf	___altoft@c+2
  1465  04B5  0873               	movf	?___fttol+1,w
  1466  04B6  00A7               	movwf	___altoft@c+1
  1467  04B7  0872               	movf	?___fttol,w
  1468  04B8  00A6               	movwf	___altoft@c
  1469  04B9  3186  2671  3184   	fcall	___altoft
  1470  04BC  0020               	movlb	0	; select bank0
  1471  04BD  0826               	movf	?___altoft,w
  1472  04BE  00C1               	movwf	floor@i
  1473  04BF  0827               	movf	?___altoft+1,w
  1474  04C0  00C2               	movwf	floor@i+1
  1475  04C1  0828               	movf	?___altoft+2,w
  1476  04C2  00C3               	movwf	floor@i+2
  1477  04C3  083D               	movf	floor@x,w
  1478  04C4  00F2               	movwf	___ftge@ff1
  1479  04C5  083E               	movf	floor@x+1,w
  1480  04C6  00F3               	movwf	___ftge@ff1+1
  1481  04C7  083F               	movf	floor@x+2,w
  1482  04C8  00F4               	movwf	___ftge@ff1+2
  1483  04C9  0841               	movf	floor@i,w
  1484  04CA  00F5               	movwf	___ftge@ff2
  1485  04CB  0842               	movf	floor@i+1,w
  1486  04CC  00F6               	movwf	___ftge@ff2+1
  1487  04CD  0843               	movf	floor@i+2,w
  1488  04CE  00F7               	movwf	___ftge@ff2+2
  1489  04CF  3186  2634  3184   	fcall	___ftge
  1490  04D2  1803               	btfsc	3,0
  1491  04D3  2CEB               	goto	l1617
  1492  04D4  3000               	movlw	0
  1493  04D5  0020               	movlb	0	; select bank0
  1494  04D6  00B0               	movwf	___ftadd@f1
  1495  04D7  3080               	movlw	128
  1496  04D8  00B1               	movwf	___ftadd@f1+1
  1497  04D9  30BF               	movlw	191
  1498  04DA  00B2               	movwf	___ftadd@f1+2
  1499  04DB  0841               	movf	floor@i,w
  1500  04DC  00B3               	movwf	___ftadd@f2
  1501  04DD  0842               	movf	floor@i+1,w
  1502  04DE  00B4               	movwf	___ftadd@f2+1
  1503  04DF  0843               	movf	floor@i+2,w
  1504  04E0  00B5               	movwf	___ftadd@f2+2
  1505  04E1  3181  2194         	fcall	___ftadd
  1506  04E3  0020               	movlb	0	; select bank0
  1507  04E4  0830               	movf	?___ftadd,w
  1508  04E5  00BD               	movwf	?_floor
  1509  04E6  0831               	movf	?___ftadd+1,w
  1510  04E7  00BE               	movwf	?_floor+1
  1511  04E8  0832               	movf	?___ftadd+2,w
  1512  04E9  00BF               	movwf	?_floor+2
  1513  04EA  0008               	return
  1514  04EB                     l1617:	
  1515  04EB  0020               	movlb	0	; select bank0
  1516  04EC  0841               	movf	floor@i,w
  1517  04ED  00BD               	movwf	?_floor
  1518  04EE  0842               	movf	floor@i+1,w
  1519  04EF  00BE               	movwf	?_floor+1
  1520  04F0  0843               	movf	floor@i+2,w
  1521  04F1  00BF               	movwf	?_floor+2
  1522  04F2  0008               	return
  1523  04F3                     __end_of_floor:	
  1524                           
  1525                           	psect	text3
  1526  06AE                     __ptext3:	
  1527 ;; *************** function _frexp *****************
  1528 ;; Defined at:
  1529 ;;		line 254 in file "/Applications/microchip/xc8/v1.45/sources/common/frexp.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  value           3    2[COMMON] int 
  1532 ;;  eptr            1    5[COMMON] PTR int 
  1533 ;;		 -> floor@expon(2), 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  3    2[COMMON] PTR int 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;Total ram usage:        6 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    2
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_floor
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _frexp
  1561  06AE                     _frexp:	
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  1565  06AE  0874               	movf	frexp@value+2,w
  1566  06AF  0473               	iorwf	frexp@value+1,w
  1567  06B0  0472               	iorwf	frexp@value,w
  1568  06B1  1D03               	skipz
  1569  06B2  2EBA               	goto	l1331
  1570  06B3  0875               	movf	frexp@eptr,w
  1571  06B4  0086               	movwf	6
  1572  06B5  0187               	clrf	7
  1573  06B6  3000               	movlw	0
  1574  06B7  3FC0               	movwi [0]fsr1
  1575  06B8  3FC1               	movwi [1]fsr1
  1576                           
  1577                           ;	Return value of _frexp is never used
  1578  06B9  0008               	return
  1579  06BA                     l1331:	
  1580  06BA  0874               	movf	frexp@value+2,w
  1581  06BB  397F               	andlw	127
  1582  06BC  00F6               	movwf	??_frexp
  1583  06BD  01F7               	clrf	??_frexp+1
  1584  06BE  35F6               	lslf	??_frexp,f
  1585  06BF  0DF7               	rlf	??_frexp+1,f
  1586  06C0  0875               	movf	frexp@eptr,w
  1587  06C1  0086               	movwf	6
  1588  06C2  0187               	clrf	7
  1589  06C3  0876               	movf	??_frexp,w
  1590  06C4  3FC0               	movwi [0]fsr1
  1591  06C5  0877               	movf	??_frexp+1,w
  1592  06C6  3FC1               	movwi [1]fsr1
  1593  06C7  0D73               	rlf	frexp@value+1,w
  1594  06C8  0D73               	rlf	frexp@value+1,w
  1595  06C9  3901               	andlw	1
  1596  06CA  00F6               	movwf	??_frexp
  1597  06CB  01F7               	clrf	??_frexp+1
  1598  06CC  0875               	movf	frexp@eptr,w
  1599  06CD  0086               	movwf	6
  1600  06CE  0187               	clrf	7
  1601  06CF  0876               	movf	??_frexp,w
  1602  06D0  0481               	iorwf	1,f
  1603  06D1  3141               	addfsr 1,1
  1604  06D2  0877               	movf	??_frexp+1,w
  1605  06D3  0481               	iorwf	1,f
  1606  06D4  0875               	movf	frexp@eptr,w
  1607  06D5  0086               	movwf	6
  1608  06D6  0187               	clrf	7
  1609  06D7  3082               	movlw	130
  1610  06D8  0781               	addwf	1,f
  1611  06D9  3141               	addfsr 1,1
  1612  06DA  30FF               	movlw	255
  1613  06DB  3D81               	addwfc	1,f
  1614  06DC  317F               	addfsr 1,-1
  1615  06DD  0874               	movf	frexp@value+2,w
  1616  06DE  3980               	andlw	-128
  1617  06DF  383F               	iorlw	63
  1618  06E0  00F4               	movwf	frexp@value+2
  1619  06E1  13F3               	bcf	frexp@value+1,7
  1620  06E2  0008               	return
  1621  06E3                     __end_of_frexp:	
  1622                           ;	Return value of _frexp is never used
  1623                           
  1624                           
  1625                           	psect	text4
  1626  03E7                     __ptext4:	
  1627 ;; *************** function ___fttol *****************
  1628 ;; Defined at:
  1629 ;;		line 44 in file "/Applications/microchip/xc8/v1.45/sources/common/fttol.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  f1              3    2[COMMON] float 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  lval            4    1[BANK0 ] unsigned long 
  1634 ;;  exp1            1    5[BANK0 ] unsigned char 
  1635 ;;  sign1           1    0[BANK0 ] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  4    2[COMMON] long 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1646 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1647 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1648 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1649 ;;Total ram usage:       14 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    2
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_floor
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function ___fttol
  1661  03E7                     ___fttol:	
  1662                           
  1663                           ;incstack = 0
  1664                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1665  03E7  0872               	movf	___fttol@f1,w
  1666  03E8  00F6               	movwf	??___fttol
  1667  03E9  0873               	movf	___fttol@f1+1,w
  1668  03EA  00F7               	movwf	??___fttol+1
  1669  03EB  0874               	movf	___fttol@f1+2,w
  1670  03EC  00F8               	movwf	??___fttol+2
  1671  03ED  1003               	clrc
  1672  03EE  0D77               	rlf	??___fttol+1,w
  1673  03EF  0D78               	rlf	??___fttol+2,w
  1674  03F0  00F9               	movwf	??___fttol+3
  1675  03F1  0879               	movf	??___fttol+3,w
  1676  03F2  0020               	movlb	0	; select bank0
  1677  03F3  00A5               	movwf	___fttol@exp1
  1678  03F4  0825               	movf	___fttol@exp1,w
  1679  03F5  1D03               	btfss	3,2
  1680  03F6  2C00               	goto	l1289
  1681  03F7  3000               	movlw	0
  1682  03F8  00F5               	movwf	?___fttol+3
  1683  03F9  3000               	movlw	0
  1684  03FA  00F4               	movwf	?___fttol+2
  1685  03FB  3000               	movlw	0
  1686  03FC  00F3               	movwf	?___fttol+1
  1687  03FD  3000               	movlw	0
  1688  03FE  00F2               	movwf	?___fttol
  1689  03FF  0008               	return
  1690  0400                     l1289:	
  1691  0400  0872               	movf	___fttol@f1,w
  1692  0401  00F6               	movwf	??___fttol
  1693  0402  0873               	movf	___fttol@f1+1,w
  1694  0403  00F7               	movwf	??___fttol+1
  1695  0404  0874               	movf	___fttol@f1+2,w
  1696  0405  00F8               	movwf	??___fttol+2
  1697  0406  3017               	movlw	23
  1698  0407                     u1565:	
  1699  0407  36F8               	lsrf	??___fttol+2,f
  1700  0408  0CF7               	rrf	??___fttol+1,f
  1701  0409  0CF6               	rrf	??___fttol,f
  1702  040A  0B89               	decfsz	9,f
  1703  040B  2C07               	goto	u1565
  1704  040C  0876               	movf	??___fttol,w
  1705  040D  00F9               	movwf	??___fttol+3
  1706  040E  0879               	movf	??___fttol+3,w
  1707  040F  00A0               	movwf	___fttol@sign1
  1708  0410  17F3               	bsf	___fttol@f1+1,7
  1709  0411  30FF               	movlw	255
  1710  0412  05F2               	andwf	___fttol@f1,f
  1711  0413  30FF               	movlw	255
  1712  0414  05F3               	andwf	___fttol@f1+1,f
  1713  0415  3000               	movlw	0
  1714  0416  05F4               	andwf	___fttol@f1+2,f
  1715  0417  0872               	movf	___fttol@f1,w
  1716  0418  00A1               	movwf	___fttol@lval
  1717  0419  0873               	movf	___fttol@f1+1,w
  1718  041A  00A2               	movwf	___fttol@lval+1
  1719  041B  0874               	movf	___fttol@f1+2,w
  1720  041C  00A3               	movwf	___fttol@lval+2
  1721  041D  01A4               	clrf	___fttol@lval+3
  1722  041E  308E               	movlw	142
  1723  041F  02A5               	subwf	___fttol@exp1,f
  1724  0420  1FA5               	btfss	___fttol@exp1,7
  1725  0421  2C3E               	goto	l1309
  1726  0422  0825               	movf	___fttol@exp1,w
  1727  0423  3A80               	xorlw	128
  1728  0424  3E8F               	addlw	143
  1729  0425  1803               	skipnc
  1730  0426  2C30               	goto	l1307
  1731  0427  3000               	movlw	0
  1732  0428  00F5               	movwf	?___fttol+3
  1733  0429  3000               	movlw	0
  1734  042A  00F4               	movwf	?___fttol+2
  1735  042B  3000               	movlw	0
  1736  042C  00F3               	movwf	?___fttol+1
  1737  042D  3000               	movlw	0
  1738  042E  00F2               	movwf	?___fttol
  1739  042F  0008               	return
  1740  0430                     l1307:	
  1741  0430  3001               	movlw	1
  1742  0431                     u1595:	
  1743  0431  36A4               	lsrf	___fttol@lval+3,f
  1744  0432  0CA3               	rrf	___fttol@lval+2,f
  1745  0433  0CA2               	rrf	___fttol@lval+1,f
  1746  0434  0CA1               	rrf	___fttol@lval,f
  1747  0435  0B89               	decfsz	9,f
  1748  0436  2C31               	goto	u1595
  1749  0437  3001               	movlw	1
  1750  0438  00F6               	movwf	??___fttol
  1751  0439  0876               	movf	??___fttol,w
  1752  043A  07A5               	addwf	___fttol@exp1,f
  1753  043B  1903               	btfsc	3,2
  1754  043C  2C57               	goto	l1317
  1755  043D  2C30               	goto	l1307
  1756  043E                     l1309:	
  1757  043E  3018               	movlw	24
  1758  043F  0225               	subwf	___fttol@exp1,w
  1759  0440  1C03               	skipc
  1760  0441  2C54               	goto	l389
  1761  0442  3000               	movlw	0
  1762  0443  00F5               	movwf	?___fttol+3
  1763  0444  3000               	movlw	0
  1764  0445  00F4               	movwf	?___fttol+2
  1765  0446  3000               	movlw	0
  1766  0447  00F3               	movwf	?___fttol+1
  1767  0448  3000               	movlw	0
  1768  0449  00F2               	movwf	?___fttol
  1769  044A  0008               	return
  1770  044B                     l1315:	
  1771  044B  3001               	movlw	1
  1772  044C                     u1625:	
  1773  044C  35A1               	lslf	___fttol@lval,f
  1774  044D  0DA2               	rlf	___fttol@lval+1,f
  1775  044E  0DA3               	rlf	___fttol@lval+2,f
  1776  044F  0DA4               	rlf	___fttol@lval+3,f
  1777  0450  0B89               	decfsz	9,f
  1778  0451  2C4C               	goto	u1625
  1779  0452  3001               	movlw	1
  1780  0453  02A5               	subwf	___fttol@exp1,f
  1781  0454                     l389:	
  1782  0454  0825               	movf	___fttol@exp1,w
  1783  0455  1D03               	btfss	3,2
  1784  0456  2C4B               	goto	l1315
  1785  0457                     l1317:	
  1786  0457  0820               	movf	___fttol@sign1,w
  1787  0458  1903               	btfsc	3,2
  1788  0459  2C65               	goto	l1321
  1789  045A  09A1               	comf	___fttol@lval,f
  1790  045B  09A2               	comf	___fttol@lval+1,f
  1791  045C  09A3               	comf	___fttol@lval+2,f
  1792  045D  09A4               	comf	___fttol@lval+3,f
  1793  045E  0AA1               	incf	___fttol@lval,f
  1794  045F  1903               	skipnz
  1795  0460  0AA2               	incf	___fttol@lval+1,f
  1796  0461  1903               	skipnz
  1797  0462  0AA3               	incf	___fttol@lval+2,f
  1798  0463  1903               	skipnz
  1799  0464  0AA4               	incf	___fttol@lval+3,f
  1800  0465                     l1321:	
  1801  0465  0824               	movf	___fttol@lval+3,w
  1802  0466  00F5               	movwf	?___fttol+3
  1803  0467  0823               	movf	___fttol@lval+2,w
  1804  0468  00F4               	movwf	?___fttol+2
  1805  0469  0822               	movf	___fttol@lval+1,w
  1806  046A  00F3               	movwf	?___fttol+1
  1807  046B  0821               	movf	___fttol@lval,w
  1808  046C  00F2               	movwf	?___fttol
  1809  046D  0008               	return
  1810  046E                     __end_of___fttol:	
  1811                           
  1812                           	psect	text5
  1813  0634                     __ptext5:	
  1814 ;; *************** function ___ftge *****************
  1815 ;; Defined at:
  1816 ;;		line 4 in file "/Applications/microchip/xc8/v1.45/sources/common/ftge.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  ff1             3    2[COMMON] float 
  1819 ;;  ff2             3    5[COMMON] float 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;		None               void
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1831 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1833 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1834 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;Total ram usage:        9 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    2
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_sin
  1842 ;;		_floor
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function ___ftge
  1848  0634                     ___ftge:	
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1852  0634  1FF4               	btfss	___ftge@ff1+2,7
  1853  0635  2E4B               	goto	l1577
  1854  0636  0972               	comf	___ftge@ff1,w
  1855  0637  0020               	movlb	0	; select bank0
  1856  0638  00A0               	movwf	??___ftge
  1857  0639  0973               	comf	___ftge@ff1+1,w
  1858  063A  00A1               	movwf	??___ftge+1
  1859  063B  0974               	comf	___ftge@ff1+2,w
  1860  063C  00A2               	movwf	??___ftge+2
  1861  063D  0AA0               	incf	??___ftge,f
  1862  063E  1903               	skipnz
  1863  063F  0AA1               	incf	??___ftge+1,f
  1864  0640  1903               	skipnz
  1865  0641  0AA2               	incf	??___ftge+2,f
  1866  0642  3000               	movlw	0
  1867  0643  0720               	addwf	??___ftge,w
  1868  0644  00F2               	movwf	___ftge@ff1
  1869  0645  3000               	movlw	0
  1870  0646  3D21               	addwfc	??___ftge+1,w
  1871  0647  00F3               	movwf	___ftge@ff1+1
  1872  0648  3080               	movlw	128
  1873  0649  3D22               	addwfc	??___ftge+2,w
  1874  064A  00F4               	movwf	___ftge@ff1+2
  1875  064B                     l1577:	
  1876  064B  1FF7               	btfss	___ftge@ff2+2,7
  1877  064C  2E62               	goto	l1581
  1878  064D  0975               	comf	___ftge@ff2,w
  1879  064E  0020               	movlb	0	; select bank0
  1880  064F  00A0               	movwf	??___ftge
  1881  0650  0976               	comf	___ftge@ff2+1,w
  1882  0651  00A1               	movwf	??___ftge+1
  1883  0652  0977               	comf	___ftge@ff2+2,w
  1884  0653  00A2               	movwf	??___ftge+2
  1885  0654  0AA0               	incf	??___ftge,f
  1886  0655  1903               	skipnz
  1887  0656  0AA1               	incf	??___ftge+1,f
  1888  0657  1903               	skipnz
  1889  0658  0AA2               	incf	??___ftge+2,f
  1890  0659  3000               	movlw	0
  1891  065A  0720               	addwf	??___ftge,w
  1892  065B  00F5               	movwf	___ftge@ff2
  1893  065C  3000               	movlw	0
  1894  065D  3D21               	addwfc	??___ftge+1,w
  1895  065E  00F6               	movwf	___ftge@ff2+1
  1896  065F  3080               	movlw	128
  1897  0660  3D22               	addwfc	??___ftge+2,w
  1898  0661  00F7               	movwf	___ftge@ff2+2
  1899  0662                     l1581:	
  1900  0662  3080               	movlw	128
  1901  0663  06F4               	xorwf	___ftge@ff1+2,f
  1902  0664  3080               	movlw	128
  1903  0665  06F7               	xorwf	___ftge@ff2+2,f
  1904  0666  0877               	movf	___ftge@ff2+2,w
  1905  0667  0274               	subwf	___ftge@ff1+2,w
  1906  0668  1D03               	skipz
  1907  0669  0008               	return
  1908  066A  0876               	movf	___ftge@ff2+1,w
  1909  066B  0273               	subwf	___ftge@ff1+1,w
  1910  066C  1D03               	skipz
  1911  066D  0008               	return
  1912  066E  0875               	movf	___ftge@ff2,w
  1913  066F  0272               	subwf	___ftge@ff1,w
  1914  0670  0008               	return
  1915  0671                     __end_of___ftge:	
  1916                           
  1917                           	psect	text6
  1918  0671                     __ptext6:	
  1919 ;; *************** function ___altoft *****************
  1920 ;; Defined at:
  1921 ;;		line 42 in file "/Applications/microchip/xc8/v1.45/sources/common/altoft.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  c               4    6[BANK0 ] long 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  sign            1   13[BANK0 ] unsigned char 
  1926 ;;  exp             1   12[BANK0 ] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  3    6[BANK0 ] float 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;Total ram usage:        8 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    3
  1943 ;; This function calls:
  1944 ;;		___ftpack
  1945 ;; This function is called by:
  1946 ;;		_floor
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function ___altoft
  1952  0671                     ___altoft:	
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  1956  0671  0020               	movlb	0	; select bank0
  1957  0672  01AD               	clrf	___altoft@sign
  1958  0673  308E               	movlw	142
  1959  0674  00AA               	movwf	??___altoft
  1960  0675  082A               	movf	??___altoft,w
  1961  0676  00AC               	movwf	___altoft@exp
  1962  0677  1FA9               	btfss	___altoft@c+3,7
  1963  0678  2E86               	goto	l1567
  1964  0679  09A6               	comf	___altoft@c,f
  1965  067A  09A7               	comf	___altoft@c+1,f
  1966  067B  09A8               	comf	___altoft@c+2,f
  1967  067C  09A9               	comf	___altoft@c+3,f
  1968  067D  0AA6               	incf	___altoft@c,f
  1969  067E  1903               	skipnz
  1970  067F  0AA7               	incf	___altoft@c+1,f
  1971  0680  1903               	skipnz
  1972  0681  0AA8               	incf	___altoft@c+2,f
  1973  0682  1903               	skipnz
  1974  0683  0AA9               	incf	___altoft@c+3,f
  1975  0684  01AD               	clrf	___altoft@sign
  1976  0685  0AAD               	incf	___altoft@sign,f
  1977  0686                     l1567:	
  1978  0686  30FF               	movlw	255
  1979  0687  0529               	andwf	___altoft@c+3,w
  1980  0688  1903               	btfsc	3,2
  1981  0689  2E96               	goto	l1569
  1982  068A  3001               	movlw	1
  1983  068B                     u1905:	
  1984  068B  36A9               	lsrf	___altoft@c+3,f
  1985  068C  0CA8               	rrf	___altoft@c+2,f
  1986  068D  0CA7               	rrf	___altoft@c+1,f
  1987  068E  0CA6               	rrf	___altoft@c,f
  1988  068F  0B89               	decfsz	9,f
  1989  0690  2E8B               	goto	u1905
  1990  0691  3001               	movlw	1
  1991  0692  00AA               	movwf	??___altoft
  1992  0693  082A               	movf	??___altoft,w
  1993  0694  07AC               	addwf	___altoft@exp,f
  1994  0695  2E86               	goto	l1567
  1995  0696                     l1569:	
  1996  0696  0826               	movf	___altoft@c,w
  1997  0697  00F2               	movwf	___ftpack@arg
  1998  0698  0827               	movf	___altoft@c+1,w
  1999  0699  00F3               	movwf	___ftpack@arg+1
  2000  069A  0828               	movf	___altoft@c+2,w
  2001  069B  00F4               	movwf	___ftpack@arg+2
  2002  069C  082C               	movf	___altoft@exp,w
  2003  069D  00AA               	movwf	??___altoft
  2004  069E  082A               	movf	??___altoft,w
  2005  069F  00F5               	movwf	___ftpack@exp
  2006  06A0  082D               	movf	___altoft@sign,w
  2007  06A1  00AB               	movwf	??___altoft+1
  2008  06A2  082B               	movf	??___altoft+1,w
  2009  06A3  00F6               	movwf	___ftpack@sign
  2010  06A4  3185  2570         	fcall	___ftpack
  2011  06A6  0872               	movf	?___ftpack,w
  2012  06A7  0020               	movlb	0	; select bank0
  2013  06A8  00A6               	movwf	?___altoft
  2014  06A9  0873               	movf	?___ftpack+1,w
  2015  06AA  00A7               	movwf	?___altoft+1
  2016  06AB  0874               	movf	?___ftpack+2,w
  2017  06AC  00A8               	movwf	?___altoft+2
  2018  06AD  0008               	return
  2019  06AE                     __end_of___altoft:	
  2020                           
  2021                           	psect	text7
  2022  05D4                     __ptext7:	
  2023 ;; *************** function _eval_poly *****************
  2024 ;; Defined at:
  2025 ;;		line 4 in file "/Applications/microchip/xc8/v1.45/sources/common/evalpoly.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  x               3   29[BANK0 ] float 
  2028 ;;  d               2   32[BANK0 ] PTR const 
  2029 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  2030 ;;  n               2   34[BANK0 ] int 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  res             3   36[BANK0 ] int 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  3   29[BANK0 ] int 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2042 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2046 ;;Total ram usage:       10 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    4
  2049 ;; This function calls:
  2050 ;;		___ftadd
  2051 ;;		___ftmul
  2052 ;;		___wmul
  2053 ;; This function is called by:
  2054 ;;		_sin
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _eval_poly
  2060  05D4                     _eval_poly:	
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2064  05D4  0020               	movlb	0	; select bank0
  2065  05D5  0843               	movf	eval_poly@n+1,w
  2066  05D6  00F3               	movwf	___wmul@multiplier+1
  2067  05D7  0842               	movf	eval_poly@n,w
  2068  05D8  00F2               	movwf	___wmul@multiplier
  2069  05D9  3003               	movlw	3
  2070  05DA  00F4               	movwf	___wmul@multiplicand
  2071  05DB  3000               	movlw	0
  2072  05DC  00F5               	movwf	___wmul@multiplicand+1
  2073  05DD  3187  2724  3185   	fcall	___wmul
  2074  05E0  0020               	movlb	0	; select bank0
  2075  05E1  0840               	movf	eval_poly@d,w
  2076  05E2  0772               	addwf	?___wmul,w
  2077  05E3  0084               	movwf	4
  2078  05E4  0841               	movf	eval_poly@d+1,w
  2079  05E5  3D73               	addwfc	?___wmul+1,w
  2080  05E6  0085               	movwf	5
  2081  05E7  3F00               	moviw [0]fsr0
  2082  05E8  00C4               	movwf	eval_poly@res
  2083  05E9  3F01               	moviw [1]fsr0
  2084  05EA  00C5               	movwf	eval_poly@res+1
  2085  05EB  3F02               	moviw [2]fsr0
  2086  05EC                     L2:	
  2087  05EC  00C6               	movwf	eval_poly@res+2
  2088  05ED  0842               	movf	eval_poly@n,w
  2089  05EE  0443               	iorwf	eval_poly@n+1,w
  2090  05EF  1903               	btfsc	3,2
  2091  05F0  2E2D               	goto	l1433
  2092  05F1  30FF               	movlw	255
  2093  05F2  07C2               	addwf	eval_poly@n,f
  2094  05F3  30FF               	movlw	255
  2095  05F4  3DC3               	addwfc	eval_poly@n+1,f
  2096  05F5  0843               	movf	eval_poly@n+1,w
  2097  05F6  00F3               	movwf	___wmul@multiplier+1
  2098  05F7  0842               	movf	eval_poly@n,w
  2099  05F8  00F2               	movwf	___wmul@multiplier
  2100  05F9  3003               	movlw	3
  2101  05FA  00F4               	movwf	___wmul@multiplicand
  2102  05FB  3000               	movlw	0
  2103  05FC  00F5               	movwf	___wmul@multiplicand+1
  2104  05FD  3187  2724  3185   	fcall	___wmul
  2105  0600  0020               	movlb	0	; select bank0
  2106  0601  0840               	movf	eval_poly@d,w
  2107  0602  0772               	addwf	?___wmul,w
  2108  0603  0084               	movwf	4
  2109  0604  0841               	movf	eval_poly@d+1,w
  2110  0605  3D73               	addwfc	?___wmul+1,w
  2111  0606  0085               	movwf	5
  2112  0607  3F00               	moviw [0]fsr0
  2113  0608  00B0               	movwf	___ftadd@f1
  2114  0609  3F01               	moviw [1]fsr0
  2115  060A  00B1               	movwf	___ftadd@f1+1
  2116  060B  3F02               	moviw [2]fsr0
  2117  060C  00B2               	movwf	___ftadd@f1+2
  2118  060D  0844               	movf	eval_poly@res,w
  2119  060E  00A0               	movwf	___ftmul@f1
  2120  060F  0845               	movf	eval_poly@res+1,w
  2121  0610  00A1               	movwf	___ftmul@f1+1
  2122  0611  0846               	movf	eval_poly@res+2,w
  2123  0612  00A2               	movwf	___ftmul@f1+2
  2124  0613  083D               	movf	eval_poly@x,w
  2125  0614  00A3               	movwf	___ftmul@f2
  2126  0615  083E               	movf	eval_poly@x+1,w
  2127  0616  00A4               	movwf	___ftmul@f2+1
  2128  0617  083F               	movf	eval_poly@x+2,w
  2129  0618  00A5               	movwf	___ftmul@f2+2
  2130  0619  3182  228A  3185   	fcall	___ftmul
  2131  061C  0020               	movlb	0	; select bank0
  2132  061D  0820               	movf	?___ftmul,w
  2133  061E  00B3               	movwf	___ftadd@f2
  2134  061F  0821               	movf	?___ftmul+1,w
  2135  0620  00B4               	movwf	___ftadd@f2+1
  2136  0621  0822               	movf	?___ftmul+2,w
  2137  0622  00B5               	movwf	___ftadd@f2+2
  2138  0623  3181  2194  3185   	fcall	___ftadd
  2139  0626  0020               	movlb	0	; select bank0
  2140  0627  0830               	movf	?___ftadd,w
  2141  0628  00C4               	movwf	eval_poly@res
  2142  0629  0831               	movf	?___ftadd+1,w
  2143  062A  00C5               	movwf	eval_poly@res+1
  2144  062B  0832               	movf	?___ftadd+2,w
  2145  062C  2DEC               	goto	L2
  2146  062D                     l1433:	
  2147  062D  0844               	movf	eval_poly@res,w
  2148  062E  00BD               	movwf	?_eval_poly
  2149  062F  0845               	movf	eval_poly@res+1,w
  2150  0630  00BE               	movwf	?_eval_poly+1
  2151  0631  0846               	movf	eval_poly@res+2,w
  2152  0632  00BF               	movwf	?_eval_poly+2
  2153  0633  0008               	return
  2154  0634                     __end_of_eval_poly:	
  2155                           
  2156                           	psect	text8
  2157  0724                     __ptext8:	
  2158 ;; *************** function ___wmul *****************
  2159 ;; Defined at:
  2160 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul16.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  multiplier      2    2[COMMON] unsigned int 
  2163 ;;  multiplicand    2    4[COMMON] unsigned int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  product         2    6[COMMON] unsigned int 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  2    2[COMMON] unsigned int 
  2168 ;; Registers used:
  2169 ;;		wreg, status,2, status,0
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2179 ;;Total ram usage:        6 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    2
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_eval_poly
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           
  2190                           ;psect for function ___wmul
  2191  0724                     ___wmul:	
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2195  0724  01F6               	clrf	___wmul@product
  2196  0725  01F7               	clrf	___wmul@product+1
  2197  0726                     l1115:	
  2198  0726  1C72               	btfss	___wmul@multiplier,0
  2199  0727  2F2C               	goto	l137
  2200  0728  0874               	movf	___wmul@multiplicand,w
  2201  0729  07F6               	addwf	___wmul@product,f
  2202  072A  0875               	movf	___wmul@multiplicand+1,w
  2203  072B  3DF7               	addwfc	___wmul@product+1,f
  2204  072C                     l137:	
  2205  072C  3001               	movlw	1
  2206  072D                     u1115:	
  2207  072D  35F4               	lslf	___wmul@multiplicand,f
  2208  072E  0DF5               	rlf	___wmul@multiplicand+1,f
  2209  072F  0B89               	decfsz	9,f
  2210  0730  2F2D               	goto	u1115
  2211  0731  3001               	movlw	1
  2212  0732                     u1125:	
  2213  0732  36F3               	lsrf	___wmul@multiplier+1,f
  2214  0733  0CF2               	rrf	___wmul@multiplier,f
  2215  0734  0B89               	decfsz	9,f
  2216  0735  2F32               	goto	u1125
  2217  0736  0872               	movf	___wmul@multiplier,w
  2218  0737  0473               	iorwf	___wmul@multiplier+1,w
  2219  0738  1D03               	btfss	3,2
  2220  0739  2F26               	goto	l1115
  2221  073A  0877               	movf	___wmul@product+1,w
  2222  073B  00F3               	movwf	?___wmul+1
  2223  073C  0876               	movf	___wmul@product,w
  2224  073D  00F2               	movwf	?___wmul
  2225  073E  0008               	return
  2226  073F                     __end_of___wmul:	
  2227                           
  2228                           	psect	text9
  2229  028A                     __ptext9:	
  2230 ;; *************** function ___ftmul *****************
  2231 ;; Defined at:
  2232 ;;		line 62 in file "/Applications/microchip/xc8/v1.45/sources/common/ftmul.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  f1              3    0[BANK0 ] float 
  2235 ;;  f2              3    3[BANK0 ] float 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2238 ;;  sign            1   15[BANK0 ] unsigned char 
  2239 ;;  cntr            1   14[BANK0 ] unsigned char 
  2240 ;;  exp             1   10[BANK0 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  3    0[BANK0 ] float 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2250 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;Total ram usage:       16 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    3
  2257 ;; This function calls:
  2258 ;;		___ftpack
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;;		_sin
  2262 ;;		_eval_poly
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function ___ftmul
  2268  028A                     ___ftmul:	
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2272  028A  0020               	movlb	0	; select bank0
  2273  028B  0820               	movf	___ftmul@f1,w
  2274  028C  00A6               	movwf	??___ftmul
  2275  028D  0821               	movf	___ftmul@f1+1,w
  2276  028E  00A7               	movwf	??___ftmul+1
  2277  028F  0822               	movf	___ftmul@f1+2,w
  2278  0290  00A8               	movwf	??___ftmul+2
  2279  0291  1003               	clrc
  2280  0292  0D27               	rlf	??___ftmul+1,w
  2281  0293  0D28               	rlf	??___ftmul+2,w
  2282  0294  00A9               	movwf	??___ftmul+3
  2283  0295  0829               	movf	??___ftmul+3,w
  2284  0296  00AA               	movwf	___ftmul@exp
  2285  0297  082A               	movf	___ftmul@exp,w
  2286  0298  1D03               	btfss	3,2
  2287  0299  2AA1               	goto	l1239
  2288  029A  3000               	movlw	0
  2289  029B  00A0               	movwf	?___ftmul
  2290  029C  3000               	movlw	0
  2291  029D  00A1               	movwf	?___ftmul+1
  2292  029E  3000               	movlw	0
  2293  029F  00A2               	movwf	?___ftmul+2
  2294  02A0  0008               	return
  2295  02A1                     l1239:	
  2296  02A1  0823               	movf	___ftmul@f2,w
  2297  02A2  00A6               	movwf	??___ftmul
  2298  02A3  0824               	movf	___ftmul@f2+1,w
  2299  02A4  00A7               	movwf	??___ftmul+1
  2300  02A5  0825               	movf	___ftmul@f2+2,w
  2301  02A6  00A8               	movwf	??___ftmul+2
  2302  02A7  1003               	clrc
  2303  02A8  0D27               	rlf	??___ftmul+1,w
  2304  02A9  0D28               	rlf	??___ftmul+2,w
  2305  02AA  00A9               	movwf	??___ftmul+3
  2306  02AB  0829               	movf	??___ftmul+3,w
  2307  02AC  00AF               	movwf	___ftmul@sign
  2308  02AD  082F               	movf	___ftmul@sign,w
  2309  02AE  1D03               	btfss	3,2
  2310  02AF  2AB7               	goto	l1245
  2311  02B0  3000               	movlw	0
  2312  02B1  00A0               	movwf	?___ftmul
  2313  02B2  3000               	movlw	0
  2314  02B3  00A1               	movwf	?___ftmul+1
  2315  02B4  3000               	movlw	0
  2316  02B5  00A2               	movwf	?___ftmul+2
  2317  02B6  0008               	return
  2318  02B7                     l1245:	
  2319  02B7  082F               	movf	___ftmul@sign,w
  2320  02B8  3E7B               	addlw	123
  2321  02B9  00A6               	movwf	??___ftmul
  2322  02BA  0826               	movf	??___ftmul,w
  2323  02BB  07AA               	addwf	___ftmul@exp,f
  2324  02BC  0820               	movf	___ftmul@f1,w
  2325  02BD  00A6               	movwf	??___ftmul
  2326  02BE  0821               	movf	___ftmul@f1+1,w
  2327  02BF  00A7               	movwf	??___ftmul+1
  2328  02C0  0822               	movf	___ftmul@f1+2,w
  2329  02C1  00A8               	movwf	??___ftmul+2
  2330  02C2  3010               	movlw	16
  2331  02C3                     u1455:	
  2332  02C3  36A8               	lsrf	??___ftmul+2,f
  2333  02C4  0CA7               	rrf	??___ftmul+1,f
  2334  02C5  0CA6               	rrf	??___ftmul,f
  2335  02C6  0B89               	decfsz	9,f
  2336  02C7  2AC3               	goto	u1455
  2337  02C8  0826               	movf	??___ftmul,w
  2338  02C9  00A9               	movwf	??___ftmul+3
  2339  02CA  0829               	movf	??___ftmul+3,w
  2340  02CB  00AF               	movwf	___ftmul@sign
  2341  02CC  0823               	movf	___ftmul@f2,w
  2342  02CD  00A6               	movwf	??___ftmul
  2343  02CE  0824               	movf	___ftmul@f2+1,w
  2344  02CF  00A7               	movwf	??___ftmul+1
  2345  02D0  0825               	movf	___ftmul@f2+2,w
  2346  02D1  00A8               	movwf	??___ftmul+2
  2347  02D2  3010               	movlw	16
  2348  02D3                     u1465:	
  2349  02D3  36A8               	lsrf	??___ftmul+2,f
  2350  02D4  0CA7               	rrf	??___ftmul+1,f
  2351  02D5  0CA6               	rrf	??___ftmul,f
  2352  02D6  0B89               	decfsz	9,f
  2353  02D7  2AD3               	goto	u1465
  2354  02D8  0826               	movf	??___ftmul,w
  2355  02D9  00A9               	movwf	??___ftmul+3
  2356  02DA  0829               	movf	??___ftmul+3,w
  2357  02DB  06AF               	xorwf	___ftmul@sign,f
  2358  02DC  3080               	movlw	128
  2359  02DD  00A6               	movwf	??___ftmul
  2360  02DE  0826               	movf	??___ftmul,w
  2361  02DF  05AF               	andwf	___ftmul@sign,f
  2362  02E0  17A1               	bsf	___ftmul@f1+1,7
  2363  02E1  17A4               	bsf	___ftmul@f2+1,7
  2364  02E2  30FF               	movlw	255
  2365  02E3  05A3               	andwf	___ftmul@f2,f
  2366  02E4  30FF               	movlw	255
  2367  02E5  05A4               	andwf	___ftmul@f2+1,f
  2368  02E6  3000               	movlw	0
  2369  02E7  05A5               	andwf	___ftmul@f2+2,f
  2370  02E8  3000               	movlw	0
  2371  02E9  00AB               	movwf	___ftmul@f3_as_product
  2372  02EA  3000               	movlw	0
  2373  02EB  00AC               	movwf	___ftmul@f3_as_product+1
  2374  02EC  3000               	movlw	0
  2375  02ED  00AD               	movwf	___ftmul@f3_as_product+2
  2376  02EE  3007               	movlw	7
  2377  02EF  00A6               	movwf	??___ftmul
  2378  02F0  0826               	movf	??___ftmul,w
  2379  02F1  00AE               	movwf	___ftmul@cntr
  2380  02F2                     l1257:	
  2381  02F2  1C20               	btfss	___ftmul@f1,0
  2382  02F3  2AFA               	goto	l1261
  2383  02F4  0823               	movf	___ftmul@f2,w
  2384  02F5  07AB               	addwf	___ftmul@f3_as_product,f
  2385  02F6  0824               	movf	___ftmul@f2+1,w
  2386  02F7  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2387  02F8  0825               	movf	___ftmul@f2+2,w
  2388  02F9  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2389  02FA                     l1261:	
  2390  02FA  3001               	movlw	1
  2391  02FB                     u1485:	
  2392  02FB  36A2               	lsrf	___ftmul@f1+2,f
  2393  02FC  0CA1               	rrf	___ftmul@f1+1,f
  2394  02FD  0CA0               	rrf	___ftmul@f1,f
  2395  02FE  0B89               	decfsz	9,f
  2396  02FF  2AFB               	goto	u1485
  2397  0300  3001               	movlw	1
  2398  0301                     u1495:	
  2399  0301  35A3               	lslf	___ftmul@f2,f
  2400  0302  0DA4               	rlf	___ftmul@f2+1,f
  2401  0303  0DA5               	rlf	___ftmul@f2+2,f
  2402  0304  0B89               	decfsz	9,f
  2403  0305  2B01               	goto	u1495
  2404  0306  3001               	movlw	1
  2405  0307  02AE               	subwf	___ftmul@cntr,f
  2406  0308  1D03               	btfss	3,2
  2407  0309  2AF2               	goto	l1257
  2408  030A  3009               	movlw	9
  2409  030B  00A6               	movwf	??___ftmul
  2410  030C  0826               	movf	??___ftmul,w
  2411  030D  00AE               	movwf	___ftmul@cntr
  2412  030E                     l1269:	
  2413  030E  1C20               	btfss	___ftmul@f1,0
  2414  030F  2B16               	goto	l1273
  2415  0310  0823               	movf	___ftmul@f2,w
  2416  0311  07AB               	addwf	___ftmul@f3_as_product,f
  2417  0312  0824               	movf	___ftmul@f2+1,w
  2418  0313  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2419  0314  0825               	movf	___ftmul@f2+2,w
  2420  0315  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2421  0316                     l1273:	
  2422  0316  3001               	movlw	1
  2423  0317                     u1525:	
  2424  0317  36A2               	lsrf	___ftmul@f1+2,f
  2425  0318  0CA1               	rrf	___ftmul@f1+1,f
  2426  0319  0CA0               	rrf	___ftmul@f1,f
  2427  031A  0B89               	decfsz	9,f
  2428  031B  2B17               	goto	u1525
  2429  031C  3001               	movlw	1
  2430  031D                     u1535:	
  2431  031D  36AD               	lsrf	___ftmul@f3_as_product+2,f
  2432  031E  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2433  031F  0CAB               	rrf	___ftmul@f3_as_product,f
  2434  0320  0B89               	decfsz	9,f
  2435  0321  2B1D               	goto	u1535
  2436  0322  3001               	movlw	1
  2437  0323  02AE               	subwf	___ftmul@cntr,f
  2438  0324  1D03               	btfss	3,2
  2439  0325  2B0E               	goto	l1269
  2440  0326  082B               	movf	___ftmul@f3_as_product,w
  2441  0327  00F2               	movwf	___ftpack@arg
  2442  0328  082C               	movf	___ftmul@f3_as_product+1,w
  2443  0329  00F3               	movwf	___ftpack@arg+1
  2444  032A  082D               	movf	___ftmul@f3_as_product+2,w
  2445  032B  00F4               	movwf	___ftpack@arg+2
  2446  032C  082A               	movf	___ftmul@exp,w
  2447  032D  00A6               	movwf	??___ftmul
  2448  032E  0826               	movf	??___ftmul,w
  2449  032F  00F5               	movwf	___ftpack@exp
  2450  0330  082F               	movf	___ftmul@sign,w
  2451  0331  00A7               	movwf	??___ftmul+1
  2452  0332  0827               	movf	??___ftmul+1,w
  2453  0333  00F6               	movwf	___ftpack@sign
  2454  0334  3185  2570         	fcall	___ftpack
  2455  0336  0872               	movf	?___ftpack,w
  2456  0337  0020               	movlb	0	; select bank0
  2457  0338  00A0               	movwf	?___ftmul
  2458  0339  0873               	movf	?___ftpack+1,w
  2459  033A  00A1               	movwf	?___ftmul+1
  2460  033B  0874               	movf	?___ftpack+2,w
  2461  033C  00A2               	movwf	?___ftmul+2
  2462  033D  0008               	return
  2463  033E                     __end_of___ftmul:	
  2464                           
  2465                           	psect	text10
  2466  0706                     __ptext10:	
  2467 ;; *************** function ___ftsub *****************
  2468 ;; Defined at:
  2469 ;;		line 18 in file "/Applications/microchip/xc8/v1.45/sources/common/ftsub.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  f2              3   38[BANK0 ] float 
  2472 ;;  f1              3   41[BANK0 ] float 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  3   38[BANK0 ] float 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2484 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;Total ram usage:        6 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    4
  2491 ;; This function calls:
  2492 ;;		___ftadd
  2493 ;; This function is called by:
  2494 ;;		_sin
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function ___ftsub
  2500  0706                     ___ftsub:	
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  2504  0706  0020               	movlb	0	; select bank0
  2505  0707  0848               	movf	___ftsub@f2+2,w
  2506  0708  0447               	iorwf	___ftsub@f2+1,w
  2507  0709  0446               	iorwf	___ftsub@f2,w
  2508  070A  1903               	skipnz
  2509  070B  2F0E               	goto	l1395
  2510  070C  3080               	movlw	128
  2511  070D  06C8               	xorwf	___ftsub@f2+2,f
  2512  070E                     l1395:	
  2513  070E  0849               	movf	___ftsub@f1,w
  2514  070F  00B0               	movwf	___ftadd@f1
  2515  0710  084A               	movf	___ftsub@f1+1,w
  2516  0711  00B1               	movwf	___ftadd@f1+1
  2517  0712  084B               	movf	___ftsub@f1+2,w
  2518  0713  00B2               	movwf	___ftadd@f1+2
  2519  0714  0846               	movf	___ftsub@f2,w
  2520  0715  00B3               	movwf	___ftadd@f2
  2521  0716  0847               	movf	___ftsub@f2+1,w
  2522  0717  00B4               	movwf	___ftadd@f2+1
  2523  0718  0848               	movf	___ftsub@f2+2,w
  2524  0719  00B5               	movwf	___ftadd@f2+2
  2525  071A  3181  2194         	fcall	___ftadd
  2526  071C  0020               	movlb	0	; select bank0
  2527  071D  0830               	movf	?___ftadd,w
  2528  071E  00C6               	movwf	?___ftsub
  2529  071F  0831               	movf	?___ftadd+1,w
  2530  0720  00C7               	movwf	?___ftsub+1
  2531  0721  0832               	movf	?___ftadd+2,w
  2532  0722  00C8               	movwf	?___ftsub+2
  2533  0723  0008               	return
  2534  0724                     __end_of___ftsub:	
  2535                           
  2536                           	psect	text11
  2537  0194                     __ptext11:	
  2538 ;; *************** function ___ftadd *****************
  2539 ;; Defined at:
  2540 ;;		line 86 in file "/Applications/microchip/xc8/v1.45/sources/common/ftadd.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  f1              3   16[BANK0 ] float 
  2543 ;;  f2              3   19[BANK0 ] float 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  exp1            1   28[BANK0 ] unsigned char 
  2546 ;;  exp2            1   27[BANK0 ] unsigned char 
  2547 ;;  sign            1   26[BANK0 ] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  3   16[BANK0 ] float 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0, pclath, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2557 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2559 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2560 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;Total ram usage:       13 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    3
  2564 ;; This function calls:
  2565 ;;		___ftpack
  2566 ;; This function is called by:
  2567 ;;		___ftsub
  2568 ;;		_sin
  2569 ;;		_eval_poly
  2570 ;;		_floor
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function ___ftadd
  2576  0194                     ___ftadd:	
  2577                           
  2578                           ;incstack = 0
  2579                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2580  0194  0020               	movlb	0	; select bank0
  2581  0195  0830               	movf	___ftadd@f1,w
  2582  0196  00B6               	movwf	??___ftadd
  2583  0197  0831               	movf	___ftadd@f1+1,w
  2584  0198  00B7               	movwf	??___ftadd+1
  2585  0199  0832               	movf	___ftadd@f1+2,w
  2586  019A  00B8               	movwf	??___ftadd+2
  2587  019B  1003               	clrc
  2588  019C  0D37               	rlf	??___ftadd+1,w
  2589  019D  0D38               	rlf	??___ftadd+2,w
  2590  019E  00B9               	movwf	??___ftadd+3
  2591  019F  0839               	movf	??___ftadd+3,w
  2592  01A0  00BC               	movwf	___ftadd@exp1
  2593  01A1  0833               	movf	___ftadd@f2,w
  2594  01A2  00B6               	movwf	??___ftadd
  2595  01A3  0834               	movf	___ftadd@f2+1,w
  2596  01A4  00B7               	movwf	??___ftadd+1
  2597  01A5  0835               	movf	___ftadd@f2+2,w
  2598  01A6  00B8               	movwf	??___ftadd+2
  2599  01A7  1003               	clrc
  2600  01A8  0D37               	rlf	??___ftadd+1,w
  2601  01A9  0D38               	rlf	??___ftadd+2,w
  2602  01AA  00B9               	movwf	??___ftadd+3
  2603  01AB  0839               	movf	??___ftadd+3,w
  2604  01AC  00BB               	movwf	___ftadd@exp2
  2605  01AD  083C               	movf	___ftadd@exp1,w
  2606  01AE  1903               	btfsc	3,2
  2607  01AF  29BC               	goto	l1149
  2608  01B0  083B               	movf	___ftadd@exp2,w
  2609  01B1  023C               	subwf	___ftadd@exp1,w
  2610  01B2  1803               	skipnc
  2611  01B3  29C3               	goto	l1153
  2612  01B4  033C               	decf	___ftadd@exp1,w
  2613  01B5  3AFF               	xorlw	255
  2614  01B6  073B               	addwf	___ftadd@exp2,w
  2615  01B7  00B6               	movwf	??___ftadd
  2616  01B8  3019               	movlw	25
  2617  01B9  0236               	subwf	??___ftadd,w
  2618  01BA  1C03               	skipc
  2619  01BB  29C3               	goto	l1153
  2620  01BC                     l1149:	
  2621  01BC  0833               	movf	___ftadd@f2,w
  2622  01BD  00B0               	movwf	?___ftadd
  2623  01BE  0834               	movf	___ftadd@f2+1,w
  2624  01BF  00B1               	movwf	?___ftadd+1
  2625  01C0  0835               	movf	___ftadd@f2+2,w
  2626  01C1  00B2               	movwf	?___ftadd+2
  2627  01C2  0008               	return
  2628  01C3                     l1153:	
  2629  01C3  083B               	movf	___ftadd@exp2,w
  2630  01C4  1903               	btfsc	3,2
  2631  01C5  0008               	return
  2632  01C6  083C               	movf	___ftadd@exp1,w
  2633  01C7  023B               	subwf	___ftadd@exp2,w
  2634  01C8  1803               	skipnc
  2635  01C9  29D2               	goto	l1159
  2636  01CA  033B               	decf	___ftadd@exp2,w
  2637  01CB  3AFF               	xorlw	255
  2638  01CC  073C               	addwf	___ftadd@exp1,w
  2639  01CD  00B6               	movwf	??___ftadd
  2640  01CE  3019               	movlw	25
  2641  01CF  0236               	subwf	??___ftadd,w
  2642  01D0  1803               	btfsc	3,0
  2643  01D1  0008               	return
  2644  01D2                     l1159:	
  2645  01D2  3006               	movlw	6
  2646  01D3  00B6               	movwf	??___ftadd
  2647  01D4  0836               	movf	??___ftadd,w
  2648  01D5  00BA               	movwf	___ftadd@sign
  2649  01D6  1BB2               	btfsc	___ftadd@f1+2,7
  2650  01D7  17BA               	bsf	___ftadd@sign,7
  2651  01D8  1BB5               	btfsc	___ftadd@f2+2,7
  2652  01D9  173A               	bsf	___ftadd@sign,6
  2653  01DA  17B1               	bsf	___ftadd@f1+1,7
  2654  01DB  30FF               	movlw	255
  2655  01DC  05B0               	andwf	___ftadd@f1,f
  2656  01DD  30FF               	movlw	255
  2657  01DE  05B1               	andwf	___ftadd@f1+1,f
  2658  01DF  3000               	movlw	0
  2659  01E0  05B2               	andwf	___ftadd@f1+2,f
  2660  01E1  17B4               	bsf	___ftadd@f2+1,7
  2661  01E2  30FF               	movlw	255
  2662  01E3  05B3               	andwf	___ftadd@f2,f
  2663  01E4  30FF               	movlw	255
  2664  01E5  05B4               	andwf	___ftadd@f2+1,f
  2665  01E6  3000               	movlw	0
  2666  01E7  05B5               	andwf	___ftadd@f2+2,f
  2667  01E8  083B               	movf	___ftadd@exp2,w
  2668  01E9  023C               	subwf	___ftadd@exp1,w
  2669  01EA  1803               	skipnc
  2670  01EB  2A0E               	goto	l1181
  2671  01EC                     l1171:	
  2672  01EC  3001               	movlw	1
  2673  01ED                     u1265:	
  2674  01ED  35B3               	lslf	___ftadd@f2,f
  2675  01EE  0DB4               	rlf	___ftadd@f2+1,f
  2676  01EF  0DB5               	rlf	___ftadd@f2+2,f
  2677  01F0  0B89               	decfsz	9,f
  2678  01F1  29ED               	goto	u1265
  2679  01F2  3001               	movlw	1
  2680  01F3  02BB               	subwf	___ftadd@exp2,f
  2681  01F4  083B               	movf	___ftadd@exp2,w
  2682  01F5  063C               	xorwf	___ftadd@exp1,w
  2683  01F6  1903               	skipnz
  2684  01F7  2A09               	goto	l1179
  2685  01F8  3001               	movlw	1
  2686  01F9  02BA               	subwf	___ftadd@sign,f
  2687  01FA  083A               	movf	___ftadd@sign,w
  2688  01FB  3907               	andlw	7
  2689  01FC  1903               	btfsc	3,2
  2690  01FD  2A09               	goto	l1179
  2691  01FE  29EC               	goto	l1171
  2692  01FF                     l1177:	
  2693  01FF  3001               	movlw	1
  2694  0200                     u1295:	
  2695  0200  36B2               	lsrf	___ftadd@f1+2,f
  2696  0201  0CB1               	rrf	___ftadd@f1+1,f
  2697  0202  0CB0               	rrf	___ftadd@f1,f
  2698  0203  0B89               	decfsz	9,f
  2699  0204  2A00               	goto	u1295
  2700  0205  3001               	movlw	1
  2701  0206  00B6               	movwf	??___ftadd
  2702  0207  0836               	movf	??___ftadd,w
  2703  0208  07BC               	addwf	___ftadd@exp1,f
  2704  0209                     l1179:	
  2705  0209  083C               	movf	___ftadd@exp1,w
  2706  020A  063B               	xorwf	___ftadd@exp2,w
  2707  020B  1903               	btfsc	3,2
  2708  020C  2A33               	goto	l329
  2709  020D  29FF               	goto	l1177
  2710  020E                     l1181:	
  2711  020E  083C               	movf	___ftadd@exp1,w
  2712  020F  023B               	subwf	___ftadd@exp2,w
  2713  0210  1803               	skipnc
  2714  0211  2A33               	goto	l329
  2715  0212                     l1183:	
  2716  0212  3001               	movlw	1
  2717  0213                     u1325:	
  2718  0213  35B0               	lslf	___ftadd@f1,f
  2719  0214  0DB1               	rlf	___ftadd@f1+1,f
  2720  0215  0DB2               	rlf	___ftadd@f1+2,f
  2721  0216  0B89               	decfsz	9,f
  2722  0217  2A13               	goto	u1325
  2723  0218  3001               	movlw	1
  2724  0219  02BC               	subwf	___ftadd@exp1,f
  2725  021A  083B               	movf	___ftadd@exp2,w
  2726  021B  063C               	xorwf	___ftadd@exp1,w
  2727  021C  1903               	skipnz
  2728  021D  2A2F               	goto	l1191
  2729  021E  3001               	movlw	1
  2730  021F  02BA               	subwf	___ftadd@sign,f
  2731  0220  083A               	movf	___ftadd@sign,w
  2732  0221  3907               	andlw	7
  2733  0222  1903               	btfsc	3,2
  2734  0223  2A2F               	goto	l1191
  2735  0224  2A12               	goto	l1183
  2736  0225                     l1189:	
  2737  0225  3001               	movlw	1
  2738  0226                     u1355:	
  2739  0226  36B5               	lsrf	___ftadd@f2+2,f
  2740  0227  0CB4               	rrf	___ftadd@f2+1,f
  2741  0228  0CB3               	rrf	___ftadd@f2,f
  2742  0229  0B89               	decfsz	9,f
  2743  022A  2A26               	goto	u1355
  2744  022B  3001               	movlw	1
  2745  022C  00B6               	movwf	??___ftadd
  2746  022D  0836               	movf	??___ftadd,w
  2747  022E  07BB               	addwf	___ftadd@exp2,f
  2748  022F                     l1191:	
  2749  022F  083C               	movf	___ftadd@exp1,w
  2750  0230  063B               	xorwf	___ftadd@exp2,w
  2751  0231  1D03               	skipz
  2752  0232  2A25               	goto	l1189
  2753  0233                     l329:	
  2754  0233  1FBA               	btfss	___ftadd@sign,7
  2755  0234  2A45               	goto	l1195
  2756  0235  30FF               	movlw	255
  2757  0236  06B0               	xorwf	___ftadd@f1,f
  2758  0237  30FF               	movlw	255
  2759  0238  06B1               	xorwf	___ftadd@f1+1,f
  2760  0239  30FF               	movlw	255
  2761  023A  06B2               	xorwf	___ftadd@f1+2,f
  2762  023B  3001               	movlw	1
  2763  023C  07B0               	addwf	___ftadd@f1,f
  2764  023D  3000               	movlw	0
  2765  023E  1803               	skipnc
  2766  023F  3001               	movlw	1
  2767  0240  07B1               	addwf	___ftadd@f1+1,f
  2768  0241  3000               	movlw	0
  2769  0242  1803               	skipnc
  2770  0243  3001               	movlw	1
  2771  0244  07B2               	addwf	___ftadd@f1+2,f
  2772  0245                     l1195:	
  2773  0245  1F3A               	btfss	___ftadd@sign,6
  2774  0246  2A57               	goto	l1199
  2775  0247  30FF               	movlw	255
  2776  0248  06B3               	xorwf	___ftadd@f2,f
  2777  0249  30FF               	movlw	255
  2778  024A  06B4               	xorwf	___ftadd@f2+1,f
  2779  024B  30FF               	movlw	255
  2780  024C  06B5               	xorwf	___ftadd@f2+2,f
  2781  024D  3001               	movlw	1
  2782  024E  07B3               	addwf	___ftadd@f2,f
  2783  024F  3000               	movlw	0
  2784  0250  1803               	skipnc
  2785  0251  3001               	movlw	1
  2786  0252  07B4               	addwf	___ftadd@f2+1,f
  2787  0253  3000               	movlw	0
  2788  0254  1803               	skipnc
  2789  0255  3001               	movlw	1
  2790  0256  07B5               	addwf	___ftadd@f2+2,f
  2791  0257                     l1199:	
  2792  0257  01BA               	clrf	___ftadd@sign
  2793  0258  0830               	movf	___ftadd@f1,w
  2794  0259  07B3               	addwf	___ftadd@f2,f
  2795  025A  0831               	movf	___ftadd@f1+1,w
  2796  025B  3DB4               	addwfc	___ftadd@f2+1,f
  2797  025C  0832               	movf	___ftadd@f1+2,w
  2798  025D  3DB5               	addwfc	___ftadd@f2+2,f
  2799  025E  1FB5               	btfss	___ftadd@f2+2,7
  2800  025F  2A72               	goto	l1209
  2801  0260  30FF               	movlw	255
  2802  0261  06B3               	xorwf	___ftadd@f2,f
  2803  0262  30FF               	movlw	255
  2804  0263  06B4               	xorwf	___ftadd@f2+1,f
  2805  0264  30FF               	movlw	255
  2806  0265  06B5               	xorwf	___ftadd@f2+2,f
  2807  0266  3001               	movlw	1
  2808  0267  07B3               	addwf	___ftadd@f2,f
  2809  0268  3000               	movlw	0
  2810  0269  1803               	skipnc
  2811  026A  3001               	movlw	1
  2812  026B  07B4               	addwf	___ftadd@f2+1,f
  2813  026C  3000               	movlw	0
  2814  026D  1803               	skipnc
  2815  026E  3001               	movlw	1
  2816  026F  07B5               	addwf	___ftadd@f2+2,f
  2817  0270  01BA               	clrf	___ftadd@sign
  2818  0271  0ABA               	incf	___ftadd@sign,f
  2819  0272                     l1209:	
  2820  0272  0833               	movf	___ftadd@f2,w
  2821  0273  00F2               	movwf	___ftpack@arg
  2822  0274  0834               	movf	___ftadd@f2+1,w
  2823  0275  00F3               	movwf	___ftpack@arg+1
  2824  0276  0835               	movf	___ftadd@f2+2,w
  2825  0277  00F4               	movwf	___ftpack@arg+2
  2826  0278  083C               	movf	___ftadd@exp1,w
  2827  0279  00B6               	movwf	??___ftadd
  2828  027A  0836               	movf	??___ftadd,w
  2829  027B  00F5               	movwf	___ftpack@exp
  2830  027C  083A               	movf	___ftadd@sign,w
  2831  027D  00B7               	movwf	??___ftadd+1
  2832  027E  0837               	movf	??___ftadd+1,w
  2833  027F  00F6               	movwf	___ftpack@sign
  2834  0280  3185  2570         	fcall	___ftpack
  2835  0282  0872               	movf	?___ftpack,w
  2836  0283  0020               	movlb	0	; select bank0
  2837  0284  00B0               	movwf	?___ftadd
  2838  0285  0873               	movf	?___ftpack+1,w
  2839  0286  00B1               	movwf	?___ftadd+1
  2840  0287  0874               	movf	?___ftpack+2,w
  2841  0288  00B2               	movwf	?___ftadd+2
  2842  0289  0008               	return
  2843  028A                     __end_of___ftadd:	
  2844                           
  2845                           	psect	text12
  2846  078C                     __ptext12:	
  2847 ;; *************** function ___ftneg *****************
  2848 ;; Defined at:
  2849 ;;		line 15 in file "/Applications/microchip/xc8/v1.45/sources/common/ftneg.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  f1              3    2[COMMON] float 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  3    2[COMMON] float 
  2856 ;; Registers used:
  2857 ;;		wreg
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2863 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;Total ram usage:        3 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    2
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_sin
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function ___ftneg
  2879  078C                     ___ftneg:	
  2880                           
  2881                           ;incstack = 0
  2882                           ; Regs used in ___ftneg: [wreg]
  2883  078C  0874               	movf	___ftneg@f1+2,w
  2884  078D  0473               	iorwf	___ftneg@f1+1,w
  2885  078E  0472               	iorwf	___ftneg@f1,w
  2886  078F  1903               	skipnz
  2887  0790  0008               	return
  2888  0791  3080               	movlw	128
  2889  0792  06F4               	xorwf	___ftneg@f1+2,f
  2890  0793  0008               	return
  2891  0794                     __end_of___ftneg:	
  2892                           
  2893                           	psect	text13
  2894  033E                     __ptext13:	
  2895 ;; *************** function ___ftdiv *****************
  2896 ;; Defined at:
  2897 ;;		line 56 in file "/Applications/microchip/xc8/v1.45/sources/common/ftdiv.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  f2              3   39[BANK0 ] float 
  2900 ;;  f1              3   42[BANK0 ] float 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;  f3              3   50[BANK0 ] float 
  2903 ;;  sign            1   54[BANK0 ] unsigned char 
  2904 ;;  exp             1   53[BANK0 ] unsigned char 
  2905 ;;  cntr            1   49[BANK0 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  3   39[BANK0 ] float 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2915 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2916 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;Total ram usage:       16 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; Hardware stack levels required when called:    3
  2922 ;; This function calls:
  2923 ;;		___ftpack
  2924 ;; This function is called by:
  2925 ;;		_sin
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           
  2930                           ;psect for function ___ftdiv
  2931  033E                     ___ftdiv:	
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2935  033E  0020               	movlb	0	; select bank0
  2936  033F  084A               	movf	___ftdiv@f1,w
  2937  0340  00CD               	movwf	??___ftdiv
  2938  0341  084B               	movf	___ftdiv@f1+1,w
  2939  0342  00CE               	movwf	??___ftdiv+1
  2940  0343  084C               	movf	___ftdiv@f1+2,w
  2941  0344  00CF               	movwf	??___ftdiv+2
  2942  0345  1003               	clrc
  2943  0346  0D4E               	rlf	??___ftdiv+1,w
  2944  0347  0D4F               	rlf	??___ftdiv+2,w
  2945  0348  00D0               	movwf	??___ftdiv+3
  2946  0349  0850               	movf	??___ftdiv+3,w
  2947  034A  00D5               	movwf	___ftdiv@exp
  2948  034B  0855               	movf	___ftdiv@exp,w
  2949  034C  1D03               	btfss	3,2
  2950  034D  2B55               	goto	l1347
  2951  034E  3000               	movlw	0
  2952  034F  00C7               	movwf	?___ftdiv
  2953  0350  3000               	movlw	0
  2954  0351  00C8               	movwf	?___ftdiv+1
  2955  0352  3000               	movlw	0
  2956  0353  00C9               	movwf	?___ftdiv+2
  2957  0354  0008               	return
  2958  0355                     l1347:	
  2959  0355  0847               	movf	___ftdiv@f2,w
  2960  0356  00CD               	movwf	??___ftdiv
  2961  0357  0848               	movf	___ftdiv@f2+1,w
  2962  0358  00CE               	movwf	??___ftdiv+1
  2963  0359  0849               	movf	___ftdiv@f2+2,w
  2964  035A  00CF               	movwf	??___ftdiv+2
  2965  035B  1003               	clrc
  2966  035C  0D4E               	rlf	??___ftdiv+1,w
  2967  035D  0D4F               	rlf	??___ftdiv+2,w
  2968  035E  00D0               	movwf	??___ftdiv+3
  2969  035F  0850               	movf	??___ftdiv+3,w
  2970  0360  00D6               	movwf	___ftdiv@sign
  2971  0361  0856               	movf	___ftdiv@sign,w
  2972  0362  1D03               	btfss	3,2
  2973  0363  2B6B               	goto	l1353
  2974  0364  3000               	movlw	0
  2975  0365  00C7               	movwf	?___ftdiv
  2976  0366  3000               	movlw	0
  2977  0367  00C8               	movwf	?___ftdiv+1
  2978  0368  3000               	movlw	0
  2979  0369  00C9               	movwf	?___ftdiv+2
  2980  036A  0008               	return
  2981  036B                     l1353:	
  2982  036B  3000               	movlw	0
  2983  036C  00D2               	movwf	___ftdiv@f3
  2984  036D  3000               	movlw	0
  2985  036E  00D3               	movwf	___ftdiv@f3+1
  2986  036F  3000               	movlw	0
  2987  0370  00D4               	movwf	___ftdiv@f3+2
  2988  0371  3089               	movlw	137
  2989  0372  0756               	addwf	___ftdiv@sign,w
  2990  0373  00CD               	movwf	??___ftdiv
  2991  0374  084D               	movf	??___ftdiv,w
  2992  0375  02D5               	subwf	___ftdiv@exp,f
  2993  0376  084A               	movf	___ftdiv@f1,w
  2994  0377  00CD               	movwf	??___ftdiv
  2995  0378  084B               	movf	___ftdiv@f1+1,w
  2996  0379  00CE               	movwf	??___ftdiv+1
  2997  037A  084C               	movf	___ftdiv@f1+2,w
  2998  037B  00CF               	movwf	??___ftdiv+2
  2999  037C  3010               	movlw	16
  3000  037D                     u1685:	
  3001  037D  36CF               	lsrf	??___ftdiv+2,f
  3002  037E  0CCE               	rrf	??___ftdiv+1,f
  3003  037F  0CCD               	rrf	??___ftdiv,f
  3004  0380  0B89               	decfsz	9,f
  3005  0381  2B7D               	goto	u1685
  3006  0382  084D               	movf	??___ftdiv,w
  3007  0383  00D0               	movwf	??___ftdiv+3
  3008  0384  0850               	movf	??___ftdiv+3,w
  3009  0385  00D6               	movwf	___ftdiv@sign
  3010  0386  0847               	movf	___ftdiv@f2,w
  3011  0387  00CD               	movwf	??___ftdiv
  3012  0388  0848               	movf	___ftdiv@f2+1,w
  3013  0389  00CE               	movwf	??___ftdiv+1
  3014  038A  0849               	movf	___ftdiv@f2+2,w
  3015  038B  00CF               	movwf	??___ftdiv+2
  3016  038C  3010               	movlw	16
  3017  038D                     u1695:	
  3018  038D  36CF               	lsrf	??___ftdiv+2,f
  3019  038E  0CCE               	rrf	??___ftdiv+1,f
  3020  038F  0CCD               	rrf	??___ftdiv,f
  3021  0390  0B89               	decfsz	9,f
  3022  0391  2B8D               	goto	u1695
  3023  0392  084D               	movf	??___ftdiv,w
  3024  0393  00D0               	movwf	??___ftdiv+3
  3025  0394  0850               	movf	??___ftdiv+3,w
  3026  0395  06D6               	xorwf	___ftdiv@sign,f
  3027  0396  3080               	movlw	128
  3028  0397  00CD               	movwf	??___ftdiv
  3029  0398  084D               	movf	??___ftdiv,w
  3030  0399  05D6               	andwf	___ftdiv@sign,f
  3031  039A  17CB               	bsf	___ftdiv@f1+1,7
  3032  039B  30FF               	movlw	255
  3033  039C  05CA               	andwf	___ftdiv@f1,f
  3034  039D  30FF               	movlw	255
  3035  039E  05CB               	andwf	___ftdiv@f1+1,f
  3036  039F  3000               	movlw	0
  3037  03A0  05CC               	andwf	___ftdiv@f1+2,f
  3038  03A1  17C8               	bsf	___ftdiv@f2+1,7
  3039  03A2  30FF               	movlw	255
  3040  03A3  05C7               	andwf	___ftdiv@f2,f
  3041  03A4  30FF               	movlw	255
  3042  03A5  05C8               	andwf	___ftdiv@f2+1,f
  3043  03A6  3000               	movlw	0
  3044  03A7  05C9               	andwf	___ftdiv@f2+2,f
  3045  03A8  3018               	movlw	24
  3046  03A9  00CD               	movwf	??___ftdiv
  3047  03AA  084D               	movf	??___ftdiv,w
  3048  03AB  00D1               	movwf	___ftdiv@cntr
  3049  03AC                     l1367:	
  3050  03AC  3001               	movlw	1
  3051  03AD                     u1705:	
  3052  03AD  35D2               	lslf	___ftdiv@f3,f
  3053  03AE  0DD3               	rlf	___ftdiv@f3+1,f
  3054  03AF  0DD4               	rlf	___ftdiv@f3+2,f
  3055  03B0  0B89               	decfsz	9,f
  3056  03B1  2BAD               	goto	u1705
  3057  03B2  0849               	movf	___ftdiv@f2+2,w
  3058  03B3  024C               	subwf	___ftdiv@f1+2,w
  3059  03B4  1D03               	skipz
  3060  03B5  2BBC               	goto	u1715
  3061  03B6  0848               	movf	___ftdiv@f2+1,w
  3062  03B7  024B               	subwf	___ftdiv@f1+1,w
  3063  03B8  1D03               	skipz
  3064  03B9  2BBC               	goto	u1715
  3065  03BA  0847               	movf	___ftdiv@f2,w
  3066  03BB  024A               	subwf	___ftdiv@f1,w
  3067  03BC                     u1715:	
  3068  03BC  1C03               	skipc
  3069  03BD  2BC5               	goto	l1375
  3070  03BE  0847               	movf	___ftdiv@f2,w
  3071  03BF  02CA               	subwf	___ftdiv@f1,f
  3072  03C0  0848               	movf	___ftdiv@f2+1,w
  3073  03C1  3BCB               	subwfb	___ftdiv@f1+1,f
  3074  03C2  0849               	movf	___ftdiv@f2+2,w
  3075  03C3  3BCC               	subwfb	___ftdiv@f1+2,f
  3076  03C4  1452               	bsf	___ftdiv@f3,0
  3077  03C5                     l1375:	
  3078  03C5  3001               	movlw	1
  3079  03C6                     u1725:	
  3080  03C6  35CA               	lslf	___ftdiv@f1,f
  3081  03C7  0DCB               	rlf	___ftdiv@f1+1,f
  3082  03C8  0DCC               	rlf	___ftdiv@f1+2,f
  3083  03C9  0B89               	decfsz	9,f
  3084  03CA  2BC6               	goto	u1725
  3085  03CB  3001               	movlw	1
  3086  03CC  02D1               	subwf	___ftdiv@cntr,f
  3087  03CD  1D03               	btfss	3,2
  3088  03CE  2BAC               	goto	l1367
  3089  03CF  0852               	movf	___ftdiv@f3,w
  3090  03D0  00F2               	movwf	___ftpack@arg
  3091  03D1  0853               	movf	___ftdiv@f3+1,w
  3092  03D2  00F3               	movwf	___ftpack@arg+1
  3093  03D3  0854               	movf	___ftdiv@f3+2,w
  3094  03D4  00F4               	movwf	___ftpack@arg+2
  3095  03D5  0855               	movf	___ftdiv@exp,w
  3096  03D6  00CD               	movwf	??___ftdiv
  3097  03D7  084D               	movf	??___ftdiv,w
  3098  03D8  00F5               	movwf	___ftpack@exp
  3099  03D9  0856               	movf	___ftdiv@sign,w
  3100  03DA  00CE               	movwf	??___ftdiv+1
  3101  03DB  084E               	movf	??___ftdiv+1,w
  3102  03DC  00F6               	movwf	___ftpack@sign
  3103  03DD  3185  2570         	fcall	___ftpack
  3104  03DF  0872               	movf	?___ftpack,w
  3105  03E0  0020               	movlb	0	; select bank0
  3106  03E1  00C7               	movwf	?___ftdiv
  3107  03E2  0873               	movf	?___ftpack+1,w
  3108  03E3  00C8               	movwf	?___ftdiv+1
  3109  03E4  0874               	movf	?___ftpack+2,w
  3110  03E5  00C9               	movwf	?___ftdiv+2
  3111  03E6  0008               	return
  3112  03E7                     __end_of___ftdiv:	
  3113                           
  3114                           	psect	text14
  3115  0570                     __ptext14:	
  3116 ;; *************** function ___ftpack *****************
  3117 ;; Defined at:
  3118 ;;		line 62 in file "/Applications/microchip/xc8/v1.45/sources/common/float.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  arg             3    2[COMMON] unsigned um
  3121 ;;  exp             1    5[COMMON] unsigned char 
  3122 ;;  sign            1    6[COMMON] unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  3    2[COMMON] float 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3134 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3136 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3137 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3138 ;;Total ram usage:        8 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    2
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		___altoft
  3145 ;;		___ftadd
  3146 ;;		___ftdiv
  3147 ;;		___ftmul
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function ___ftpack
  3153  0570                     ___ftpack:	
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3157  0570  0875               	movf	___ftpack@exp,w
  3158  0571  1903               	btfsc	3,2
  3159  0572  2D78               	goto	l1085
  3160  0573  0874               	movf	___ftpack@arg+2,w
  3161  0574  0473               	iorwf	___ftpack@arg+1,w
  3162  0575  0472               	iorwf	___ftpack@arg,w
  3163  0576  1D03               	skipz
  3164  0577  2D89               	goto	l1091
  3165  0578                     l1085:	
  3166  0578  3000               	movlw	0
  3167  0579  00F2               	movwf	?___ftpack
  3168  057A  3000               	movlw	0
  3169  057B  00F3               	movwf	?___ftpack+1
  3170  057C  3000               	movlw	0
  3171  057D  00F4               	movwf	?___ftpack+2
  3172  057E  0008               	return
  3173  057F                     l1089:	
  3174  057F  3001               	movlw	1
  3175  0580  00F7               	movwf	??___ftpack
  3176  0581  0877               	movf	??___ftpack,w
  3177  0582  07F5               	addwf	___ftpack@exp,f
  3178  0583  3001               	movlw	1
  3179  0584                     u1005:	
  3180  0584  36F4               	lsrf	___ftpack@arg+2,f
  3181  0585  0CF3               	rrf	___ftpack@arg+1,f
  3182  0586  0CF2               	rrf	___ftpack@arg,f
  3183  0587  0B89               	decfsz	9,f
  3184  0588  2D84               	goto	u1005
  3185  0589                     l1091:	
  3186  0589  30FE               	movlw	254
  3187  058A  0574               	andwf	___ftpack@arg+2,w
  3188  058B  1903               	btfsc	3,2
  3189  058C  2DA2               	goto	l298
  3190  058D  2D7F               	goto	l1089
  3191  058E                     l1093:	
  3192  058E  3001               	movlw	1
  3193  058F  00F7               	movwf	??___ftpack
  3194  0590  0877               	movf	??___ftpack,w
  3195  0591  07F5               	addwf	___ftpack@exp,f
  3196  0592  3001               	movlw	1
  3197  0593  07F2               	addwf	___ftpack@arg,f
  3198  0594  3000               	movlw	0
  3199  0595  1803               	skipnc
  3200  0596  3001               	movlw	1
  3201  0597  07F3               	addwf	___ftpack@arg+1,f
  3202  0598  3000               	movlw	0
  3203  0599  1803               	skipnc
  3204  059A  3001               	movlw	1
  3205  059B  07F4               	addwf	___ftpack@arg+2,f
  3206  059C  3001               	movlw	1
  3207  059D                     u1025:	
  3208  059D  36F4               	lsrf	___ftpack@arg+2,f
  3209  059E  0CF3               	rrf	___ftpack@arg+1,f
  3210  059F  0CF2               	rrf	___ftpack@arg,f
  3211  05A0  0B89               	decfsz	9,f
  3212  05A1  2D9D               	goto	u1025
  3213  05A2                     l298:	
  3214  05A2  30FF               	movlw	255
  3215  05A3  0574               	andwf	___ftpack@arg+2,w
  3216  05A4  1903               	btfsc	3,2
  3217  05A5  2DAF               	goto	l1101
  3218  05A6  2D8E               	goto	l1093
  3219  05A7                     l1099:	
  3220  05A7  3001               	movlw	1
  3221  05A8  02F5               	subwf	___ftpack@exp,f
  3222  05A9  3001               	movlw	1
  3223  05AA                     u1045:	
  3224  05AA  35F2               	lslf	___ftpack@arg,f
  3225  05AB  0DF3               	rlf	___ftpack@arg+1,f
  3226  05AC  0DF4               	rlf	___ftpack@arg+2,f
  3227  05AD  0B89               	decfsz	9,f
  3228  05AE  2DAA               	goto	u1045
  3229  05AF                     l1101:	
  3230  05AF  1BF3               	btfsc	___ftpack@arg+1,7
  3231  05B0  2DB5               	goto	l305
  3232  05B1  3002               	movlw	2
  3233  05B2  0275               	subwf	___ftpack@exp,w
  3234  05B3  1803               	skipnc
  3235  05B4  2DA7               	goto	l1099
  3236  05B5                     l305:	
  3237  05B5  1875               	btfsc	___ftpack@exp,0
  3238  05B6  2DBD               	goto	l306
  3239  05B7  30FF               	movlw	255
  3240  05B8  05F2               	andwf	___ftpack@arg,f
  3241  05B9  307F               	movlw	127
  3242  05BA  05F3               	andwf	___ftpack@arg+1,f
  3243  05BB  30FF               	movlw	255
  3244  05BC  05F4               	andwf	___ftpack@arg+2,f
  3245  05BD                     l306:	
  3246  05BD  1003               	clrc
  3247  05BE  0CF5               	rrf	___ftpack@exp,f
  3248  05BF  0875               	movf	___ftpack@exp,w
  3249  05C0  00F7               	movwf	??___ftpack
  3250  05C1  01F8               	clrf	??___ftpack+1
  3251  05C2  01F9               	clrf	??___ftpack+2
  3252  05C3  3010               	movlw	16
  3253  05C4                     u1085:	
  3254  05C4  35F7               	lslf	??___ftpack,f
  3255  05C5  0DF8               	rlf	??___ftpack+1,f
  3256  05C6  0DF9               	rlf	??___ftpack+2,f
  3257  05C7  0B89               	decfsz	9,f
  3258  05C8  2DC4               	goto	u1085
  3259  05C9  0877               	movf	??___ftpack,w
  3260  05CA  04F2               	iorwf	___ftpack@arg,f
  3261  05CB  0878               	movf	??___ftpack+1,w
  3262  05CC  04F3               	iorwf	___ftpack@arg+1,f
  3263  05CD  0879               	movf	??___ftpack+2,w
  3264  05CE  04F4               	iorwf	___ftpack@arg+2,f
  3265  05CF  0876               	movf	___ftpack@sign,w
  3266  05D0  1903               	btfsc	3,2
  3267  05D1  0008               	return
  3268  05D2  17F4               	bsf	___ftpack@arg+2,7
  3269  05D3  0008               	return
  3270  05D4                     __end_of___ftpack:	
  3271                           
  3272                           	psect	text15
  3273  0753                     __ptext15:	
  3274 ;; *************** function _setup_tmr *****************
  3275 ;; Defined at:
  3276 ;;		line 167 in file "main.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    2
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           
  3305                           ;psect for function _setup_tmr
  3306  0753                     _setup_tmr:	
  3307                           
  3308                           ;main.c: 169: INTCON = 0x00;
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _setup_tmr: [wreg+status,2]
  3312  0753  018B               	clrf	11	;volatile
  3313                           
  3314                           ;main.c: 172: INTCON = 0b10000000;
  3315  0754  3080               	movlw	128
  3316  0755  008B               	movwf	11	;volatile
  3317                           
  3318                           ;main.c: 173: OPTION_REG = 0b00000111;
  3319  0756  3007               	movlw	7
  3320  0757  0021               	movlb	1	; select bank1
  3321  0758  0095               	movwf	21	;volatile
  3322                           
  3323                           ;main.c: 174: TMR0 = 0;
  3324  0759  0020               	movlb	0	; select bank0
  3325  075A  0195               	clrf	21	;volatile
  3326                           
  3327                           ;main.c: 175: INTPPS = 0b00010000;
  3328  075B  3010               	movlw	16
  3329  075C  003C               	movlb	28	; select bank28
  3330  075D  0090               	movwf	16	;volatile
  3331                           
  3332                           ;main.c: 178: TRISA = 0x00;
  3333  075E  0021               	movlb	1	; select bank1
  3334  075F  018C               	clrf	12	;volatile
  3335                           
  3336                           ;main.c: 179: PORTA = 0b00000000;
  3337  0760  0020               	movlb	0	; select bank0
  3338  0761  018C               	clrf	12	;volatile
  3339                           
  3340                           ;main.c: 182: INTCON = 0b10100000;
  3341  0762  30A0               	movlw	160
  3342  0763  008B               	movwf	11	;volatile
  3343  0764  0008               	return
  3344  0765                     __end_of_setup_tmr:	
  3345                           
  3346                           	psect	text16
  3347  073F                     __ptext16:	
  3348 ;; *************** function _setup_sci *****************
  3349 ;; Defined at:
  3350 ;;		line 149 in file "main.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    2
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           
  3379                           ;psect for function _setup_sci
  3380  073F                     _setup_sci:	
  3381                           
  3382                           ;main.c: 150: TRISCbits.TRISC4 = 0;
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _setup_sci: [wreg+status,2]
  3386  073F  0021               	movlb	1	; select bank1
  3387  0740  120E               	bcf	14,4	;volatile
  3388                           
  3389                           ;main.c: 152: RC1STAbits.SPEN = 1;
  3390  0741  0023               	movlb	3	; select bank3
  3391  0742  179D               	bsf	29,7	;volatile
  3392                           
  3393                           ;main.c: 153: RC4PPS = 0b00010100;
  3394  0743  3014               	movlw	20
  3395  0744  003D               	movlb	29	; select bank29
  3396  0745  00A4               	movwf	36	;volatile
  3397                           
  3398                           ;main.c: 154: TX1STA = 0x00;
  3399  0746  0023               	movlb	3	; select bank3
  3400  0747  019E               	clrf	30	;volatile
  3401                           
  3402                           ;main.c: 155: TX1STAbits.TXEN = 1;
  3403  0748  169E               	bsf	30,5	;volatile
  3404                           
  3405                           ;main.c: 156: TX1STAbits.SYNC = 0;
  3406  0749  121E               	bcf	30,4	;volatile
  3407                           
  3408                           ;main.c: 157: TX1STAbits.BRGH = 1;
  3409  074A  151E               	bsf	30,2	;volatile
  3410                           
  3411                           ;main.c: 158: TX1STAbits.CSRC = 1;
  3412  074B  179E               	bsf	30,7	;volatile
  3413                           
  3414                           ;main.c: 159: SP1BRGL = 207;
  3415  074C  30CF               	movlw	207
  3416  074D  009B               	movwf	27	;volatile
  3417                           
  3418                           ;main.c: 160: SP1BRGH = 0;
  3419  074E  019C               	clrf	28	;volatile
  3420                           
  3421                           ;main.c: 161: BAUD1CON = 0x00;
  3422  074F  019F               	clrf	31	;volatile
  3423                           
  3424                           ;main.c: 162: BAUD1CONbits.SCKP = 0;
  3425  0750  121F               	bcf	31,4	;volatile
  3426                           
  3427                           ;main.c: 163: BAUD1CONbits.BRG16= 1;
  3428  0751  159F               	bsf	31,3	;volatile
  3429  0752  0008               	return
  3430  0753                     __end_of_setup_sci:	
  3431                           
  3432                           	psect	text17
  3433  0794                     __ptext17:	
  3434 ;; *************** function _setup_irq *****************
  3435 ;; Defined at:
  3436 ;;		line 185 in file "main.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;Total ram usage:        0 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    2
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function _setup_irq
  3466  0794                     _setup_irq:	
  3467                           
  3468                           ;main.c: 187: TRISAbits.TRISA4 = 1;
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _setup_irq: [wreg]
  3472  0794  0021               	movlb	1	; select bank1
  3473  0795  160C               	bsf	12,4	;volatile
  3474                           
  3475                           ;main.c: 188: TRISAbits.TRISA5 = 0;
  3476  0796  128C               	bcf	12,5	;volatile
  3477                           
  3478                           ;main.c: 191: INTPPS = 0b00000100;
  3479  0797  3004               	movlw	4
  3480  0798  003C               	movlb	28	; select bank28
  3481  0799  0090               	movwf	16	;volatile
  3482                           
  3483                           ;main.c: 194: INTCONbits.INTE = 1;
  3484  079A  160B               	bsf	11,4	;volatile
  3485  079B  0008               	return
  3486  079C                     __end_of_setup_irq:	
  3487                           
  3488                           	psect	text18
  3489  06E3                     __ptext18:	
  3490 ;; *************** function _adconv *****************
  3491 ;; Defined at:
  3492 ;;		line 43 in file "main.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  temp            2    0[BANK0 ] unsigned int 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2    2[COMMON] unsigned int 
  3499 ;; Registers used:
  3500 ;;		wreg
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;Total ram usage:       10 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    2
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _adconv
  3522  06E3                     _adconv:	
  3523                           
  3524                           ;main.c: 45: unsigned int temp;
  3525                           ;main.c: 47: GO_nDONE = 1 ;
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in _adconv: [wreg]
  3529  06E3  0021               	movlb	1	; select bank1
  3530  06E4  149D               	bsf	29,1	;volatile
  3531  06E5                     l91:	
  3532                           ;main.c: 48: while(GO_nDONE) ;
  3533                           
  3534  06E5  189D               	btfsc	29,1	;volatile
  3535  06E6  2EE5               	goto	l91
  3536                           
  3537                           ;main.c: 49: temp = ADRESH ;
  3538  06E7  081C               	movf	28,w	;volatile
  3539  06E8  00F4               	movwf	??_adconv
  3540  06E9  01F5               	clrf	??_adconv+1
  3541  06EA  0874               	movf	??_adconv,w
  3542  06EB  0020               	movlb	0	; select bank0
  3543  06EC  00A0               	movwf	adconv@temp
  3544  06ED  0875               	movf	??_adconv+1,w
  3545  06EE  00A1               	movwf	adconv@temp+1
  3546                           
  3547                           ;main.c: 50: temp = ( temp << 8 ) | ADRESL ;
  3548  06EF  0021               	movlb	1	; select bank1
  3549  06F0  081B               	movf	27,w	;volatile
  3550  06F1  00F4               	movwf	??_adconv
  3551  06F2  01F5               	clrf	??_adconv+1
  3552  06F3  0020               	movlb	0	; select bank0
  3553  06F4  0820               	movf	adconv@temp,w
  3554  06F5  00F7               	movwf	??_adconv+3
  3555  06F6  01F6               	clrf	??_adconv+2
  3556  06F7  0874               	movf	??_adconv,w
  3557  06F8  0476               	iorwf	??_adconv+2,w
  3558  06F9  00F8               	movwf	??_adconv+4
  3559  06FA  0875               	movf	??_adconv+1,w
  3560  06FB  0477               	iorwf	??_adconv+3,w
  3561  06FC  00F9               	movwf	??_adconv+5
  3562  06FD  0878               	movf	??_adconv+4,w
  3563  06FE  00A0               	movwf	adconv@temp
  3564  06FF  0879               	movf	??_adconv+5,w
  3565  0700  00A1               	movwf	adconv@temp+1
  3566                           
  3567                           ;main.c: 52: return temp ;
  3568  0701  0821               	movf	adconv@temp+1,w
  3569  0702  00F3               	movwf	?_adconv+1
  3570  0703  0820               	movf	adconv@temp,w
  3571  0704  00F2               	movwf	?_adconv
  3572  0705  0008               	return
  3573  0706                     __end_of_adconv:	
  3574                           
  3575                           	psect	intentry
  3576  0004                     __pintentry:	
  3577 ;; *************** function _isr_func *****************
  3578 ;; Defined at:
  3579 ;;		line 197 in file "main.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;Total ram usage:        2 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    1
  3600 ;; This function calls:
  3601 ;;		_flip_led
  3602 ;; This function is called by:
  3603 ;;		Interrupt level 1
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607  0004                     _isr_func:	
  3608                           
  3609                           ;incstack = 0
  3610  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3611                           
  3612                           ; Regs used in _isr_func: [wreg+status,2+status,0+pclath+cstack]
  3613  0005  3180               	pagesel	$
  3614  0006  0020               	movlb	0	; select bank0
  3615  0007  087F               	movf	127,w
  3616  0008  00F1               	movwf	??_isr_func+1
  3617                           
  3618                           ;main.c: 199: static int tm = 0;
  3619                           ;main.c: 201: INTCONbits.GIE = 0;
  3620  0009  138B               	bcf	11,7	;volatile
  3621                           
  3622                           ;main.c: 203: if(TMR0IF){
  3623  000A  1D0B               	btfss	11,2	;volatile
  3624  000B  2822               	goto	i1l1063
  3625                           
  3626                           ;main.c: 205: if(tm > 5){
  3627  000C  087B               	movf	isr_func@tm+1,w
  3628  000D  3A80               	xorlw	128
  3629  000E  00F0               	movwf	??_isr_func
  3630  000F  3080               	movlw	128
  3631  0010  0270               	subwf	??_isr_func,w
  3632  0011  1D03               	skipz
  3633  0012  2815               	goto	u95_25
  3634  0013  3006               	movlw	6
  3635  0014  027A               	subwf	isr_func@tm,w
  3636  0015                     u95_25:	
  3637  0015  1C03               	skipc
  3638  0016  281D               	goto	i1l1059
  3639                           
  3640                           ;main.c: 206: flip_led();
  3641  0017  3187  2780  3180   	fcall	_flip_led
  3642                           
  3643                           ;main.c: 207: tm = 0;
  3644  001A  01FA               	clrf	isr_func@tm
  3645  001B  01FB               	clrf	isr_func@tm+1
  3646                           
  3647                           ;main.c: 208: } else {
  3648  001C  2821               	goto	i1l1061
  3649  001D                     i1l1059:	
  3650                           
  3651                           ;main.c: 209: tm++;
  3652  001D  3001               	movlw	1
  3653  001E  07FA               	addwf	isr_func@tm,f
  3654  001F  3000               	movlw	0
  3655  0020  3DFB               	addwfc	isr_func@tm+1,f
  3656  0021                     i1l1061:	
  3657                           
  3658                           ;main.c: 210: }
  3659                           ;main.c: 211: TMR0IF &= 0;
  3660  0021  110B               	bcf	11,2	;volatile
  3661  0022                     i1l1063:	
  3662                           
  3663                           ;main.c: 212: }
  3664                           ;main.c: 214: if(INTCONbits.INTF){
  3665  0022  1C8B               	btfss	11,1	;volatile
  3666  0023  282C               	goto	i1l1073
  3667  0024                     i1l130:	
  3668                           ;main.c: 215: while(TX1STAbits.TRMT != 1);
  3669                           
  3670  0024  0023               	movlb	3	; select bank3
  3671  0025  1C9E               	btfss	30,1	;volatile
  3672  0026  2824               	goto	i1l130
  3673                           
  3674                           ;main.c: 216: TX1REG = 'A';
  3675  0027  3041               	movlw	65
  3676  0028  009A               	movwf	26	;volatile
  3677                           
  3678                           ;main.c: 217: INTCONbits.INTF &= 0;
  3679  0029  108B               	bcf	11,1	;volatile
  3680                           
  3681                           ;main.c: 221: PORTAbits.RA5 = 1;
  3682  002A  0020               	movlb	0	; select bank0
  3683  002B  168C               	bsf	12,5	;volatile
  3684  002C                     i1l1073:	
  3685                           
  3686                           ;main.c: 222: }
  3687                           ;main.c: 224: INTCONbits.GIE = 1;
  3688  002C  178B               	bsf	11,7	;volatile
  3689                           
  3690                           ;main.c: 225: return;
  3691  002D  0871               	movf	??_isr_func+1,w
  3692  002E  0020               	movlb	0	; select bank0
  3693  002F  00FF               	movwf	127
  3694  0030  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3695  0031  0009               	retfie
  3696  0032                     __end_of_isr_func:	
  3697                           
  3698                           	psect	text20
  3699  0780                     __ptext20:	
  3700 ;; *************** function _flip_led *****************
  3701 ;; Defined at:
  3702 ;;		line 136 in file "main.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_isr_func
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function _flip_led
  3731  0780                     _flip_led:	
  3732                           
  3733                           ;main.c: 137: PORTAbits.RA5 = !PORTAbits.RA5;
  3734                           
  3735                           ;incstack = 0
  3736                           ; Regs used in _flip_led: [status,0]
  3737  0780  1003               	clrc
  3738  0781  0020               	movlb	0	; select bank0
  3739  0782  1E8C               	btfss	12,5	;volatile
  3740  0783  1403               	setc
  3741  0784  1C03               	btfss	3,0
  3742  0785  2F89               	goto	u91_20
  3743  0786  0020               	movlb	0	; select bank0
  3744  0787  168C               	bsf	12,5	;volatile
  3745  0788  0008               	return
  3746  0789                     u91_20:	
  3747  0789  0020               	movlb	0	; select bank0
  3748  078A  128C               	bcf	12,5	;volatile
  3749  078B  0008               	return
  3750  078C                     __end_of_flip_led:	
  3751  007E                     btemp	set	126	;btemp
  3752  007E                     int$flags	set	126
  3753  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    27
    Data        0
    BSS         4
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80      0       5
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_adconv
    _floor->___fttol
    ___altoft->___ftpack
    ___altoft->___fttol
    ___ftmul->___ftpack
    ___ftmul->___ftpack
    ___ftadd->___ftpack
    ___ftdiv->___ftpack

Critical Paths under _isr_func in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sin
    _sin->___ftdiv
    _floor->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftsub->_floor
    ___ftadd->___ftmul
    ___ftdiv->_eval_poly

Critical Paths under _isr_func in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_func in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_func in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_func in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_func in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_func in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_func in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_func in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr_func in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr_func in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr_func in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr_func in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr_func in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11     7      4   33646
                                             69 BANK0     11     7      4
                            ___ftmul
                             _adconv
                          _setup_irq
                          _setup_sci
                          _setup_tmr
                                _sin
 ---------------------------------------------------------------------------------
 (1) _sin                                                 14    11      3   30343
                                             55 BANK0     14    11      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (2) _floor                                                9     6      3    7952
                                             29 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     336
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1082
                                              2 COMMON     6     0      6
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___altoft                                             8     4      4    2351
                                              6 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7496
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     348
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3164
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3745
                                             38 BANK0      6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3422
                                             16 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     237
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2478
                                             39 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2070
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _setup_tmr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_sci                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_irq                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adconv                                              10     8      2      68
                                              2 COMMON     8     6      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr_func                                             2     2      0       0
                                              0 COMMON     2     2      0
                           _flip_led
 ---------------------------------------------------------------------------------
 (6) _flip_led                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftmul
     ___ftpack
     ___ftpack (ARG)
   _adconv
   _setup_irq
   _setup_sci
   _setup_tmr
   _sin
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
           ___ftpack (ARG)
         ___wmul
     ___ftge
     ___ftmul
       ___ftpack
       ___ftpack (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge
         ___fttol
         _frexp
     _eval_poly
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul
         ___ftpack
         ___ftpack (ARG)
       ___wmul
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftge
       ___fttol
       _frexp

 _isr_func (ROOT)
   _flip_led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       5       7        6.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      61      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      61      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Feb 11 17:10:46 2018

           ___altoft@exp 002C              __CFG_CP$OFF 0000            ___altoft@sign 002D  
                     l91 06E5      ___wmul@multiplicand 0074             ___ftadd@exp1 003C  
           ___ftadd@exp2 003B              __CFG_LVP$ON 0000             ___ftadd@sign 003A  
                    l102 056D                      l305 05B5                      l137 072C  
                    l306 05BD                      l504 0114                      l329 0233  
                    l298 05A2                      l389 0454                      _PR2 001B  
                    _sin 003D             __CFG_BORV$HI 0000                      wreg 0009  
           _BAUD1CONbits 019F             ___ftdiv@cntr 0051             ___ftdiv@sign 0056  
                   l1101 05AF                     l1115 0726                     l1209 0272  
                   l1153 01C3                     l1321 0465                     l1091 0589  
                   l1171 01EC                     l1315 044B                     l1307 0430  
                   l1331 06BA                     l1093 058E                     l1085 0578  
                   l1181 020E                     l1149 01BC                     l1261 02FA  
                   l1245 02B7                     l1317 0457                     l1309 043E  
                   l1191 022F                     l1183 0212                     l1159 01D2  
                   l1239 02A1                     l1089 057F                     l1353 036B  
                   l1177 01FF                     l1273 0316                     l1257 02F2  
                   l1433 062D                     l1099 05A7                     l1347 0355  
                   l1195 0245                     l1179 0209                     l1603 0498  
                   l1189 0225                     l1269 030E                     l1375 03C5  
                   l1367 03AC                     l1199 0257                     l1607 04A0  
                   l1289 0400                     l1617 04EB                     l1395 070E  
                   l1635 0063                     l1581 0662                     l1567 0686  
                   l1647 00E1                     l1569 0696                     l1577 064B  
                   l1687 052B                     ?_sin 0057                     u1005 0584  
                   u1025 059D                     u1115 072D                     u2020 00DD  
                   u1045 05AA                     u1125 0732                     u2030 00DE  
                   u1085 05C4                     u1325 0213                     u1265 01ED  
                   u1355 0226                     u1525 0317                     u1295 0200  
                   u1535 031D                     u1455 02C3                     u1705 03AD  
                   u1465 02D3                     u1625 044C                     u1715 03BC  
                   u1725 03C6                     u1485 02FB                     u1565 0407  
                   u1495 0301                     u1905 068B                     u1595 0431  
                   u1685 037D                     u1695 038D                     _TMR0 0015  
                   _TMR2 001A                     _WPUA 020C             __CFG_WRT$OFF 0000  
                   _main 04F3             ___ftpack@arg 0072             ___ftpack@exp 0075  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   sin@f 0057                     sin@y 005B                     start 0032  
          __CFG_IESO$OFF 0000             ___ftmul@cntr 002E             ___ftmul@sign 002F  
           ___fttol@exp1 0025             ___fttol@lval 0021                    ??_sin 005A  
                  ?_main 0065          __end_of___ftadd 028A            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 03E7          __end_of___ftneg 0794          __end_of___ftmul 033E  
        __end_of___ftsub 0724          __end_of___fttol 046E                    _T2CON 001C  
                  i1l130 0024                    _PORTA 000C                    _PORTC 000E  
                  _TRISA 008C                    _TRISC 008E                    u91_20 0789  
     __end_ofsin@coeff_a 0774       __end_ofsin@coeff_b 0780                    u95_25 0015  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000                    _floor 046E  
                  _frexp 06AE                    _errno 00A3            ___ftpack@sign 0076  
         __CFG_BOREN$OFF 0000                    sin@x2 0061                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 0034  
           __end_of_main 0570           __CFG_LPBOR$OFF 0000                   ??_main 0069  
          ___fttol@sign1 0020           __CFG_PLLEN$OFF 0000                   _ADCON0 009D  
                 _ADCON1 009E                   ?_floor 003D                   ?_frexp 0072  
       __end_of___altoft 06AE                   _ADRESH 009C                   _ADRESL 009B  
                 _CCPR1L 0291           __CFG_ZCDDIS$ON 0000                   _ANSELA 018C  
                 _ANSELC 018E         __end_of___ftpack 05D4                   _RC2PPS 0EA2  
                 _RC4PPS 0EA4                   i1l1061 0021                   i1l1063 0022  
                 i1l1073 002C                   i1l1059 001D                   _INTCON 000B  
                 _INTPPS 0E10                   _OSCCON 0099                   _TMR0IF 005A  
                 _TMR2ON 00E2                   _TX1REG 019A                   _TX1STA 019E  
                 ___ftge 0634         __end_of_flip_led 078C                   _adconv 06E3  
                 ___wmul 0724                ??___ftadd 0036           __CFG_STVREN$ON 0000  
              ??___ftdiv 004D                ??___ftneg 0075                ??___ftmul 0026  
              ??___ftsub 007A                ??___fttol 0076         __end_of_isr_func 0032  
                 main@yd 00A0                   floor@i 0041                   floor@x 003D  
  ___ftmul@f3_as_product 002B                   sin@sgn 0064  __end_of__initialization 0039  
             ___altoft@c 0026               ___ftadd@f1 0030               ___ftadd@f2 0033  
             ___ftge@ff1 0072               ___ftge@ff2 0075             eval_poly@res 0044  
             ___ftdiv@f1 004A               ___ftdiv@f2 0047               ___ftdiv@f3 0052  
             ___ftneg@f1 0072               ___ftmul@f1 0020               ___ftmul@f2 0023  
             ___ftsub@f1 0049               ___ftsub@f2 0046               ___fttol@f1 0072  
         __pcstackCOMMON 0070            __end_of_floor 04F3            __end_of_frexp 06E3  
                ??_floor 0040                  ??_frexp 0076               __pbssBANK1 00A3  
     __size_of_eval_poly 0060               __pmaintext 04F3                  ?___ftge 0072  
                ?_adconv 0072                  ?___wmul 0072               __pintentry 0004  
                _CCP1CON 0293                ?___altoft 0026                ?___ftpack 0072  
                _SP1BRGH 019C                  _SP1BRGL 019B       __size_of_setup_irq 0008  
     __size_of_setup_sci 0014       __size_of_setup_tmr 0012               adconv@temp 0020  
                _PWM3DCH 0618                  _PWM3DCL 0617                ?_flip_led 0070  
              ?_isr_func 0070          __size_of___ftge 003D                  ___ftadd 0194  
                ___ftdiv 033E                  ___ftneg 078C          __size_of_adconv 0023  
        __size_of___wmul 001B                  ___ftmul 028A                  ___ftsub 0706  
                ___fttol 03E7               ??___altoft 002A               ??___ftpack 0077  
      __end_of_eval_poly 0634                  __ptext1 003D                  __ptext2 046E  
                __ptext3 06AE                  __ptext4 03E7                  __ptext5 0634  
                __ptext6 0671                  __ptext7 05D4                  __ptext8 0724  
                __ptext9 028A                  _sin$644 005E             __size_of_sin 0157  
                main@num 006E               ??_flip_led 0070     end_of_initialization 0039  
             ??_isr_func 0070        __end_of_setup_irq 079C        __end_of_setup_sci 0753  
      __end_of_setup_tmr 0765                _PORTAbits 000C         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C                _TRISCbits 008E              ___ftdiv@exp 0055  
            ___ftmul@exp 002A           __end_of___ftge 0671           __end_of_adconv 0706  
         __end_of___wmul 073F               floor@expon 0044      start_initialization 0034  
             eval_poly@d 0040               eval_poly@n 0042               eval_poly@x 003D  
            __end_of_sin 0194               frexp@value 0072                 ??___ftge 0020  
               ??_adconv 0074                 ??___wmul 0076        __size_of___altoft 003D  
      __size_of___ftpack 0064              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_flip_led 000C               sin@coeff_a 0765  
             sin@coeff_b 0774               isr_func@tm 007A                __pnvBANK1 00A0  
      __size_of_isr_func 002E                 ?___ftadd 0030                 ?___ftdiv 0047  
               ?___ftneg 0072                 ?___ftmul 0020                 ?___ftsub 0046  
               ?___fttol 0072         __CFG_PPS1WAY$OFF 0000                 _BAUD1CON 019F  
              _eval_poly 05D4           __size_of_floor 0085           __size_of_frexp 0035  
         ___wmul@product 0076                 _GO_nDONE 04E9                _setup_irq 0794  
              _setup_sci 073F                _setup_tmr 0753        ___wmul@multiplier 0072  
             ?_eval_poly 003D                frexp@eptr 0075         __size_of___ftadd 00F6  
             ?_setup_irq 0070               ?_setup_sci 0070         __size_of___ftdiv 00A9  
             ?_setup_tmr 0070         __size_of___ftneg 0008                 ___altoft 0671  
       __size_of___ftmul 00B4         __size_of___ftsub 001E         __size_of___fttol 0087  
               ___ftpack 0570                 _main$643 006B                 __ptext10 0706  
               __ptext11 0194                 __ptext20 0780                 __ptext12 078C  
               __ptext13 033E                 __ptext14 0570                 __ptext15 0753  
               __ptext16 073F                 __ptext17 0794                 __ptext18 06E3  
               _flip_led 0780            __size_of_main 007D                 _isr_func 0004  
             _RC1STAbits 019D                 int$flags 007E                 main@argc 0065  
               main@argv 0067               _INTCONbits 000B              ??_eval_poly 007A  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000              ??_setup_irq 0072  
            ??_setup_sci 0072              ??_setup_tmr 0072            __pstringtext1 0765  
          __pstringtext2 0774               _OPTION_REG 0095               _TX1STAbits 019E  
